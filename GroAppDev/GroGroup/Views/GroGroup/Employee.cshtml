@{
    ViewBag.Title = "Employee";
    Layout = "~/Views/Shared/ContentLayout.cshtml";
}
@*<link href="~/css/Theadscroll.css" rel="stylesheet" />*@
<meta name="viewport" content="width=device-width, initial-scale=1.0">
@{
    var CssStyle = @"@media only screen and (max-width:760px),(min-device-width:768px) and (max-device-width:1024px){.dytable table,.dytable tbody,.dytable td,.dytable th,.dytable thead,.dytable tr{display:block} .dytable thead tr{position:absolute;top:-9999px;left:-9999px}.dytable tr{border:1px solid #ccc}.dytable td{border-bottom:1px solid #eee;position:relative;padding-left:50%;width:49%;}.dytable td:before{position:absolute;top:6px;left:6px;width:45%;padding-right:10px;white-space:nowrap}.dytable td{ text-align: left !important;}
                    .dytable tr td:nth-of-type(1):before{content:'Initials';font-weight: bold;}
                    .dytable tr td:nth-of-type(2):before{content:'Name';font-weight: bold;}
                    .dytable tr td:nth-of-type(3):before{content:'Phone';font-weight: bold;}
                    .dytable tr td:nth-of-type(4):before{content:'Email';font-weight: bold;}
                    .dytable tr td:nth-of-type(5):before{content:'Access Level';font-weight: bold;}
                    .dytable tr td:nth-of-type(6):before{content:'Inactive';font-weight: bold;}
 @media only screen and (min-device-width :320px) and (max-device-width :480px){body{padding:0;margin:0;width:100%}}@media only screen and (min-device-width:768px) and (max-device-width:1024px){body{width:100%}}";
}
<style type="text/css">
        @Html.Raw(CssStyle)
</style>
<style>
    input[type="text"],input[type="password"] {
        background-color: white !important;
        border-color: #ddd !important;
        font-weight: bold;
        color: black;
        font-size: 13px;
    }

    select {
        background-color: white !important;
        border-color: #ddd !important;
        font-weight: bold;
        color: black;
        font-size: 13px;
    }


    .correctborder{
           padding: 15px 12px;
           margin-bottom: 5px;
   }
    
    table#TbPay {
        display: flex;
        flex-flow: column;
        
        width: 100%;
    }
        table#TbPay thead {
            flex: 0 0 auto;
            width:100%;
        }
        table#TbPay tbody {
            flex: 1 1 auto;
            display: block;
            overflow-y: overlay;
            overflow-x: hidden;
        }
            table#TbPay tbody tr {
                width: 100%;
            }

            table#TbPay tbody td {
                word-wrap: break-word;
            }

        table#TbPay thead th {
            word-wrap: break-word;
        }

        table#TbPay thead, table#TbPay tbody tr {
            display: table;
            table-layout: fixed;
        }   

    label, input, button, select, textarea {
        font-size: 14px;
        font-weight: normal;
    }
    .container{
    max-width:1200px !important;
    } 
</style>
<script type="text/javascript">
    var Employee;
    var GInitial, initial = "";
    var rowIndex = 0;
    var empLevel;
    $(document).ready(function () {

        Employee = new viewModel();
        cmbsearch = Employee;
        ko.applyBindings(Employee);

        $("#btnAdd").click({ handler: Employee.Add });
        $("#btnEdit").click({ handler: Employee.Edit });
        $("#btnSave").click({ handler: Employee.Save });
        $("#btnDelete").click({ handler: Employee.Delete });
        $("#btnCancel").click({ handler: Employee.cancel });

        //For IE
        var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g);
        if (isIE) {
            $('table#TbPay tbody').css("overflow-y", "scroll");
            $('table#TbPay thead').css("width", "98.5%");
        }
    });

    function viewModel() {


        var self = this;
        self.AddMode = ko.observable(false);
        self.EditMode = ko.observable(true);
        self.SaveMode = ko.observable(false);
        self.DeleteMode = ko.observable(true);
        self.EnableDisableMode = ko.observable(true);
        self.EnableDisableModeInact = ko.observable(true);
        self.EnableDisable = ko.observable(true);
        self.txtname = ko.observable();
        self.txtinitials = ko.observable();
        self.txtpwd = ko.observable();
        self.txtemplevel = ko.observable();
        self.txtemail = ko.observable();
        self.txtPhone = ko.observable();
        self.CmbAccesslevel = ko.observableArray([]);
        self.txtAccessLevel = ko.observable();
        self.chkinactive = ko.observable(false);
        self.Empgrid = ko.observableArray([]);
        $('#TbPay').css('max-height', $(window).height() - 500 + 'px');
        $(".clickableRow").live("click", function () {
            if (self.SaveMode() == true && self.AddMode() == true) {
                $('.clickableRow').removeClass('success selected');
                return false;
            }
            else if (self.SaveMode() == true && self.AddMode() == false) {
                $('.clickableRow').removeClass('success selected');
                $('#' + rowIndex).addClass('success selected');
            }
            else {
                rowIndex = $(this).attr("id");
                $('.clickableRow').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        empLevel = '@ViewBag.empLevel';

        $.ajax({
            url: "getUserGroup",
            type: "POST",
            success: function (response) {
                self.CmbAccesslevel(response.Items);
            }
        });
        self.FillEmployee = function () {
            $.ajax({
                url: "getEmployeesList",
                data: { initial: initial },
                type: "POST",
                success: function (response) {
                    self.Empgrid(response.Items);
                    if (response.rowindex > 0) {
                        $('#TbPay tbody tr:eq(' + response.rowindex + ')').addClass('success selected');
                        self.SelectEmployee(response.Items[response.rowindex]);
                        rowIndex = response.rowindex;
                    }
                    else {
                        $('#TbPay tbody tr:first').addClass('success selected');
                        self.SelectEmployee(response.Items[0]);
                        rowIndex = response.rowindex;
                    }
                }
            });
        }
        self.SelectEmployee = function (Item) {
            if (self.SaveMode() == true) {
                $('.clickableRow').removeClass('success selected');
                return false;
            }
            else {
                GInitial = Trim(Item.initials);
                self.txtname(Item.name);
                self.txtinitials(Trim(Item.initials));
                self.txtpwd(Item.password);
                self.txtPhone(Item.Phone);
                self.txtemail(Item.Email);
                self.txtAccessLevel(Item.empLevel);
                if (Item.Inactive == "True" || Item.Inactive == true)
                    self.chkinactive(true);
                else
                    self.chkinactive(false);

            }
        }
        self.Add = function () {
            if (empLevel == 5) {
                self.EnableDisableModeInact(false);
                if (self.SaveMode() == true)
                    return false;
                self.txtname("");
                self.txtinitials("");
                self.txtpwd("");
                self.txtPhone("");
                self.txtemail("");
                self.txtemplevel("");
                self.txtAccessLevel("");
                self.chkinactive(false);

                self.AddMode(true);
                self.SaveMode(true);
                self.EditMode(false);
                self.EnableDisableMode(false);
                self.EnableDisable(false);
            }
            else {
                self.EnableDisableModeInact(true);
                alert("Gro Group", "You dont have permission to access");

            }
            $('.clickableRow').removeClass('success selected');
            document.getElementById('initials').focus();

        }
        self.Edit = function () {
            if (empLevel == 5) {
                self.EnableDisableModeInact(false);
                if (self.Empgrid().length == 0)
                    return false;
                self.EditMode(false);
                self.AddMode(false);
                self.SaveMode(true);
                self.EnableDisableMode(false);
            }
            else {
                self.EnableDisableModeInact(true);
                alert("Gro Group", "You dont have permission to access");
            }
            self.EnableDisable(true);

            document.getElementById('Name').focus();
        }

        self.Save = function () {
            if (self.txtinitials() == null || self.txtinitials() == "") {
                $.msgBox({
                    title: "Gro Group",
                    content: "You must enter the Initials",
                    type: "info",
                    buttons: [{ value: "Ok" }],
                    afterClose: function (result) {
                        document.getElementById('initials').focus();
                    }
                });
                return false;
            }
            if (self.txtpwd() == null || self.txtpwd() == "") {
                $.msgBox({
                    title: "Gro Group",
                    content: "You must enter the Password",
                    type: "info",
                    buttons: [{ value: "Ok" }],
                    afterClose: function (result) {
                        document.getElementById('password').focus();
                    }
                });
                return false;
            }

            if (self.txtPhone().length < 12 && self.txtPhone().length != 0) {
                $.msgBox({
                    title: "Gro Group",
                    content: "Please enter the valid Phone number",
                    type: "info",
                    buttons: [{ value: "Ok" }],
                    afterClose: function (result) {
                        document.getElementById('Phone').focus();
                    }
                });
                return false;
            }

            if (self.txtemail() != null && self.txtemail() != "") {
                if (!ValidateEmail(self.txtemail())) {
                    $.msgBox({
                        title: "Gro Group", content: "Invalid Email",
                        afterClose: function (result) {
                            document.getElementById('email').select();
                        }
                    });
                    return false;
                }
            }

            if (self.txtAccessLevel() == null || self.txtAccessLevel() == "") {
                $.msgBox({
                    title: "Gro Group",
                    content: "You must enter the Access Level",
                    type: "info",
                    buttons: [{ value: "Ok" }],
                    afterClose: function (result) {
                        document.getElementById('Accesslevel').focus();
                    }
                });
                return false;
            }

            if (self.AddMode() == true) {
                $.ajax({
                    url: "ValidateEmpInitial",
                    data: { initials: self.txtinitials() },
                    type: "POST",
                    async: false,
                    success: function (response) {
                        if (response.Items == true) {
                            $.msgBox({
                                title: "Gro Group", content: "Initial already exists",
                                afterClose: function (result) {
                                    self.txtinitials("");
                                    document.getElementById('initials').focus();
                                    return false;
                                }
                            });
                        }
                        else {
                            save_employee();
                        }
                    }
                });

            }
            else {
                save_employee();
            }
        }

        function save_employee() {
            ObjEmployee = [];
            ObjEmployee = {
                initials: self.txtinitials(),
                name: self.txtname(),
                password: self.txtpwd(),
                Phone: self.txtPhone(),
                Email: self.txtemail(),
                empLevel: self.txtAccessLevel(),
                inactive: self.chkinactive()
            }
            $.ajax({
                url: "SaveEmployee",
                data: { ObjEmpList: JSON.stringify(ObjEmployee), IsAddMode: self.AddMode() },
                type: "POST",
                success: function (response) {
                    initial = response.Items;
                    self.FillEmployee();
                }
            });
            self.SaveMode(false);
            self.AddMode(false);
            self.EditMode(true);
            self.EnableDisableMode(true);
            if (empLevel == 5)
                self.EnableDisableModeInact(false);
            else
                self.EnableDisableModeInact(true);
            self.EnableDisable(true);
        }



        self.Delete = function () {
            if (empLevel == 5) {
                if (self.SaveMode() == true || self.Empgrid().length == 0)
                    return false;
                alerterror("Denied", "Record cannot be deleted");
            }
            else
            {
                alert("Gro Group", "You dont have permission to access");
            }
            //$.msgBox({
            //    title: "Gro Group",
            //    content: "Are you sure you want to delete record ?",
            //    type: "confirm",
            //    buttons: [{ value: "Yes" }, { value: "No" }],
            //    success: function (result) {
            //        if (result == "Yes") {
            //            $.ajax({
            //                url: "DeleteEmployee",
            //                data: { Initials: GInitial },
            //                type: "POST",
            //                success: function (response) {
            //                    self.FillEmployee();
            //                }
            //            });
            //        }
            //        self.SaveMode(false);
            //        self.AddMode(false);
            //        self.EditMode(true);
            //        self.EnableDisableMode(true);
            //    }
            //});
        }

        $("#btnCancel").click(function () {
            if (empLevel == 5) {
                if (self.SaveMode() != true)
                    return false;
                alertconfirm("Are You Sure", "Do you want to cancel current changes ?", self.confirmcancel, true, false);
            }
            else
            {
                alert("Gro Group", "You dont have permission to access");
            }
        })


        self.confirmcancel = function () {
            self.EnableDisableMode(true);
            if (empLevel == 5)
                self.EnableDisableModeInact(false);
            else
                self.EnableDisableModeInact(true);
            self.EnableDisable(true);
            self.SaveMode(false);
            self.EditMode(true);
            self.AddMode(false);
            $('#TbPay tbody tr:eq(' + rowIndex + ')').addClass('success selected');
            self.SelectEmployee(self.Empgrid()[rowIndex]);
        }

        self.FillEmployee();

        function Trim(str) {
            if (str == null || str == "" || str == "null") {
                return "";
            }
            else
                return str.replace(/^\s+|\s+$/g, "");
        }

    }

</script>
  <div class="container">
    <div class="row-fluid">
        <ul class="list-nostyle list-inline tooltipsample">
            <li><a data-placement="bottom" data-rel="tooltip" data-original-title="Add" title="Add" class="btn btn-primary" id="btnAdd"><i class="icon-file icon-white"></i></a></li>
            <li data-bind="visible: EditMode"><a data-placement="bottom" data-rel="tooltip" data-original-title="Edit" title="Edit" class="btn btn-warning" id="btnEdit"><i class="icon-edit icon-white"></i></a></li>
            <li data-bind="visible: SaveMode"><a data-placement="bottom" data-rel="tooltip" data-original-title="Save" title="Save" class="btn btn-warning" id="btnSave"><i class="icon-list-alt icon-white"></i></a></li>
            <li><a data-placement="bottom" data-rel="tooltip" data-original-title="Delete" title="Delete" class="btn btn-danger" id="btnDelete"><i class="icon-remove icon-white"></i></a></li>
            <li><a data-placement="bottom" data-rel="tooltip" data-original-title="Cancel" title="Cancel" class="btn btn-info" id="btnCancel"><i class="iconsweets-arrowleft iconsweets-white"></i></a></li>
        </ul>
    </div>
    <div class="row-fluid">
        <div class="widgetbox">
            <h4 class="widgettitle">Employee</h4>
            <div class="widgetcontent">
                <div class="correctborder">
                    <div class="row-fluid">
                        <div class="span1">
                            <label class="span4 mob-span">Initials</label>
                            <input id="initials" type="text" style="width:60px;" maxlength="3" required data-bind="disable:EnableDisable,value:txtinitials" />
                        </div>
                        <div class="span2">
                            <label class="span4 mob-span">Name</label>
                            <input id="Name" type="text" class="input-medium" maxlength="25" data-bind="disable:EnableDisableMode,value:txtname" />
                        </div>
                        <div class="span2">
                            <label class="span4 mob-span">Password</label>
                            <input id="password" type="password" class="input-medium" maxlength="10" required data-bind="disable:EnableDisableMode,value:txtpwd" />
                        </div>
                        <div class="span2">
                            <label class="span4 mob-span">Phone</label>
                            <input id="Phone" type="text" class="input-medium" maxlength="12" onkeypress="return numbersonly(this,event,true);" data-bind="disable:EnableDisableMode,value:txtPhone" />
                        </div>
                        <div class="span2 mob-div-span">
                            <label id="lbl-email" class="span6 mob-span">Email</label>
                            <input id="email" class="input-medium" type="text" maxlength="30"  data-bind="disable: EnableDisableMode,value:txtemail"/>
                        </div>
                        <div class="span2 mob-div-span">
                            <label class="span2 mob-span">AccessLevel</label>
                            <select id="Accesslevel" class="input-medium" required data-bind="disable: EnableDisableMode,options:CmbAccesslevel,optionsText:'Description',optionsValue:'GroupID',value:txtAccessLevel,optionsCaption:' '"></select>
                        </div>
                        <div class="span1">
                            <label for="chkinactive" class="span12 mob-span">Inactive</label>
                            <input id="chkinactive" type="checkbox" data-bind="disable:EnableDisableModeInact,checked:chkinactive" />
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                        <table id="TbPay" class="dytable table table-bordered table-hover">
                            <thead style="width:100%;">
                                <tr>
                                    <th style="width:60px;">Initial</th>
                                    <th style="width:160px !important;">Name</th>
                                    <th style="width:160px !important;">Phone</th>
                                    <th style="width:160px !important;">Email</th>
                                    <th style="width:160px !important;">Access Level</th>
                                    <th style="width:60px;">Inactive</th>
                                </tr>
                            </thead>
                            <tbody data-bind="foreach:$root.Empgrid">
                                <tr class="clickableRow" data-bind="click:$root.SelectEmployee,attr:{id: $index()}">
                                    <td style="width:60px;" data-bind="text:initials"></td>
                                    <td style="width:160px !important;" data-bind="text:name"></td>
                                    <td style="width:160px !important;" data-bind="text:Phone"></td>
                                    <td style="width:160px !important;" data-bind="text:Email"></td>
                                    <td style="width:160px !important;" data-bind="text:Description"></td>
                                    @*<td data-bind="checked: Inactive == 'True' ? true : false"></td>*@
                                    <td style="width:60px;"> <input type="checkbox" data-bind="checked: Inactive == 'True' ? true : false" /></td>
                                </tr>
                            </tbody>
                        </table>

                </div>
            </div>
        </div>
    </div>

</div>