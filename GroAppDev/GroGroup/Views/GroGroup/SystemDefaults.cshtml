
@{
    ViewBag.Title = "frmAR_TicketCheckin";
    Layout = "~/Views/Shared/ContentLayout.cshtml";
}
<link rel="stylesheet" href="@Url.Content("~/css/responsive-screen.css")" type="text/css" />
<style>
    .ui-datepicker-year {
            width: 80px !important;
        }
    .ui-datepicker-month {
            width: 70px !important;
        }
    textarea, select, input[type="text"] {
            -webkit-appearance: none;
            background-color: white !important;
            border-color: #ddd !important;
            font-weight: normal;
            color: black;
            font-size: 13px;
        }
    .container{max-width:1200px !important;}
</style>
<script type="text/javascript">
    var search;
    //var blurevent = false;
    $(document).ready(function () {
        sysdlt = new viewModel();
        search = sysdlt;
        ko.applyBindings(sysdlt);

        $("#Arrive").datepicker();
        $("#btnEdit").click({ handler: sysdlt.Edit });
        $("#btnSave").click({ handler: sysdlt.Save });
        $("#btnCancel").click({ handler: sysdlt.Cancel });
    });
        function viewModel() {
                var self = this;
                var dblclic = false;

                self.EnableDisableMode = ko.observable(true);
                self.EditMode = ko.observable(true);
                self.SaveMode = ko.observable(false);

                self.txtcompany = ko.observable();
                self.txtaddress1 = ko.observable();
                self.txtaddress2 = ko.observable();
                self.txtcity = ko.observable();
                self.txtstate = ko.observable();
                self.txtzip = ko.observable();
                self.txttempdir = ko.observable();
                self.txtdatadir = ko.observable();
                self.txtquerydir = ko.observable();
                self.pgmyr = ko.observable();

                self.txtMeetingcode = ko.observable();
                self.txtStartdate = ko.observable();
                self.txtDay1 = ko.observable();
                self.txtDay2 = ko.observable();
                self.txtDay3 = ko.observable();
                self.txtDay4 = ko.observable();
                self.txtDay5 = ko.observable();
                self.txtDay6 = ko.observable();
                self.txtDay7 = ko.observable();
                self.AllowedIPs = ko.observable();
                //self.txtmfgno = ko.observable();
                //self.txtdistno = ko.observable();
                //self.txtgwno = ko.observable();
                //self.txtgcno = ko.observable();
                //self.txtperiod = ko.observable();
                self.txtcurr_dt = ko.observable();
                self.txtprg_end_dt = ko.observable();
                self.txtfy_end_dt = ko.observable();
                self.txtrrty = ko.observable();
                self.txtrrly = ko.observable();
                self.txtrrpy = ko.observable();
                self.txtrrbatch = ko.observable();
                self.txtym1 = ko.observable();
                self.txtym2 = ko.observable();
                self.SelectedFillSystemDefaults = ko.observable();
                self.fillsystemgrid = ko.observable();
            function fillsystemgrid() {
                $.ajax({
                    url: "FillSystemDefaults",
                    type: "POST",
                    async: false,
                    success: function (response) {
                        if (response.Items != null && response.Items.length > 0)
                            self.SelectedFillSystemDefaults(response.Items);
                        self.txtcompany(response.Items[0].company);
                        self.txtaddress1(response.Items[0].address1);
                        self.txtaddress2(response.Items[0].address2);

                        self.txtcity(response.Items[0].city);
                        self.txtstate(response.Items[0].state);
                        self.txtzip(response.Items[0].zip);

                        self.txttempdir(response.Items[0].tempdir);
                        self.txtdatadir(response.Items[0].datadir);
                        self.txtquerydir(response.Items[0].querydir);
                        self.pgmyr(response.Items[0].ProgramYear);

                        self.txtMeetingcode(response.Items[0].Meetingcode);
                        self.txtStartdate(DateBind(response.Items[0].Startdate));
                        self.txtDay1(response.Items[0].Day1);
                        self.txtDay2(response.Items[0].Day2);
                        self.txtDay3(response.Items[0].Day3);
                        self.txtDay4(response.Items[0].Day4);
                        self.txtDay5(response.Items[0].Day5);
                        self.txtDay6(response.Items[0].Day6);
                        self.txtDay7(response.Items[0].Day7);
                        self.AllowedIPs(response.Items[0].AllowedIPs);


                        //self.txtmfgno(response.Items[0].mfgno);
                        //self.txtdistno(response.Items[0].distno);
                        //self.txtgwno(response.Items[0].gwno);

                        //self.txtgcno(response.Items[0].gcno);

                        self.txtcurr_dt(response.Items[0].curr_dt);

                        self.txtprg_end_dt(response.Items[0].prg_end_dt);
                        self.txtfy_end_dt(response.Items[0].fy_end_dt);
                        self.txtrrty(response.Items[0].rrty);

                        self.txtrrly(response.Items[0].rrly);
                        self.txtrrpy(response.Items[0].rrpy);
                        //self.txtperiod(response.Items[0].period);

                        self.txtrrbatch(response.Items[0].rrbatch);
                        self.txtym1(response.Items[0].ym1);
                        self.txtym2(response.Items[0].ym2);
                    }
                });
            }
            fillsystemgrid();

                self.Edit = function ()
                {
                    self.SaveMode(true);
                    self.EditMode(false);
                    self.EnableDisableMode(false);
                    $("#Address1").focus();
                    $("#txtname").prop('readonly', true);
                }




                self.txtzipsearch = function () {
                    if (self.SaveMode() == true) {
                        if (self.txtstate() == "" && self.txtcity() == "") {
                            //blurevent = true;
                            self.txtzip(document.getElementById('txtzip').value);
                            if (self.txtzip() == null || self.txtzip() == "") {
                                return false;
                            }
                            $.ajax({
                                url: "searchzip",
                                data: { getzip: self.txtzip() },
                                type: "POST",
                                success: function (response) {
                                    if (response.Items.length > 0) {
                                        self.txtcity(response.Items[0].City);
                                        self.txtstate(response.Items[0].State);
                                    }
                                    else {
                                        self.txtcity("");
                                        self.txtstate("");
                                    }
                                }
                            });
                        }
                        else {
                            return false;
                        }
                    }
                }





                self.Save = function () {

                    var isdatecomplvalidate, isdatecomplvalidateto = "";
                    if (self.txtcurr_dt() != null && self.txtcurr_dt() != "") {
                        if (self.txtcurr_dt().length == 6) {
                            isdatecomplvalidate = true;
                            isdatecomplvalidate = isValidPeriod(self.txtcurr_dt());
                        }
                        else {
                            isdatecomplvalidate = false;
                        }
                        if (isdatecomplvalidate == false) {
                            $.msgBox({
                                title: "Gro Group",
                                content: "Please enter the valid current EOM",
                                type: "info",
                                buttons: [{ value: "Ok" }],
                                afterClose: function (result) {
                                    document.getElementById('curr_dt').focus();
                                }
                            });
                            return false;
                        }
                    }

                    if (self.txtprg_end_dt() != null && self.txtprg_end_dt() != "") {
                        if (self.txtprg_end_dt().length == 6) {
                            isdatecomplvalidateto = true;
                            isdatecomplvalidateto = isValidPeriod(self.txtprg_end_dt());
                        }
                        else {
                            isdatecomplvalidateto = false;
                        }
                        if (isdatecomplvalidateto == false) {
                            $.msgBox({
                                title: "Gro Group",
                                content: "Please enter the valid program end",
                                type: "info",
                                buttons: [{ value: "Ok" }],
                                afterClose: function (result) {
                                    document.getElementById('prg_end_dt').focus();
                                }
                            });
                            return false;
                        }
                    }

                    if (self.txtfy_end_dt() != null && self.txtfy_end_dt() != "") {
                        if (self.txtfy_end_dt().length == 6) {
                            isdatecomplvalidateto = true;
                            isdatecomplvalidateto = isValidPeriod(self.txtfy_end_dt());
                        }
                        else {
                            isdatecomplvalidateto = false;
                        }
                        if (isdatecomplvalidateto == false) {
                            $.msgBox({
                                title: "Gro Group",
                                content: "Please enter the valid FY end",
                                type: "info",
                                buttons: [{ value: "Ok" }],
                                afterClose: function (result) {
                                    document.getElementById('fy_end_dt').focus();
                                }
                            });
                            return false;
                        }
                    }


                    if (self.txtym1() != null && self.txtym1() != "") {
                        if (self.txtym1().length == 6) {
                            isdatecomplvalidateto = true;
                            isdatecomplvalidateto = isValidPeriod(self.txtym1());
                        }
                        else {
                            isdatecomplvalidateto = false;
                        }
                        if (isdatecomplvalidateto == false) {
                            $.msgBox({
                                title: "Gro Group",
                                content: "Please enter the valid period from",
                                type: "info",
                                buttons: [{ value: "Ok" }],
                                afterClose: function (result) {
                                    document.getElementById('txtym1').focus();
                                }
                            });
                            return false;
                        }
                    }


                    if (self.txtym2() != null && self.txtym2() != "") {
                        if (self.txtym2().length == 6) {
                            isdatecomplvalidateto = true;
                            isdatecomplvalidateto = isValidPeriod(self.txtym2());
                        }
                        else {
                            isdatecomplvalidateto = false;
                        }
                        if (isdatecomplvalidateto == false) {
                            $.msgBox({
                                title: "Gro Group",
                                content: "Please enter the valid period to",
                                type: "info",
                                buttons: [{ value: "Ok" }],
                                afterClose: function (result) {
                                    document.getElementById('txtym2').focus();
                                }
                            });
                            return false;
                        }
                    }

                    if (self.txtStartdate() != null && self.txtStartdate() != "") {
                        var isdatecomplvalidate = isValidDate(self.txtStartdate());
                        if (isdatecomplvalidate == false) {
                            $.msgBox({
                                title: "Gro Group",
                                content: "Please enter the Valid Start Date",
                                type: "info",
                                buttons: [{ value: "Ok" }],
                                afterClose: function (result) {
                                    document.getElementById('Arrive').focus();
                                }
                            });
                            return false;
                        }
                    }

                    var systemobj = [];
                    systemobj = {
                        company: self.txtcompany(),
                        address1: self.txtaddress1(),
                        address2: self.txtaddress2(),
                        city: self.txtcity(),
                        state: self.txtstate(),
                        zip: self.txtzip(),
                        curr_dt: self.txtcurr_dt(),
                        prg_end_dt: self.txtprg_end_dt(),
                        fy_end_dt: self.txtfy_end_dt(),
                        pgmyr:self.pgmyr(),
                        Meetingcode: self.txtMeetingcode(),
                        Startdate: self.txtStartdate(),
                        Day1: self.txtDay1(),
                        Day2: self.txtDay2(),
                        Day3: self.txtDay3(),
                        Day4: self.txtDay4(),
                        Day5: self.txtDay5(),
                        Day6: self.txtDay6(),
                        Day7: self.txtDay7(),
                        AllowedIPs: self.AllowedIPs(),
                        rrty: self.txtrrty(),
                        rrly: self.txtrrly(),
                        rrpy: self.txtrrpy(),
                        rrbatch: self.txtrrbatch(),
                        ym1: self.txtym1(),
                        ym2: self.txtym2()
                    }

                    $.ajax({
                        url: "SavesystemDefaults",
                        data: { objsystemDefaults: JSON.stringify(systemobj) },
                        type: "POST",
                        success: function (response) {
                            self.EditMode(true);
                            self.SaveMode(false);
                            self.EnableDisableMode(true);
                            if (response.ItemMsg != undefined && response.ItemMsg != null && response.ItemMsg != "") {
                                alert("Gro Group", response.ItemMsg);
                            }
                            else {
                                fillsystemgrid();
                            }
                        }
                    });

                }
                self.Cancel = function () {
                    if (self.SaveMode() != true)
                        return false;
                    alertconfirm("Are You Sure", "Do you want to cancel current changes ?", self.confirmcancel, true, false);

                }
                self.confirmcancel = function () {
                    fillsystemgrid();
                    self.EditMode(true);
                    self.SaveMode(false);
                    self.EnableDisableMode(true);

                }

            }


</script>
<div class="container">
    <div class="row-fluid">
        <ul class="list-nostyle list-inline tooltipsample mob-top">
            <li data-bind="visible: EditMode"><a data-placement="bottom" data-rel="tooltip" data-original-title="Edit" title="Edit" class="btn btn-warning" id="btnEdit"><i class="icon-edit icon-white"></i></a></li>
            <li data-bind="visible: SaveMode"><a data-placement="bottom" data-rel="tooltip" data-original-title="Save" title="Save" class="btn btn-warning" id="btnSave"><i class="icon-list-alt icon-white"></i></a></li>
            <li><a data-placement="bottom" data-rel="tooltip" data-original-title="Cancel" title="Cancel" class="btn btn-info" id="btnCancel" data-bind="enable:SaveMode"><i class="iconsweets-arrowleft iconsweets-white"></i></a></li>
        </ul>
    </div>
    <div class="row-fluid">
        <div class="widgetbox">
            <h4 class="widgettitle">System Maintanence</h4>
            <div class="widgetcontent">
                <div class="row-fluid">
                    <div class="span6">
                        <div class="widgetbox">
                            <h4 class="widgettitle">Company Profile</h4>
                            <div class="widgetcontent correctborder">
                                <div class="row-fluid">
                                    <label class="span4 mob-span">Name</label>
                                    <input id="txtname" maxlength="50" class="dsktop-input-large mob-text" type="text" data-bind="disable: EnableDisableMode,value:txtcompany" />
                                </div>
                                <div class="row-fluid">
                                    <label class="span4 mob-span">Address</label>
                                    <input id="Address1" maxlength="50" class="dsktop-input-large mob-text" type="text" data-bind="disable: EnableDisableMode,value:txtaddress1" />
                                    <input id="Address2" maxlength="50" class="dsktop-input-large mob-text" type="text" data-bind="disable: EnableDisableMode,value:txtaddress2" />
                                </div>
                                <div class="row-fluid">
                                    <label class="span4 mob-span">City/State/Zip</label>
                                    <input id="city" class="city-width" maxlength="50" type="text" data-bind="disable: EnableDisableMode,value:txtcity" />
                                    <input id="state" class="state-width" maxlength="50" type="text" data-bind="disable: EnableDisableMode,value:txtstate" />
                                    <input id="txtzip" class="cntry-width" maxlength="50" type="text" data-bind="disable: EnableDisableMode,value:txtzip,event:{blur:txtzipsearch}" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="span6">
                        <div class="widgetbox">
                            <h4 class="widgettitle">Report Dates (yyyymm)</h4>
                            <div class="widgetcontent correctborder col-padding" id="RRDates">
                                <div class="row-fluid">
                                    <label class="span4 mob-span">Current EOM</label>
                                    <input id="curr_dt" maxlength="6" class="input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode, value:txtcurr_dt" />
                                </div>
                                <div class="row-fluid">
                                    <label class="span4 mob-span">Program END</label>
                                    <input id="prg_end_dt" maxlength="6" class="input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode, value:txtprg_end_dt" />
                                </div>
                                <div class="row-fluid">
                                    <label class="span4 mob-span">FY End</label>
                                    <input id="fy_end_dt" maxlength="6" class="input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode, value:txtfy_end_dt" />
                                </div>
                                <div class="row-fluid">
                                    <label class="span4 mob-span">Period</label>
                                    <input id="txtym1" class="input-small" maxlength="6" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode,value:txtym1" />
                                    <input id="txtym2" class="input-small" maxlength="6" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode,value:txtym2" />
                                </div>
                                <div class="row-fluid">
                                    <label class="span4 mob-span">Program Year</label>
                                    <input id="txtPgmyr" maxlength="5" class="input-small"  type="text" data-bind="disable: EnableDisableMode,value:pgmyr" />
                                    @*<input id="Thisyr" maxlength="5" class="input-small" type="text" data-bind="disable: EnableDisableMode, value:txtrrty" />*@

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <h4 class="widgettitle">Room List Info</h4>
                    <div class="widgetcontent correctborder">
                        <div class="row-fluid">
                            <div class="row-fluid">
                                <div class="span4">
                                    <label class="span4 mob-span">Meeting Code</label>
                                    <input id="Meetingcode" maxlength="20" class="mob-input-large input-small" type="text" data-bind="disable: EnableDisableMode, value:txtMeetingcode" disabled="">
                                </div>
                                <div class="span6">
                                    <label class="span2 mob-span">Start Date</label>
                                    <input id="Arrive" maxlength="10" type="text" class="input-small textbox_size" data-bind="disable: EnableDisableMode, value: txtStartdate" disabled="">
                                </div>
                            </div>

                        </div>
                        <div class="row-fluid">
                            <div class="span2">
                                <label class="span12 mob-span">Contracted Rooms: </label>
                            </div>
                            <div class="span10 in-leftmar">
                                <div class="span1">
                                    <label class="span12 mob-span">Day 1</label>
                                    <input id="Day1" maxlength="4" class="mb-sm input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode, value:txtDay1" />
                                </div>
                                <div class="span1">
                                    <label class="span12 mob-span">Day 2</label>
                                    <input id="Day2" maxlength="4" class="mb-sm input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode, value:txtDay2" />
                                </div>
                                <div class="span1">
                                    <label class="span12 mob-span">Day 3</label>
                                    <input id="Day3" maxlength="4" class="mb-sm input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode, value:txtDay3" />
                                </div>
                                <div class="span1">
                                    <label class="span12 mob-span">Day 4</label>
                                    <input id="Day4" maxlength="4" class="mb-sm input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode,value:txtDay4" />
                                </div>
                                <div class="span1">
                                    <label class="span12 mob-span">Day 5</label>
                                    <input id="Day5" maxlength="4" class="mb-sm input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode,value:txtDay5" />
                                </div>
                                <div class="span1">
                                    <label class="span12 mob-span">Day 6</label>
                                    <input id="Day6" maxlength="4" class="mb-sm input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode,value:txtDay6" />
                                </div>
                                <div class="span1">
                                    <label class="span12 mob-span">Day 7</label>
                                    <input id="Day7" maxlength="4" class="mb-sm input-small" onkeypress="return numbers(this)" type="text" data-bind="disable: EnableDisableMode,value:txtDay7" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row-fluid">
                    <h4 class="widgettitle">Benefit Report Headings</h4>
                    <div class="widgetcontent correctborder">
                        <div class="row-fluid">
                            <div class="span2">
                                <label class="span10 mob-span">This Year</label>
                                <input id="Thisyr" maxlength="5" class="input-small" type="text" data-bind="disable: EnableDisableMode, value:txtrrty" />
                            </div>
                            <div class="span2">
                                <label class="span10 mob-span">Last Year</label>
                                <input id="Lastyr" maxlength="5" class="input-small" type="text" data-bind="disable: EnableDisableMode, value:txtrrly" />
                            </div>
                            <div class="span2">
                                <label class="span10 mob-span">Prior Year</label>
                                <input id="Perioryr" maxlength="5" class="input-small" type="text" data-bind="disable: EnableDisableMode, value:txtrrpy" />
                            </div>
                            <div class="span3 mob-div-span">
                                <label class="span12 mob-span">Benefit Batch/Last Updated</label>
                                <input id="BenifitBatup" maxlength="50" class="dsktop-input-large input-small" onkeypress="return numbers(this)" type="text" data-bind="value:txtrrbatch" disabled="disabled" />
                            </div>

                        </div>
                    </div>

                </div>
                <div class="row-fluid">
                    <h4 class="widgettitle">Access Info</h4>
                    <div class="widgetcontent">
                        <div class="row-fluid">
                            <label class="span12">Allowed IPs</label>
                            <textarea id="Allowed" rows="2" cols="10" maxlength="8000" style="resize:none;margin-left: 0px; width:75%;height:100px" data-bind="disable: EnableDisableMode, value:AllowedIPs"></textarea>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
