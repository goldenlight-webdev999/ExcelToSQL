@{
    ViewBag.Title = "Reports";
    Layout = "~/Views/Shared/ContentLayout.cshtml";
}

<script type="text/javascript" src="@Url.Content("~/time-picker/jquery.timepicker.min.js")"></script>
<link href="@Url.Content("~/time-picker/jquery.timepicker.css")" rel="stylesheet" type="text/css" />
<style type="text/css">
    nav ul {
        background: white !important;
    }

        nav ul li .expclass:hover {
            background-color: #BCD8F3;
            color: #800909;
            width: 5px;
        }

    nav li ul {
        display: none;
    }



    nav li:hover > ul {
        display: inline-block;
    }

    .sub-menu li a {
        line-height: 10px;
        padding-left: 45px;
        padding-bottom: 10px;
        width: 180px !important;
    }


    .option-content {
        z-index: 1000 !important;
    }

        .option-content a {
            width: 210px !important;
            z-index: 1000 !important;
        }

    fieldset.scheduler-border {
        border: 1px groove #ddd !important;
        padding: 0 1.4em 1.4em 1.4em !important;
        margin: 0 0 1.5em 0 !important;
        -webkit-box-shadow: 0px 0px 0px 0px #000;
        box-shadow: 0px 0px 0px 0px #000;
        height: 245px;
    }

    legend.scheduler-border {
        font-size: 1.2em !important;
        font-weight: bold !important;
        text-align: left !important;
        width: auto;
        padding: 0 10px;
        border-bottom: none;
    }

    .thisdropdown-menu {
        position: absolute;
        z-index: 1000;
        float: right;
        min-width: 100px;
        padding: 5px 5px;
        font-size: 12px;
        text-align: left;
        list-style: none;
        background-color: #fff;
        -webkit-background-clip: padding-box;
        background-clip: padding-box;
        border: 1px solid #ccc;
        border: 1px solid rgba(0,0,0,.15);
        border-radius: 4px;
        -webkit-box-shadow: 0 6px 12px rgba(0,0,0,.175);
        box-shadow: 0 6px 12px rgba(0,0,0,.175);
    }

    .lbldropdown-menu {
        left: 500px;
        position: absolute;
        z-index: 1000;
        float: right;
        min-width: 100px;
        padding: 5px 5px;
        font-size: 12px;
        text-align: left;
        list-style: none;
        background-color: #fff;
        -webkit-background-clip: padding-box;
        background-clip: padding-box;
        border: 1px solid #ccc;
        border: 1px solid rgba(0,0,0,.15);
        border-radius: 4px;
        -webkit-box-shadow: 0 6px 12px rgba(0,0,0,.175);
        box-shadow: 0 6px 12px rgba(0,0,0,.175);
    }

    .dtli:hover {
        background: #0866c6 !important;
        color: white !important;
    }

    .classli {
        background-color: white !important;
        color: black !important;
    }

        .classli:hover {
            background-color: black;
            color: white !important;
        }

    .loading {
        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;
        position: fixed;
        opacity: 0.7;
        background-color: #fff;
        z-index: 99;
        text-align: center;
    }

    .loading-image {
        position: absolute;
        top: 50%;
        left: 50%;
        z-index: 100;
    }

    .ui-datepicker-year {
        width: 80px !important;
    }

    .ui-datepicker-month {
        width: 70px !important;
    }

    .grid-menu {
        position: absolute;
        z-index: 1000;
        float: right;
        min-width: 100px;
        padding: 20px;
        font-size: 12px;
        text-align: left;
        list-style: none;
        background-color: #FFF;
        -webkit-background-clip: padding-box;
        background-clip: padding-box;
        border: 1px solid #ccc;
        border: 1px solid rgba(0,0,0,.15);
        border-radius: 4px;
        -webkit-box-shadow: 0 6px 12px rgba(0,0,0,.175);
        box-shadow: 0 6px 12px rgba(0,0,0,.175);
        border-color: lightgray;
    }

        .grid-menu:after {
            border-left: solid transparent 10px;
            border-right: solid transparent 10px;
            border-bottom: solid #FFF 10px;
            top: -9px;
            height: 0;
            left: 2%;
            position: absolute;
            width: 0;
        }

    .triangle {
        position: absolute;
        top: -15px;
        left: 50%;
        margin-left: -15px;
        border-bottom: 15px solid #002952;
        border-right: 15px solid transparent;
        border-left: 15px solid transparent;
    }

    #divSlide.open {
        line-height: 1;
        position: absolute;
        height: 500px;
        top: 50px;
        left: 0px;
        z-index: 100;
    }

    #divSlide.close {
        line-height: 1;
        position: absolute;
        height: 500px;
        top: 50px;
        left: -260px;
        z-index: 10;
    }

    #ViewAutoReportDialog {
        overflow: hidden;
    }

    label {
        font-size: 15px;
        font-weight: normal;
        font-family: calibri;
    }

    input[type="text"] {
        background-color: white;
        border-color: #ddd;
        font-weight: bold;
        color: black;
        font-size: 12px;
    }

    textarea {
        background-color: white;
        border-color: #ddd;
        font-weight: bold;
        color: black;
        font-size: 13px;
    }

    button[type="button"] {
        font-weight: bold;
        font-family: sans-serif;
    }

    select {
        -webkit-appearance: none;
        background-color: white;
        border-color: #ddd;
        font-weight: bold;
        color: black;
        font-size: 13px;
    }

    input[type="checkbox"] {
        background-color: white;
        border-color: #ddd;
        font-weight: bold;
        color: black;
        font-size: 13px;
    }

    input[type="number"] {
        background-color: white;
        border-color: #ddd;
        font-weight: bold;
        color: black;
        font-size: 13px;
    }

    .modal-header {
        padding: 0px !important;
        border-bottom: none !important;
    }

    .modal-body {
        padding: 0px !important;
        overflow-y: scroll;
    }

    cke_1_contents {
        height: 400px !important;
    }

    popupscreen {
        margin-top: -15px !important;
        float: right;
    }
</style>

<script type="text/javascript">
    var Exportbtn = "false";
    var favouritesoption = "";
    var DisplayName = "";
    var showfilt = [];
    var caseL = false;
    var DataTypeFile = "";
    var selaccts = "";
    var Eselaccts = "";
    var secno = "";
    var IsAdmin = '@ViewBag.AdminMem';
    var Guser = '@ViewBag.Nuser';
    var GridData = "";
    var ReportscreenClicked = false;
    var AdditionalSQL = [];
    var Lookupfieldlist = [];
    var secpointNO = "";
    var sqlselect = "";
    var RepList;
    var hidden;
    var Description = "";
    var id;
    var id1;
    var obj;
    var filtercount;
    var filter = "";
    var filtercolname = "";
    var myvalue = "";
    var res = "";
    var fieldnamearray = [];
    var Displaynamearray = [];
    var fieldname = "", headername = "";
    var bindfield = [];
    var dbclick = false;
    var value = "";
    var conditionparam = "";
    var gridfields = "";
    var mailpath = "";
    var Letters = "";
    var browse = "";
    var memblist = "";
    var multiselectval = [];
    var multiselectlocationval = [];
    var multiselectlocationtype = [];
    var search;
    var currlocation = '@ViewBag.Location';
    var showfilters = false;
    var singledateinput = false;
    var operatorvalue = "=";
    var singletimeinput = false;
    var tooltipinfo = "";
    var selaccts = "";
    var itemcode = "";
    var valus = "";
    var valus2 = "";
    var itid = "";
    var clasid = "";
    var chkfieldary = [];
    var dat = false;
    var itemclus = false;
    var itemnofield = "";
    var GselectAllLen = 0;
    var OptionMenuName = "";
    var filterdescription = "";
    var userfilter = "";
    var IsIntelligentFilter = false;
    var ChkMAX = "";
    var ChkMAX1 = "";
    var chkcombo = "";

    var Filterselect;
    var sqlwherefromsecpoints = '';
    var Requreid = false;
    var ReqId = "";
    $('#Strtime').timepicker();
    $('#Entime').timepicker();
    var sortbyparam = "";
    var StrDisplayval;
    var ReportMenuDesc = "";

    var ReportviewCol = "";
    var chkhtml = "View All Columns";
    var checkdt = "";

    var ReportcontrolElements = "";
    var xmlcontent;
    var saveparamxml = false;
    var MembergpEmail = "";
    var Cdate, Cm, Cy, CyCM;



    $(document).ready(function () {
        RepList = new viewModel();
        ko.applyBindings(RepList);

        $("#SearchSelected").click({ handler: RepList.searchselected });
        $('#btnchangfolder').click({ handler: RepList.UploadFile });
        $('#imgfile').change({ handler: RepList.UploadFileChange });
        $("#btnSavereport").click({ handler: RepList.ReportDescriptSave });
        $("#OKbutton").click({ handler: RepList.DatasetOK });
        $("#btnCreate").click({ handler: RepList.Create });

        $("#btnSaveList").click({ handler: RepList.SaveList });
        $("#btnDelList").click({ handler: RepList.DelList });
        $("#btnSyncList").click({ handler: RepList.SyncList });
        $('#txtExistingList').change({ handler: RepList.ExistingList });

        $("#cmbSaveParameters").change({ handler: RepList.SaveParametersChange });
        $("#imgclearparams").click({ handler: RepList.ClearSaveParam });
        $("#btnSaveReportParam").click({ handler: RepList.SaveReportParamClick });
        $("#CmbSelectDocument").change({ handler: RepList.FileNameChange });

        jQuery('.tabbedwidget').tabs();
        search = RepList;

        $('#Calpanal').css('height', "700px");
        $(".handle").css('height', "700px");



        $("div.slide-out-div").removeClass('open');
        $("div.slide-out-div").addClass('close').fadeIn("slow");
        $(".handle").show();

        $(".handle").click(function () {
            if ($("#Calpanal").attr("isHide") == "true") {
                $("#Calpanal").attr("isHide", false);

                $("div.slide-out-div").removeClass('close');
                $("div.slide-out-div").addClass('open').fadeIn("slow");
                $(".handle").hide();
            }
            else {
                $("#Calpanal").attr("isHide", true);

                $("div.slide-out-div").removeClass('open');
                $("div.slide-out-div").addClass('close').fadeIn("slow");
                $(".handle").show();
            }
        });

        $("#Calpanal").mouseleave(function () {
            $("#Calpanal").attr("isHide", true);
            $("#Calpanal").css("width", "260px");
            $("div.slide-out-div").removeClass('open');
            $("div.slide-out-div").addClass('close').fadeIn("slow");
            $(".handle").show();
        });

        $(".handle").mouseover(function () {
            $("#Calpanal").attr("isHide", false);
            $("#Calpanal").css("width", "360px");
            $("div.slide-out-div").removeClass('close');
            $("div.slide-out-div").addClass('open').fadeIn("slow");
            $(".handle").hide();
        });

        $("#ViewAutoReportDialog").dialog({
            autoOpen: false,
            height: 500,
            width: 1000,
            modal: true,
            close: function () {
            }
        });

        $("#AdminPwdDialog").dialog({
            draggable: true,
            autoOpen: false,
            autoresize: false,
            modal: true,
            width: 300,
            height: 150
        });

        $("#Mailpreviewdialog").dialog({
            draggable: false,
            autoOpen: false,
            autoresize: false,
            modal: true,
            dragable: false,
            width: 400,
            height: 370
        });

        $("#sendtextdialog").dialog({
            title: "Send Text",
            draggable: false,
            autoOpen: false,
            autoresize: false,
            modal: true,
            dragable: false,
            width: 400,
            height: 370
        });


        $("#Createdatasetdialog").dialog({
            draggable: false,
            autoOpen: false,
            autoresize: false,
            modal: true,
            dragable: false,
            width: 400,
            height: 200
        });

        $("#Createcustomdatasetdialog").dialog({
            draggable: false,
            autoOpen: false,
            autoresize: false,
            modal: true,
            dragable: false,
            width: 400,
            height: 220
        });

        $("#CreateAptusMailDialog").dialog({
            draggable: false,
            autoOpen: false,
            autoresize: false,
            modal: true,
            dragable: false,
            width: 400,
            height: 250
        });

        $("#loading").fadeOut();

        $("a.ui-tabs-anchor").click(function () {
            Filterselect = $("#tabs").tabs('option', 'active');
            if (Filterselect > 0) {
                saveparamxml = true;
                if (ReportMenuDesc.toUpperCase() != "GO TO MEMBER") {
                    RepList.FillGridandreport();
                }
            }
            else {
                ReportMenuDesc = "";
            }
        });

        $('#tabs').css('height', ($(window).height() - 30 + "px"));
        $('#reportpage').css('height', ($(window).height() - 100 + "px"));
        $('#gridpage').css('height', ($(window).height() - 50 + "px"));

        $("#tabs").tabs("option", "disabled", [1, 2]);
        document.getElementById('cmbGridExport').style.visibility = "hidden";
    });


    $('#gridpage').css('height', ($(window).height() - 60 + "px"));
    $(window).resize(function () {
        $('#gridpage').css('height', ($(window).height() - 60 + "px"));
    });


    $("#tabs").live("click", function () {
        var xx = document.getElementById('gridpage').contentWindow.document.getElementById("cmbGridExport");
        if (xx != null && xx != undefined) {
            xx.click();
        }
    });

    $("#FilterDiv").live("click", function () {
        document.getElementById('drpdown').style.visibility = "hidden";
        document.getElementById('cmbGridExport').style.visibility = "hidden";
        filterdescription = "";
        Exportbtn = "false";
        $.ajax({
            url: "ReportOptionsList",
            type: "POST",
            async: false,
            data: { IsAddFavourites: favouritesoption, IsExport: Exportbtn },
            success: function (response) {
                var shwfil;
                for (i = 0; i < response.Items.length ; i++) {
                    if (response.Items[i].Value == "Show Intelligent Filter") {
                        shwfil = "Hide Intelligent Filter";
                    }
                    if (response.Items[i].Value == "View All Columns") {
                        if (chkhtml == "View Report Columns" && response.Items[i].Value == "View All Columns") {
                            response.Items[i].Value = "View Report Columns";
                            response.Items[i].Text = "View Report Columns";
                        }
                    }
                }
                RepList.ReportOptlist(response.Items);
                if (showfilters == true && shwfil == "Hide Intelligent Filter") {
                    showfilters = false;
                }
            }
        });
        document.getElementById('reportpage').src = '';
        document.getElementById('gridpage').src = '';
        $("#tabs").css('position', 'relative');
        $("#tabs").css('width', '99%');
        $("#tabs").css(' overflow-y', 'auto');
        $(".intelfilter").show();
        if ($(ReqId).val() == null || $(ReqId).val() == "") {
            $(ReqId).focus();
            $("#loading").fadeOut();
            return false;
        }
    });

    $("#report").live("click", function () {
        document.getElementById('drpdown').style.visibility = "hidden";
        document.getElementById('cmbGridExport').style.visibility = "hidden";
        filterdescription = "";
        Exportbtn = "false";
        $.ajax({
            url: "ComboReportList",
            type: "POST",
            async: false,
            success: function (response) {
                RepList.ComboRptlist(response.Items);
                $.ajax({
                    url: "ReportOptionsList",
                    type: "POST",
                    async: false,
                    data: { IsAddFavourites: favouritesoption, IsExport: Exportbtn },
                    success: function (response) {
                        var shwfil;
                        for (i = 0; i < response.Items.length ; i++) {
                            if (response.Items[i].Value == "Show Intelligent Filter") {
                                shwfil = "Hide Intelligent Filter";
                            }
                            if (response.Items[i].Value == "View All Columns") {
                                if (chkhtml == "View Report Columns" && response.Items[i].Value == "View All Columns") {
                                    response.Items[i].Value = "View Report Columns";
                                    response.Items[i].Text = "View Report Columns";
                                }
                            }
                        }
                        RepList.ReportOptlist(response.Items);
                        if (showfilters == true && shwfil == "Hide Intelligent Filter") {
                            showfilters = false;
                        }
                    }
                });
            }
        });
        $("#tabs").css('position', 'relative');
        $("#tabs").css('width', '99%');
        $("#tabs").css(' overflow-y', 'auto');
        $(".intelfilter").hide();
    });

    $("#grid").live("click", function () {
        document.getElementById('drpdown').style.visibility = "hidden";
        document.getElementById('cmbGridExport').style.visibility = "visible";
        document.getElementById("cmbGridExport").selectedIndex = "0";
        Exportbtn = "true";
        $.ajax({
            url: "ComboReportList",
            type: "POST",
            async: false,
            success: function (response) {
                RepList.ComboRptlist(response.Items);
                $.ajax({
                    url: "ReportOptionsList",
                    type: "POST",
                    async: false,
                    data: { IsAddFavourites: favouritesoption, IsExport: Exportbtn },
                    success: function (response) {
                        for (i = 0; i < response.Items.length ; i++) {
                            if (response.Items[i].Value == "Show Intelligent Filter") {
                                shwfil = "Hide Intelligent Filter";
                            }
                            if (response.Items[i].Value == "View All Columns") {
                                if (chkhtml == "View Report Columns" && response.Items[i].Value == "View All Columns") {
                                    response.Items[i].Value = "View Report Columns";
                                    response.Items[i].Text = "View Report Columns";
                                }
                            }
                        }
                        RepList.ReportOptlist(response.Items);
                        var shwfil;

                        if (showfilters == true && shwfil == "Hide Intelligent Filter") {
                            showfilters = false;
                        }
                    }
                });
            }
        });
        $("#tabs").css('position', 'relative');
        $("#tabs").css('width', '99%');
        $("#tabs").css(' overflow-y', 'auto');
        $(".intelfilter").show();
    });


    $("#EmailsendMainmem").live("click", function () {
        $("#EmailsendMainmem").prop('checked', true);
        $("#EmailAllMem").prop('checked', false);
    });
    $("#EmailAllMem").live("click", function () {
        $("#EmailAllMem").prop('checked', true);
        $("#EmailsendMainmem").prop('checked', false);
    });


    function OpenScreen(obj) {
        if (RepList.IsExistAcctno() == false && (obj.innerHTML.toUpperCase() == "GO TO MEMBER" || obj.innerHTML.toUpperCase() == "GENERATE MAILING LABELS" || obj.innerHTML.toUpperCase() == "GENERATE EMAIL LIST" || obj.innerHTML.toUpperCase() == "SEND TEXT"))
            return false;
        if (RepList.SamplFillRepGrid().length != 0) {
            document.getElementById('drpdown').style.visibility = "visible";
            if (obj.innerHTML.toUpperCase() == "GO TO MEMBER") {
                ReportMenuDesc = obj.innerHTML;
                var acctno = document.getElementById('gridpage').contentWindow.MemberId;
                if (typeof acctno === 'string')
                    acctno;
                else
                    acctno = acctno[acctno.length - 1];

                if (acctno != null && acctno != "") {

                    window.parent.window.parent.$("#modalpos").css("width", (window.outerWidth + 22) + "px");
                    window.parent.window.parent.$("#modalpos").css("height", (window.outerHeight - 140) + "px");
                    window.parent.window.parent.$("#schposscreen").css("margin-left", 10 + "px");
                    window.parent.window.parent.$("#modalpos").css("margin-left", 90 + "px");
                    window.parent.window.parent.document.getElementById('schposscreen').src = "../Members/frmMM_Members?AcctNo=" + acctno + "&Gotomember=" + "optionselect" + "";
                    fireEvent(window.parent.window.parent.document.getElementById('openpos'), 'click');
                }
            }
        }
        if (obj.innerHTML.toUpperCase() == "ADD TO MY FAVORITES") {
            RepList.addfavourite();
        }
        if (obj.innerHTML.toUpperCase() == "REMOVE FROM MY FAVORITES") {
            RepList.delfavourite();
        }
        if (obj.innerHTML.toUpperCase() == "SHOW INTELLIGENT FILTER" || obj.innerHTML.toUpperCase() == "HIDE INTELLIGENT FILTER") {
            if (obj.innerHTML.toUpperCase() == "SHOW INTELLIGENT FILTER") {
                showfilters = true;
                IntelligenceFilter();
                obj.innerHTML = "Hide Intelligent Filter";
            }
            else {
                showfilters = false;
                IntelligenceFilter();
                obj.innerHTML = "Show Intelligent Filter";
            }
        }
        if (obj.innerHTML.toUpperCase() == "VIEW ALL COLUMNS" || obj.innerHTML.toUpperCase() == "VIEW REPORT COLUMNS") {

            if (obj.innerHTML.toUpperCase() == "VIEW ALL COLUMNS") {
                RepList.viewallcols(true);
                ReportviewCol = "TRUE";
                if (saveparamxml == false) {
                    saveparamxml = true;
                }
                RepList.FillGridandreport();
                obj.innerHTML = "View Report Columns";
                chkhtml = obj.innerHTML;
            }
            else {
                ReportviewCol = "FALSE";
                RepList.viewallcols(false);
                RepList.FillGridandreport();
                obj.innerHTML = "View All Columns";
                chkhtml = obj.innerHTML;
            }
        }
        if (obj.innerHTML.toUpperCase() == "CREATE/COPY SELECTION CRITERIA") {
            window.parent.parent.document.getElementById('popupscreen').src = "../Reports/frmRP_CreateFilterControl";
            fireEvent(window.parent.parent.document.getElementById('PopupWindow'), 'click');
        }
        if (obj.innerHTML.toUpperCase() == "CREATE NEW LETTER") {

            document.getElementById('popupscreenletter').src = "../DM/frmDM_Designtemplate?VwScreen=CREATE NEW LETTER";
            fireEvent(document.getElementById('PopupWindowletter'), 'click');
        }
        if (obj.innerHTML.toUpperCase() == "MAIL MERGE") {
            if (RepList.SamplFillRepGrid().length != 0) {
                RepList.getfilfrmletters();
                RepList.getmailmergeList();
                RepList.getmailerdetailsList();
                $("#Mailmergedialog").dialog("open");
                document.getElementById('ChkDupemail').checked = false;
                document.getElementById('chksendcopy').checked = false;
            }
            else
                alert("Gro Group", "No records found", false, false);
        }
        if (obj.innerHTML.toUpperCase() == "REPORT DESCRIPTION") {
            if (Description != "") {
                $("#reportname").text(Description);
                RepList.ReportDescriptOnload();
                $("#ReportDescriptiondialog").dialog("open");
            }
        }

        if (obj.innerHTML.toUpperCase() == "EXPORT CONSTANT CONTACT") {
            $.ajax({
                url: "ExportConstantContactEmailList",
                type: "POST",
                success: function (response) {

                }
            });
        }

        if (obj.innerHTML.toUpperCase() == "GENERATE MAILING LABELS") {
            $.ajax({
                url: "MailExportList",
                type: "POST",
                data: { RepotHeader: RepList.Description() },
                success: function (response) {
                    if (response.Message != "") {
                        var curwinow = document.getElementById('gridpage').contentWindow;
                        curwinow.memberarrylist = [];
                        curwinow.memberarrylistrowindex = [];
                        alert("Gro Group", response.Message, false, false);
                        return false;
                    }
                    if (response.Items.length > 0) {
                        window.parent.document.getElementById('searchscreen').src = "../Members/FormReport";
                        fireEvent(window.parent.document.getElementById('sc1'), 'click');
                    }
                    else {
                        alert("Gro Group", "No records exist.", false, false);
                    }
                }
            });
        }
        if (obj.innerHTML.toUpperCase() == "GENERATE EMAIL LIST") {
            if (RepList.IsExistAcctno() == true) {
                OptionMenuName = "GENERATE EMAIL LIST";
                if (IsAdmin == "False") {
                    $("#AdminMessage").text("");
                    $("#AdminPwdDialog").dialog("open");
                    document.getElementById('Admin_Pass').focus();
                    return false;
                }
                else
                    RepList.CallEmailList();
            }
        }
        if (obj.innerHTML.toUpperCase() == "CREATE POINTS") {
            $.ajax({
                url: "CreatePoints",
                type: "POST",
                data: { GUser: Guser, RepotHeaderDesc: RepList.Description() },
                success: function (response) {
                    alert("Gro Group", response.Items, false, false);
                }
            });
        }
        if (obj.innerHTML.toUpperCase() == "MEMBER SCHEDULE SEND EMAIL") {
            RepList.MailPreviewGridList();
            if (RepList.FileName().toUpperCase() == "RP_AS_MEMBERSCHEDULE.RPT")
                $("#Mailpreviewdialog").dialog("open");
        }
        if (obj.innerHTML.toUpperCase() == "SEND TEXT") {
            if (RepList.SamplFillRepGrid().length > 0) {
                var memblist = [];
                memblist = window.document.getElementById('gridpage').contentWindow.memberarrylist;
                if (memblist.length > 0) {
                    selaccts = "";
                    Eselaccts = "";
                    $.ajax({
                        url: "CellphoneCarrierCount",
                        type: "POST",
                        success: function (response) {
                            document.getElementById('lblwithcarrer').innerText = response.Items;
                            document.getElementById('lblwithoutcarrer').innerText = response.Items1;
                            selaccts = response.selaccts;
                            Eselaccts = response.Eselaccts;
                            document.getElementById('txtcellphone').value = response.cellph;
                        }
                    });


                    $("#sendtextdialog").dialog("open");
                }
                else {
                    alert("Gro Group", "Please select records to Send Text", false, false);
                }
            }
            else {
                alert("Gro Group", "No records found", false, false);
            }
        }

        if (obj.innerHTML.toUpperCase() == "CREATE DATASET") {
            if (RepList.SamplFillRepGrid().length > 0) {
                $("#Createcustomdatasetdialog").dialog("open");
                $('#Datasetnametxtbox').val('');
            }
            else {
                alert("Gro Group", "No records found", false, false);
            }
        }

        if (obj.innerHTML.toUpperCase() == "APTUSMAIL") {
            if (RepList.SamplFillRepGrid().length > 0) {
                var chkaptus = "";

                $.ajax({
                    url: "GetExistingAptusMailList",
                    type: "POST",
                    async: false,
                    success: function (response) {
                        RepList.AptusMailList(response.Items);
                        if (response.MailInfo == false) {
                            chkaptus = "CHECK";
                        }
                    }
                });
                if (chkaptus != "CHECK") {
                    $.ajax({
                        url: 'GetEmailListCount',
                        type: 'POST',
                        async: false,
                        success: function (response) {

                            $("#CreateAptusMailDialog").dialog("open");
                            if (MembergpEmail != null && MembergpEmail != "")
                                $('#txtnewrenamelist').val(MembergpEmail);
                            else
                                $('#txtnewrenamelist').val('');
                            document.getElementById('txtExistingList').value = "";
                            document.getElementById('lblaptusmailcnt').innerText = response.Items;
                            $("#ui-id-8").css("text-align", "center");
                        }
                    });
                }
            }
            else {
                //  alert("Gro Group", "No records found", false, false);
            }
        }
        if (obj.innerHTML.toUpperCase() == "VIEW AUTO REPORT SETUP") {
            document.getElementById('ViewAutoReportfrm').src = "../Reports/frmViewAutoReportSetup";
            $("#ViewAutoReportDialog").dialog("open");
            $("#ViewAutoReportDialog").dialog({ title: 'View Auto Report Setup' });
        }
    }

    function EmailList() {
        $.ajax({
            url: "GenerateNameEmailList",
            type: "POST",
            async: false,
            data: { Description: RepList.Description() },
            success: function (response) {
                if (response.Message != "") {
                    alert("Gro Group", response.Message, false, false);
                    return false;
                }
                if (response.EmailCount > 0) {
                    $.ajax({
                        url: "GridReportExport",
                        type: "POST",
                        data: { Printvalue: "XLS", ExportName: "FirstName LastName EmailList" },
                        success: function (response) {
                            if (response.Items != null && response.Items != "") {
                                RepList.FilePath("");
                                document.getElementById('hylnproceed').click();
                            }
                        }
                    });
                }
            }
        });
    }

    function Lsearchdb(table, tosearch, toassign, id, secpointid) {
        dbclick = true;
        if (id.value == null || id.value == "")
            id.value = "%";
        value = id.value;
        conditionparam = "";
        myvalue = id.id;
        res = myvalue.substring(myvalue.length - 2);
        if (res.indexOf("d") > -1)
            res = myvalue.substring(myvalue.length - 1);

        gridfields = Lookupfieldlist[res];
        if (AdditionalSQL[res] != null && AdditionalSQL[res] != "")
            conditionparam = "and" + " " + AdditionalSQL[res];
        if (Description.toUpperCase() == "NEW PROSPECT SOURCE CODE DETAIL" && table.toUpperCase() == "OP_LOOKUPMASTER") {
            conditionparam = " and  memcode = 1 ";
        }
        Lsearchmain(table, tosearch, toassign, id, secpointid);
        //alert("TEstL");
    }

    function Datesearch(id) {
        var datemyvalue = id.id;
        var dres = datemyvalue.substring(datemyvalue.length - 2);
        if (dres.indexOf("d") > -1)
            dres = datemyvalue.substring(datemyvalue.length - 1);
        if (dres.indexOf("d") > -1)
            dres = datemyvalue.substring(datemyvalue.length - 1);
        var datevalue = id.value;
        if (datevalue != null && datevalue != "") {

            $('#lbldisp' + dres).attr('title', "Between");
            $('#lbldisp' + dres).attr('lblfilterval', "Between");

            showfilt[dres] = "Between";
        }
        if (datevalue == null || datevalue == "") {
            $('#lbldisp' + dres).attr('title', "Equal to");
            $('#lbldisp' + dres).attr('lblfilterval', "=");
            showfilt[dres] = "=";
        }
    }

    function CallDateCalc(id, index) {
        var divdt, uldt, dtind;
        dtind = id.id.substring(10);

        $('.thisdropdown-menu').hide();

        if (document.getElementById('divdtchoose' + dtind).style.display == "inline-block")
            $('#divdtchoose' + dtind).hide();
        else
            document.getElementById('divdtchoose' + dtind).style.display = "inline-block";

        if (document.getElementById('uldtchoose' + dtind).style.display == "inline-block")
            $('#uldtchoose' + dtind).hide();
        else
            document.getElementById('uldtchoose' + dtind).style.display = "inline-block";

    }

    function CallIntelligent(id, index) {
        //if (showfilters == false) {   // commented for show and hide intelligent filter when not included
        //    return;
        //}
        $('.lbldropdown-menu').hide();
        if (document.getElementById('divlblchoose' + index).style.display == "inline-block")
            $('#divlblchoose' + index).hide();
        else
            document.getElementById('divlblchoose' + index).style.display = "inline-block";

        if (document.getElementById('ullblchoose' + index).style.display == "inline-block")
            $('#ullblchoose' + index).hide();
        else
            document.getElementById('ullblchoose' + index).style.display = "inline-block";
    }

    function divdtchooseleave(id, index) {
        $("#divdtchoose" + index).hide();
        $("#uldtchoose" + index).hide();

    }

    function divlblchooseleave(id, index) {
        $("#divlblchoose" + index).hide();
        $("#ullblchoose" + index).hide();
    }

    function lbldispenter(id, index) {

    }

    function lbldispleave(id, index) {

    }

    function BinDateCalcVal(id, index) {
        var dttext;
        dttext = id.id;
        dttext = dttext.replace(index, "");
        $('#iddatecalc' + index).attr('title', dttext);
        $("#divdtchoose" + index).hide();
        $("#uldtchoose" + index).hide();
        $.ajax({
            url: "GetDateCalcDatesById",
            type: "POST",
            data: { dateCalc: dttext },
            async: false,
            success: function (response) {
                document.getElementById('id' + index).value = response.StartDate;
                if (document.getElementById('idd' + index) != null) {
                    document.getElementById('idd' + index).value = response.EndDate;

                    $('#lbldisp' + index).attr('title', "Between");
                    $('#lbldisp' + index).attr('lblfilterval', "Between");
                    showfilt[index] = "Between";
                }
            }
        });
    }

    function BindFilterVal(id, index) {
        $('#lbldisp' + index).attr('title', id.innerText);
        $('#lbldisp' + index).attr('lblfilterval', id.title);

        $("#divlblchoose" + index).hide();
        $("#ullblchoose" + index).hide();
    }

    function Nsearch(id) {
        var Nvalue = id.id;
        var Nres = Nvalue.substring(Nvalue.length - 2);
        if (Nres.indexOf("d") > -1)
            Nres = Nvalue.substring(Nvalue.length - 1);
        if (Nres.indexOf("N") > -1)
            Nres = Nvalue.substring(Nvalue.length - 1);
        var numval = id.value;
        if (numval != null && numval != "") {

            $('#lbldisp' + Nres).attr('title', "Between");
            $('#lbldisp' + Nres).attr('lblfilterval', "Between");
            showfilt[Nres] = "Between";
        }
    }

    function Lsearch(table, tosearch, toassign, id, secpointid) {
        value = id.value;
        if (value == null || value == "")
            return false;
        if (dbclick == true) {
            dbclick = false;
            return false;
        }

        conditionparam = "";
        myvalue = id.id;
        res = myvalue.substring(myvalue.length - 2);
        if (res.indexOf("d") > -1)
            res = myvalue.substring(myvalue.length - 1);


        gridfields = Lookupfieldlist[res];
        if (AdditionalSQL[res] != null && AdditionalSQL[res] != "")
            conditionparam = "and" + " " + AdditionalSQL[res];
        if (Description.toUpperCase() == "NEW PROSPECT SOURCE CODE DETAIL" && table.toUpperCase() == "OP_LOOKUPMASTER") {
            conditionparam = " and  memcode = 1 ";
        }
        Lsearchmain(table, tosearch, toassign, id, secpointid)
    }

    function Lsearchmain(table, tosearch, toassign, id, secpointid) {
        var filt = "";

        if (document.getElementById('lbldisp' + res).value != null || document.getElementById('lbldisp' + res).value != "") {
            var filterobj = document.getElementById('lbldisp' + res);
            filt = filterobj.getAttribute('lblfilterval');
        }
        value = id.value;
        if (filt.toUpperCase() == "LK")
            return false;
        $.ajax({
            url: "Lsearch",
            type: "POST",
            data: { table: table, tosearch: tosearch, toassign: toassign, text: value, secno: secpointid },
            success: function (response) {
                obj = id;
                if (response.Count == 1) {
                    id.value = response.Items[0][1];
                    document.getElementById("Hdntxtid" + res).value = response.Items[0][0];
                }
                else {
                    $.ajax({
                        url: "LsearchLookupfieldList",
                        data: { lookupfields: gridfields },
                        type: "Post",
                        async: false,
                        success: function (response) {
                            if (response.Itemsfield != null) {
                                fieldname = response.Itemsfield;
                                headername = response.Itemsheader;
                            }
                        }
                    });
                    var labelid = "";
                    labelid = Displaynamearray[res];
                    if (labelid.toUpperCase() == "LOCATION ID")
                        labelid = "Location";
                    else if (labelid.toUpperCase() == "FIRST NAME" || labelid.toUpperCase() == "LAST NAME" || labelid.toUpperCase() == "MEMBER ID")
                        labelid = "Member";
                    window.parent.document.getElementById('searchscreen').src = "../GroGroup/SearchScreen?element=" + id.id + "&table=" + table + "&field=" + fieldname + "&header=" + headername + "&text=" + value + "&where=" + tosearch + "&condition=" + conditionparam + "&LabelDescription=" + labelid + "";
                    fireEvent(window.parent.document.getElementById('sc1'), 'click');
                }

            }

        });
        var idval = id.id;
        document.getElementById(idval).value = "";
    }


    function FillcatCombo(dispname, tosearch, toassign, id, secpointid) {
        if (!itemclus)
            return false;
        var valusary;
        if (id.id != null && id.id != undefined)
            valusary = $("#" + id.id).val();
        else
            valusary = $("#" + id).val();

        valus = "";
        valus2 = "";
        if (valusary != null && valusary.length > 0) {
            for (var z = 0; z < valusary.length; z++) {
                valus += "'";
                valus += valusary[z];
                valus += "'" + ",";
            }
            valus = valus.substring(0, valus.length - 1);
        }
        //Dynamic field comparison add by siva
        var SplitAliceFromFieldName = dispname.split('.');
        var SplitFieldName = "";

        if (SplitAliceFromFieldName.length > 1) {
            SplitFieldName = SplitAliceFromFieldName[1];
        }
        else {
            SplitFieldName = SplitAliceFromFieldName[0];
        }

        if (SplitFieldName.toUpperCase() == "CATEGORY" || SplitFieldName.toUpperCase() == "GROUP1") {
            $.ajax({
                url: "itemdynamicchange",
                data: { itemsgrp: valus, itemclass: valus2 },
                type: "POST",
                async: false,
                success: function (response) {
                    if (response.Items.length > 0) {
                        $('#' + clasid).multiselect('destroy');
                        $('#' + clasid).empty();
                        var newSelect = document.getElementById(clasid);

                        var selectHTML = "";
                        for (i = 0; i < response.Items.length; i = i + 1) {
                            selectHTML += "<option value='" + response.Items[i].Class + "'>" + response.Items[i].Description + "</option>";
                        }
                        $('#' + clasid).append(selectHTML);
                        $('#' + clasid).multiselect();
                    }
                    else {
                        $('#' + clasid).multiselect('destroy');
                        $('#' + clasid).empty();
                        $('#' + clasid).multiselect();
                    }
                    $('#' + itid).multiselect('destroy');
                    $('#' + itid).empty();
                    $('#' + itid).multiselect();
                }
            });
        }

        if (SplitFieldName.toUpperCase() == "RESOURCETYPE") {
            $.ajax({
                url: "resourcedynamicchange",
                data: { rtype: valus },
                type: "POST",
                async: false,
                success: function (response) {
                    if (response.Items.length > 0) {
                        $('#' + clasid).multiselect('destroy');
                        $('#' + clasid).empty();
                        var newSelect = document.getElementById(clasid);

                        var selectHTML = "";
                        for (i = 0; i < response.Items.length; i = i + 1) {
                            selectHTML += "<option value='" + response.Items[i].Resourceid + "'>" + response.Items[i].Resource + "</option>";
                        }
                        $('#' + clasid).append(selectHTML);
                        $('#' + clasid).multiselect();
                    }
                    else {
                        $('#' + clasid).multiselect('destroy');
                        $('#' + clasid).empty();
                        $('#' + clasid).multiselect();
                    }
                    $('#' + itid).multiselect('destroy');
                    $('#' + itid).empty();
                    $('#' + itid).multiselect();
                }
            });
        }
        if (valusary == null) {
            ChkMAX1 = "";
        }
        else {
            ChkMAX1 = valusary.length;
        }
    }

    function FillclassCombo(dispname, tosearch, toassign, id, secpointid) {

        var valusary;
        if (id.id != null && id.id != undefined)
            valusary = $("#" + id.id).val();
        else
            valusary = $("#" + id).val();

        valus2 = "";
        valus = "";
        if (valusary != null && valusary.length > 0) {
            for (var z = 0; z < valusary.length; z++) {
                valus2 += "'";
                valus2 += valusary[z];
                valus2 += "'" + ",";
            }
            valus2 = valus2.substring(0, valus2.length - 1);
        }
        //Dynamic field comparison add by siva
        var SplitAliceFromFieldName = dispname.split('.');
        var SplitFieldName = "";

        if (SplitAliceFromFieldName.length > 1) {
            SplitFieldName = SplitAliceFromFieldName[1];
        }
        else {
            SplitFieldName = SplitAliceFromFieldName[0];
        }

        if (SplitFieldName.toUpperCase() == "CLASS" || SplitFieldName.toUpperCase() == "ITEM_CLASS") {
            additemtomultiselect();
        }
        if (SplitFieldName.toUpperCase() == "MEMCODE" || retFNWithoutAlias(SplitFieldName).toUpperCase() == "MCODE") {

            $.ajax({
                url: "Memcodedynamicchange",
                data: { itemsgrp: valus2 },
                type: "POST",
                async: false,
                success: function (response) {
                    if (response.Items.length > 0) {
                        $('#' + itid).multiselect('destroy');
                        $('#' + itid).empty();
                        var newSelect = document.getElementById(itid);

                        var selectHTML = "";
                        for (i = 0; i < response.Items.length; i = i + 1) {
                            selectHTML += "<option value='" + response.Items[i].descript + "'>" + response.Items[i].descript + "</option>";
                        }
                        $('#' + itid).append(selectHTML);
                        $('#' + itid).multiselect();
                    }
                    else {
                        $('#' + itid).multiselect('destroy');
                        $('#' + itid).empty();
                        $('#' + itid).multiselect();
                    }
                }
            });

        }
        if (valusary == null) {
            ChkMAX = "";
        }
        else {
            ChkMAX = valusary.length;
        }
    }


    function additemtomultiselect() {
        if (itemnofield != "ITEMNO")
            return false;
        $.ajax({
            url: "itemdynamicchange",
            data: { itemsgrp: valus, itemclass: valus2 },
            type: "POST",
            async: false,
            success: function (response) {
                if (response.Items.length > 0) {
                    $('#' + itid).multiselect('destroy');
                    $('#' + itid).empty();
                    var newSelect = document.getElementById(itid);

                    var selectHTML = "";
                    for (i = 0; i < response.Items.length; i = i + 1) {
                        selectHTML += "<option value='" + response.Items[i].itemno + "'>" + response.Items[i].item_desc + "</option>";
                    }
                    $('#' + itid).append(selectHTML);
                    $('#' + itid).multiselect();
                }
                else {
                    $('#' + itid).multiselect('destroy');
                    $('#' + itid).empty();
                    $('#' + itid).multiselect();
                }
            }
        });
    }

    function IntelligenceFilter() {
        if (showfilters) {
            showfilters = true;
        }
        else {
            showfilters = false;
        }
    }


    function viewallcolumns() {
        if ($("#chkviewallcol").is(':checked')) {
            ReportviewCol = "TRUE";
            RepList.viewallcols(true);
            RepList.FillGridandreport();
        }
        else {
            ReportviewCol = "FALSE";
            RepList.viewallcols(false);
            RepList.FillGridandreport();
        }
    }

    function setfilterstyle(getval) {
        for (var i = 0; i < filtercount; i++) {
            var filterobj = document.getElementById('idlookup' + i);
            var cntr1 = document.getElementById('id' + i);
            var cntr2 = document.getElementById('idd' + i);
            if (filterobj != undefined && filterobj != null) {
                filterobj.style.visibility = getval;
                for (var r = 0 ; r < filterobj.options.length ; r++) {
                    if (cntr2 != undefined && cntr2 != null && cntr2.value != "") {
                        if (filterobj.options[r].value.toUpperCase() == "BT") {
                            filterobj.selectedIndex = r;
                        }
                    }
                    else {
                        if (filterobj.options[r].value.toUpperCase() == "EQ") {
                            filterobj.selectedIndex = r;
                        }
                    }
                }
                document.getElementById('idlookup' + i).value = showfilt[i];
            }
        }
    }


    function viewModel() {
        var self = this;
        var repcontrols;

        self.ComboRptlist = ko.observable();
        self.Filter = ko.observable();
        self.FilePath = ko.observable();
        self.Reports = ko.observableArray([]);
        self.Reportslist = ko.observableArray([]);
        self.Description = ko.observable();
        self.SQLSelect = ko.observable('');
        self.SQLOrderby = ko.observable('');
        self.SQLGroupby = ko.observable('');
        self.FileName = ko.observable('');
        self.securityid = ko.observable('');
        self.viewallcols = ko.observable(false);
        self.FillRepGrid = ko.observableArray([]);
        self.SamplFillRepGrid = ko.observableArray([]);

        self.ReportSelectedall = ko.observableArray([]);
        self.LookupFill = ko.observableArray([]);
        self.OPsecuritypoints = ko.observableArray([]);

        self.ReportOptlist = ko.observable();
        self.FileNameList = ko.observable();
        self.Filenametype = ko.observable();
        self.txtMergtype = ko.observable();
        self.cmbmergelist = ko.observable();
        self.MailMergeBody = ko.observable();

        //For DateCalc Combo
        self.DateCalcList = ko.observable();
        self.DateCalcVal = ko.observable();

        self.AcctNo = ko.observable();
        self.status = ko.observable();
        self.txtFromName = ko.observable();
        self.txtMailFrom = ko.observable();
        self.txtEMailSubject = ko.observable();
        self.txtAttachment = ko.observable();
        self.hdntxtAttachment = ko.observable();
        //self.ReportOptlist = ko.observable();
        self.test = ko.observable();

        self.UserModule = ko.observable('');
        self.MailExportGrid = ko.observable();
        self.FilePath = ko.observable();

        self.MailpreviewList = ko.observable();
        self.txtfromname = ko.observable();
        self.txtfrommail = ko.observable();
        self.txtsubject = ko.observable("Member schedule");
        self.txtEmailsendMainmem = ko.observable();
        self.txtEmailAllMem = ko.observable();
        self.txtbody = ko.observable("Please find the Attachement for Appointment information");
        self.groupid = ko.observable('');
        self.gUserLevel = ko.observable('');
        self.txtCurntdate = ko.observable(DateBind(Date.now()));
        self.IsExistAcctno = ko.observable(false);
        self.SecPointsNo = ko.observable("");
        self.SqlLWhere = ko.observable("");

        self.AptusMailList = ko.observableArray([]);
        self.aptusmaillistid = ko.observable();

        var RetrieveParamList = "";
        $("#saveParameters").hide();
        $("#cmbSaveParameters").hide();
        $("#descriptionlbl").show();
        $("#imgclearparams").hide();

        $("#ReportParamDialog").hide();

        self.ReportParamNameVal = ko.observable('');
        self.ReportParamNameList = ko.observableArray([]);

        self.Favourlist = ko.observable();

        $("#Mailmergedialog").dialog({
            draggable: false,
            autoOpen: false,
            autoresize: false,
            modal: true,
            dragable: false,
            width: 530,
            height: 430
        });

        $("#ReportDescriptiondialog").dialog({
            draggable: false,
            autoOpen: false,
            autoresize: false,
            modal: true,
            dragable: false,
            width: 562
        });


        $("#cmbGridExport").change(function () {
            var obj = document.getElementById('cmbGridExport').value;

            $.ajax({
                url: "GridReportExport",
                type: "POST",
                data: { Printvalue: obj,GuId: '@ViewBag.GUID'},
                success: function (response) {
                    if (response.Message == "No records to export") {
                        alert("Gro Group", "No records to export", false, false);
                        return false;
                    }
                    if (response.Items != null && response.Items != "") {

                        self.FilePath("");
                        document.getElementById('hylnproceed').click();
                        document.getElementById("cmbGridExport").selectedIndex = "0";
                        setTimeout(function () {
                            $.ajax({
                                url: "DeleteExportFile",
                                type: "POST",
                                success: function (response) {

                                }
                            });
                        }, 1000);
                    }
                    else {
                        alert("Gro Group", "Please select records to export", false, false);
                        return false;
                    }
                }
            });
        });

        self.addfavourite = function () {
            $.ajax({
                url: "Addfavourreport",
                type: "POST",
                data: { userModule: self.UserModule, SecurityID: self.securityid },
                async: false,
                success: function (response) {
                    if (response.Items == "Success") {

                        FillReportSubMenus("false");
                        self.Favourlist("");
                        self.favouritelist();
                    }
                }
            });
        }

        function addfavourite() {
            $.ajax({
                url: "Addfavourreport",
                type: "POST",
                data: { userModule: self.UserModule, SecurityID: self.securityid },
                async: false,
                success: function (response) {
                    if (response.Items == "Success") {

                        self.Favourlist("");
                        self.favouritelist();
                    }
                }
            });
        }

        self.delfavourite = function () {
            $.ajax({
                url: "deletefavourreport",
                type: "POST",
                data: { userModule: self.UserModule, SecurityID: self.securityid },
                async: false,
                success: function (response) {
                    if (response.Items == "Success") {

                        FillReportSubMenus("");
                        self.Favourlist("");
                        self.favouritelist();
                        self.Description("");
                        secpointNO = "";
                        $('.filter').empty();
                        $('.intelfilter').empty();
                        if (hidden != null && hidden != "") {

                            for (var i = 0; i < 20; i++) {

                                var a = document.getElementById('index' + i).value;
                                if (a == hidden) {
                                    document.getElementById('table' + i).style.display = 'none';
                                    hidden = "";
                                    break;
                                }

                            }
                            hidden = "";

                        }
                    }
                }
            });
        }

        function delfavourite() {
            $.ajax({
                url: "deletefavourreport",
                type: "POST",
                data: { userModule: self.UserModule, SecurityID: self.securityid },
                async: false,
                success: function (response) {
                    if (response.Items == "Success") {

                        self.Favourlist("");
                        self.favouritelist();
                        self.Description("");
                        secpointNO = "";
                        $('.filter').empty();
                        $('.intelfilter').empty();
                        if (hidden != null && hidden != "") {

                            for (var i = 0; i < 20; i++) {

                                var a = document.getElementById('index' + i).value;
                                if (a == hidden) {
                                    document.getElementById('table' + i).style.display = 'none';
                                    hidden = "";
                                    break;
                                }

                            }
                            hidden = "";

                        }
                    }
                }
            });
        }

        var togSrc = ["../images/right%20arrow.png",
        "../images/Down1.png"];
        self.favouritelist = function () {
            $("#" + currentid).attr("src", "../images/right%20arrow.png");
            src = togSrc.reverse()[0];
            $(".tog").attr("src", src);

            if (hidden != null && hidden != "") {

                for (var i = 0; i < 20; i++) {

                    var a = document.getElementById('index' + i).value;
                    if (a == hidden) {
                        document.getElementById('table' + i).style.display = 'none';
                        hidden = "";
                        break;
                    }

                }
                hidden = "";

            }
            if (self.Favourlist() != null && self.Favourlist().length > 0) {
                self.Favourlist("");
                $(".tog").attr("src", "../images/right%20arrow.png");
            }
            else {
                $.ajax({
                    url: "favorreportlist",
                    type: "POST",
                    async: false,
                    success: function (response) {
                        self.Favourlist(response.Items);
                        $(".tog").attr("src", "../images/Down1.png");
                    }
                });
            }
        }

        $("#saveParameters").live('click', function () {
            saveparamxml = false;
            savefilter();

            document.getElementById('chkDaily').checked = false;
            document.getElementById('chkWeekly').checked = false;
            document.getElementById('chkMonthly').checked = false;
            document.getElementById('chkYearly').checked = false;
            if (self.ReportParamNameList() != null && self.ReportParamNameList().length > 0 && self.ReportParamNameVal() != null && self.ReportParamNameVal() != "") {
                document.getElementById('txtReportParamName').value = self.ReportParamNameList()[$("#cmbSaveParameters option:selected").index()].ReportName;
                var freq = "", rptemailto = "", expformat = "", expdest = "", exptype = "", usrfname = "";
                freq = self.ReportParamNameList()[$("#cmbSaveParameters option:selected").index()].ReportFrequency;
                rptemailto = self.ReportParamNameList()[$("#cmbSaveParameters option:selected").index()].ReportEmailTo;
                expformat = self.ReportParamNameList()[$("#cmbSaveParameters option:selected").index()].ExportFormat;
                exptype = self.ReportParamNameList()[$("#cmbSaveParameters option:selected").index()].ExportType;
                expdest = self.ReportParamNameList()[$("#cmbSaveParameters option:selected").index()].ExportDestination;
                usrfname = self.ReportParamNameList()[$("#cmbSaveParameters option:selected").index()].UserFileName;
                document.getElementById('txtReportEmailTo').value = rptemailto;
                document.getElementById('cmbExportFormat').value = expformat;
                document.getElementById('cmbExportType').value = exptype;
                document.getElementById('txtExportDestination').value = expdest;
                document.getElementById('txtUserFileName').value = usrfname;
                if (freq != null && freq != "") {
                    var arrname = freq.split(',');
                    if (arrname != null && arrname.length > 0) {
                        for (var i = 0; i < arrname.length; i++) {
                            if (arrname[i] != "" && arrname[i] != ",") {
                                if (arrname[i] == "Daily") {
                                    document.getElementById('chkDaily').checked = true;
                                }
                                if (arrname[i] == "Weekly") {
                                    document.getElementById('chkWeekly').checked = true;
                                }
                                if (arrname[i] == "Monthly") {
                                    document.getElementById('chkMonthly').checked = true;
                                }
                                if (arrname[i] == "Yearly") {
                                    document.getElementById('chkYearly').checked = true;
                                }
                            }
                        }
                    }
                }
            }
            else {
                document.getElementById('txtReportParamName').value = Description;
                document.getElementById('txtReportEmailTo').value = "";
                document.getElementById('cmbExportFormat').value = "";
                document.getElementById('cmbExportType').value = "";
                document.getElementById('txtExportDestination').value = "";
                document.getElementById('txtUserFileName').value = "";
            }

            $("#ReportParamDialog").show();
            $('.grid-menu').css("margin-top", "-43%");
            $('.grid-menu').css("margin-left", "45%");
        });

        self.ViewReportParam = function () {

            $("#ReportParamDialog").show();
            $('.grid-menu').css("margin-top", "-43%");
            $('.grid-menu').css("margin-left", "45%");
        }

        self.HideReportParam = function () {
            $("#ReportParamDialog").hide();
        }

        function SaveParams() {
            $.ajax({
                url: "Saveparameterfields",
                type: "POST",
                data: { lcSecpointsNo: secno, saveParamsToolTipText: Tooltiptext, xmlcontents: JSON.stringify(xmlcontent), userModule: self.UserModule, SecurityID: self.securityid },
                async: false,
                success: function (response) {
                    if (response.ItemToolTip != null && response.ItemToolTip != "") {
                    }
                }
            });
        }



        function RetriveReportParams() {
            //$.ajax({
            //    url: "RetriveReportParams",
            //    type: "POST",
            //    data: { userModule: self.UserModule, SecurityID: self.securityid },
            //    async: false,
            //    success: function (response) {
            //        if (response.Items != null && response.Items != "" && response.Items.length > 0) {
            //            self.ReportParamNameList(response.Items);
            //            $("#imgclearparams").show();
            //            if (response.Items.length > 1) {

            //                $("#cmbSaveParameters").show();
            //                $("#descriptionlbl").hide();

            //                if (response.Items[1].ReportName != null && response.Items[1].ReportName != "") {
            //                    self.ReportParamNameVal(response.Items[1].ReportName);
            //                    $('#cmbSaveParameters').attr('title', response.Items[1].ReportName);
            //                    RetriveParams(response.Items[1].ReportName);
            //                    document.getElementById('cmbSaveParameters').style.width = "auto";
            //                }
            //                else {
            //                    $("#descriptionlbl").show();
            //                    $("#cmbSaveParameters").hide();
            //                    $('#cmbSaveParameters').attr('title', "");
            //                    document.getElementById('cmbSaveParameters').style.width = "220px";
            //                }
            //            }
            //            else {
            //                $("#descriptionlbl").show();
            //                $("#cmbSaveParameters").hide();
            //                $('#cmbSaveParameters').attr('title', "");
            //                document.getElementById('cmbSaveParameters').style.width = "220px";
            //            }
            //        }
            //        else {
            //            self.ReportParamNameVal('');
            //            self.ReportParamNameList(null);
            //            $("#cmbSaveParameters").hide();
            //            $("#imgclearparams").hide();
            //            $("#descriptionlbl").show();
            //        }
            //    }
            //});
        }


        self.SaveParametersChange = function () {
            if (self.ReportParamNameVal() != null) {
                $('#cmbSaveParameters').attr('title', self.ReportParamNameVal());
                RetriveParams(self.ReportParamNameVal());
            }
            else {
                $('#cmbSaveParameters').attr('title', "");
            }
        }

        self.ClearSaveParam = function () {
            if (self.ReportParamNameVal() != null && self.ReportParamNameVal() != "") {
                $.msgBox({
                    title: self.ReportParamNameVal(),
                    content: "Are you sure you want to Clear Saved Parameters ?",
                    parent: true,
                    type: "confirm",
                    buttons: [{ value: "Yes" }, { value: "No" }],
                    success: function (result) {
                        if (result == "Yes") {
                            $.ajax({
                                url: "ClearSavedParameters",
                                type: "POST",
                                data: { userModule: self.UserModule, SecurityID: self.securityid, reportName: self.ReportParamNameVal() },
                                async: false,
                                success: function (response) {

                                    $("#ReportParamDialog").hide();
                                    RetriveReportParams();
                                }
                            });
                        }
                    }
                });
            }
        }

        self.SaveReportParamClick = function () {
            if (document.getElementById('txtReportParamName').value == null || document.getElementById('txtReportParamName').value == "") {
                $.msgBox({
                    title: "Warning", content: "Report Name cannot be empty!",
                    afterClose: function (result) {
                        document.getElementById('txtReportParamName').focus();
                    }
                });
                return;
            }
            var freq = "";
            if (document.getElementById('chkNone').checked == true) {
                freq = "";
            }
            if (document.getElementById('chkDaily').checked == true) {
                freq = "Daily";
            }
            if (document.getElementById('chkDaily').checked == true) {
                freq = "Daily";
            }
            if (document.getElementById('chkWeekly').checked == true) {
                freq = "Weekly";
            }
            if (document.getElementById('chkMonthly').checked == true) {
                freq = "Monthly";
            }
            if (document.getElementById('chkYearly').checked == true) {
                freq = "Yearly";
            }
            if (freq != "" && StrDisplayval != "") {
                StrDisplayval = StrDisplayval.slice(0, -1) + '.';
                alert("Gro Group", "Please choose the Date Calc value for " + StrDisplayval, false, false);
                $("#ReportParamDialog").hide();
                return;
            }
            if (document.getElementById('cmbExportFormat').value != "" && freq == "") {
                $.msgBox({
                    title: "Warning", content: "Report Frequency cannot be empty!",
                    afterClose: function (result) {

                    }
                });
                return;
            }
            if (document.getElementById('cmbExportFormat').value != "" && document.getElementById('txtExportDestination').value == "") {
                $.msgBox({
                    title: "Warning", content: "Export Destination cannot be empty!",
                    afterClose: function (result) {
                        document.getElementById('txtExportDestination').focus();
                    }
                });
                return;
            }
            if (document.getElementById('cmbExportFormat').value != "" && document.getElementById('cmbExportType').value == "") {
                $.msgBox({
                    title: "Warning", content: "Export Type cannot be empty!",
                    afterClose: function (result) {
                        document.getElementById('cmbExportType').focus();
                    }
                });
                return;
            }
            if (document.getElementById('cmbExportFormat').value == "" && document.getElementById('txtExportDestination').value != "") {
                $.msgBox({
                    title: "Warning", content: "Export Format cannot be empty!",
                    afterClose: function (result) {
                        document.getElementById('cmbExportFormat').focus();
                    }
                });
                return;
            }
            $.ajax({
                url: "SaveReportParameterFields",
                type: "POST",
                data: {
                    xmlcontents: JSON.stringify(xmlcontent), userModule: self.UserModule, SecurityID: self.securityid,
                    reportName: document.getElementById('txtReportParamName').value, reportFreq: freq, reportEmailTo: document.getElementById('txtReportEmailTo').value,
                    ExportFormat: document.getElementById('cmbExportFormat').value, ExportDestination: document.getElementById('txtExportDestination').value,
                    ExportType: document.getElementById('cmbExportType').value, UserFileName: document.getElementById('txtUserFileName').value
                },
                async: false,
                success: function (response) {
                    $("#ReportParamDialog").hide();
                }
            });

            RetriveReportParams();
        }

        function RetriveParams(repname) {
            $.ajax({
                url: "RetriveParamsFields",
                type: "POST",
                data: { reportName: repname, userModule: self.UserModule, SecurityID: self.securityid },
                async: false,
                success: function (response) {
                    if (response.ItemToolTip != null && response.ItemToolTip != "") {

                    }
                    if (response.Items != null && response.Items != "") {
                        RetrieveParamList = response.Items;
                        RetrieveParamFieldsBinding(RetrieveParamList);
                        chkcombo = "";
                    }
                    else {
                        if (response.ItemToolTip == "Save Parameters" && chkcombo == "") {
                            ReportSelectedall();
                        }
                    }
                }
            });
        }

        function BindDateCalcVal(str, st, et) {
            $.ajax({
                url: "GetDateCalcDatesById",
                type: "POST",
                data: { dateCalc: str },
                async: false,
                success: function (response) {
                    document.getElementById(st).value = response.StartDate;
                    document.getElementById(et).value = response.EndDate;
                }
            });
        }

        function SetFilterObjectText(i, val) {
            var filtertext = "";
            switch (val) {
                case "=":
                    filtertext = "Equal to";
                    break;
                case "!=":
                    filtertext = "Not equal to";
                    break;
                case "Like":
                    filtertext = "Like";
                    break;
                case "Not Like":
                    filtertext = "Not Like";
                    break;
                case "In":
                    filtertext = "In";
                    break;
                case "Not In":
                    filtertext = "Not In";
                    break;
                case ">":
                    filtertext = "Greater than";
                    break;
                case "<":
                    filtertext = "Less than";
                    break;
                case "Between":
                    filtertext = "Between";
                    break;
                default:
                    filtertext = "Equal to";
                    break;
            }

            $('#lbldisp' + i).attr('title', filtertext);
            $('#lbldisp' + i).attr('lblfilterval', val);

        }

        function RetrieveParamFieldsBinding(RetrieveParamList) {
            if (RetrieveParamList.length > 0) {
                for (var i = 0; i < RetrieveParamList.length; i++) {
                    var tempid = "";
                    var searchType = ReportcontrolElements[i].Type;
                    var dispname = ReportcontrolElements[i].Field_Name;
                    var tosearch = ReportcontrolElements[i].LookupFieldToSearch;
                    var toassign = ReportcontrolElements[i].LookupFieldToAssign;
                    var secpintno = ReportcontrolElements[i].oldSecPointsNo;
                    var FieldName = retFNWithoutAlias(ReportcontrolElements[i].Field_Name);
                    switch (searchType) {
                        case "D2":
                            SetFilterObjectText(i, RetrieveParamList[i].Operator);
                            if (RetrieveParamList[i].DateCalc != null && RetrieveParamList[i].DateCalc != "null" && RetrieveParamList[i].DateCalc != "" && RetrieveParamList[i].DateCalc != "Custom") {
                                var firstdtid, seconddtid;
                                firstdtid = document.getElementById('id' + i);
                                seconddtid = document.getElementById('idd' + i);
                                BindDateCalcVal(RetrieveParamList[i].DateCalc, firstdtid.id, seconddtid.id);
                            }
                            else {
                                $('#id' + i).val(RetrieveParamList[i].Value1);
                                $('#idd' + i).val(RetrieveParamList[i].Value2);
                            }


                            if (RetrieveParamList[i].DateCalc != null && RetrieveParamList[i].DateCalc != "null") {
                                var objele = document.getElementById('iddatecalc' + i);
                                if (objele != null) {
                                    objele.setAttribute('title', RetrieveParamList[i].DateCalc);
                                }
                            }
                            break;
                        case "Birthday":
                            SetFilterObjectText(i, RetrieveParamList[i].Operator);
                            $('#id' + i).val(RetrieveParamList[i].Value1);
                            $('#idd' + i).val(RetrieveParamList[i].Value2);
                            break;
                        case "N2":
                            SetFilterObjectText(i, RetrieveParamList[i].Operator);
                            $('#id' + i).val(RetrieveParamList[i].Value1);
                            $('#idN' + i).val(RetrieveParamList[i].Value2);
                            break;
                        case "CHECK":
                            if (RetrieveParamList[i].Value1.toUpperCase() == "TRUE")
                                $('#chkid' + i).attr('checked');
                            else
                                $('#chkid' + i).removeAttr('checked');
                            break;
                        case "B":
                        case "MULTILOC":
                            tempid = 'id' + i;
                            itemclus = true;
                            if (FieldName.toUpperCase() == "RESOURCETYPE" || FieldName.toUpperCase() == "CATEGORY" || FieldName.toUpperCase() == "GROUP1") {
                                SetFilterObjectText(i, RetrieveParamList[i].Operator);
                                if (RetrieveParamList[i].Value1.indexOf(',')) {
                                    var splitselectarray = RetrieveParamList[i].Value1;
                                    var multiselectarray = splitselectarray.split(',');
                                    if (multiselectarray != "") {
                                        $('option', $('#id' + i)).each(function (element) {
                                            $(this).removeAttr('selected').prop('selected', false);
                                        });
                                        $('#id' + i).multiselect('refresh');
                                        $('#id' + i).multiselect('select', multiselectarray);
                                    }
                                    else {
                                        $('option', $('#id' + i)).each(function (element) {
                                            $(this).removeAttr('selected').prop('selected', false);
                                        });
                                        $('#id' + i).multiselect('refresh');
                                    }
                                }
                                FillcatCombo(dispname, tosearch, toassign, tempid, secpintno);
                            }
                            if (FieldName.toUpperCase() == "RESOURCE" || FieldName.toUpperCase() == "CLASS" || FieldName.toUpperCase() == "ITEM_CLASS" || FieldName.toUpperCase() == "MEMCODE" || FieldName.toUpperCase() == "MCODE" || FieldName.toUpperCase() == "DESCRIPT") {
                                SetFilterObjectText(i, RetrieveParamList[i].Operator);
                                if (RetrieveParamList[i].Value1.indexOf(',')) {
                                    var splitselectarray = RetrieveParamList[i].Value1;
                                    var multiselectarray = splitselectarray.split(',');
                                    if (multiselectarray != "") {
                                        $('option', $('#id' + i)).each(function (element) {
                                            $(this).removeAttr('selected').prop('selected', false);
                                        });
                                        $('#id' + i).multiselect('refresh');
                                        $('#id' + i).multiselect('select', multiselectarray);
                                    }
                                    else {
                                        $('#id' + i).multiselect('destroy');
                                        if (RetrieveParamList[i].Value1 != "") {
                                            $('#id' + i).empty();
                                        }
                                        $('#id' + i).multiselect();
                                    }
                                }
                                FillclassCombo(dispname, tosearch, toassign, tempid, secpintno);
                            }
                            SetFilterObjectText(i, RetrieveParamList[i].Operator);
                            if (RetrieveParamList[i].Value1.indexOf(',')) {
                                var splitselectarray = RetrieveParamList[i].Value1;
                                var multiselectarray = splitselectarray.split(',');
                                if (multiselectarray != "") {
                                    $('option', $('#id' + i)).each(function (element) {
                                        $(this).removeAttr('selected').prop('selected', false);
                                    });
                                    $('#id' + i).multiselect('refresh');
                                    $('#id' + i).multiselect('select', multiselectarray);
                                }
                                else {
                                    $('option', $('#id' + i)).each(function (element) {
                                        $(this).removeAttr('selected').prop('selected', false);
                                    });
                                    $('#id' + i).multiselect('refresh');
                                }
                            }
                            break;
                        default:
                            SetFilterObjectText(i, RetrieveParamList[i].Operator);
                            $('#id' + i).val(RetrieveParamList[i].Value1);
                            break;
                    }
                }
            }
        }

        self.txtAdmin_Leave = function () {
            var passch = jQuery('#Admin_Pass').val();
            if (passch == null || passch == "")
                return false;

            $.ajax({
                url: "CheckAdminLogin",
                type: "POST",
                data: { Pass_Char: passch },
                async: false,
                success: function (response) {
                    jQuery('#Admin_Pass').val("");
                    if (response.Message != "") {

                        document.getElementById('Admin_Pass').value = "";
                        document.getElementById('Admin_Pass').focus();
                        $("#AdminMessage").text(response.msg);
                    }
                    else {
                        $("#AdminPwdDialog").dialog("close");
                        if (OptionMenuName == "GENERATE EMAIL LIST")
                            RepList.CallEmailList();
                        OptionMenuName = "";
                    }
                }
            });

        }

        function MailPreviewGridList() {
            $.ajax({
                url: "FillMailpreviewGrid",
                type: "POST",
                success: function (response) {
                    RepList.MailpreviewList(response.Items);
                    RepList.txtfromname(response.Items[1].Value);
                    RepList.txtfrommail(response.Items[1].Value);
                }
            });
        }

        self.txtbtnsend = function () {
            $.ajax({
                url: "FillMemSchedule",
                type: "POST",
                async: false,
                data: { Sender: self.txtfrommail(), SenderName: self.txtfromname(), Subj: self.txtsubject(), Msg: self.txtbody(), ReportNameToLoad: self.FileName(), MainMembersonly: document.getElementById('EmailsendMainmem').checked },
                success: function (response) {
                    if (response.Items != null && response.Items != "") {
                        $("#Mailpreviewdialog").dialog("close");
                        alert("Gro Group", response.Items)
                        $("#EmailsendMainmem").prop('checked', false);
                        $("#EmailAllMem").prop('checked', false);
                    }
                }
            });

        }

        self.SendSMSText = function () {
            SendSMSAllText('TEST');
        }

        self.SendSMSAllText = function () {
            SendSMSAllText('AllText');
        }

        function SendSMSAllText(btntype) {
            var typ;
            typ = btntype;

            if (document.getElementById('textmessage').value == "") {
                $.msgBox({
                    title: "Gro Group", content: "Please enter Text Message",
                    afterClose: function (result) {
                        document.getElementById('textmessage').focus();
                    }
                });

                return;
            }

            if (selaccts != null && selaccts != "" || Eselaccts != null && Eselaccts != "") {
                $("#btnSendAllText").attr("disabled", "disabled");
                $("#btnSendAllText").css("cursor", "not-allowed");
                $.ajax({
                    url: 'SendAllText',
                    type: 'POST',
                    data: { btnTest: typ, smsText: document.getElementById('textmessage').value, txtCellPhone: document.getElementById('txtcellphone').value, txtSubject: document.getElementById('txtsmssubj').value, selaccts: selaccts, Eselaccts: Eselaccts },
                    success: function (response) {
                        if (response.Items != "") {
                            alert("Gro Group", response.Items, false, false);
                        }
                        else {
                            alert("Gro Group", "SMS sent successfully", false, false);
                            $("#btnSendAllText").removeAttr('disabled');
                            $("#btnSendAllText").css("cursor", "pointer");
                        }
                    },
                    error: function (request, status, error) {
                        alert("Gro Group", request.responseText, false, false);
                        $("#btnSendAllText").removeAttr('disabled');
                        $("#btnSendAllText").css("cursor", "pointer");
                    }
                });
            }
            else {
                alert("Gro Group", "Please select records to Send Text", false, false);
            }

        }

        self.DatasetOK = function () {
            $('#Createcustomdatasetdialog').dialog("open");
            $('#Createdatasetdialog').dialog("close");
            $('#Datasetnametxtbox').val('');
        }

        self.Create = function () {
            var IsPub = false;
            var IsAct = false;

            if (document.getElementById('Datasetnametxtbox').value == "") {
                $.msgBox({
                    title: "Gro Group", content: "Please enter Dataset Name",
                    afterClose: function (result) {
                        document.getElementById('Datasetnametxtbox').focus();
                    }
                });

                return;
            }

            if (document.getElementById('chkPublic').checked == true) {
                IsPub = true;
            }
            if (document.getElementById('chkActive').checked == true) {
                IsAct = true;
            }
            $.ajax({
                url: "InsertCreateDataSet",
                type: "POST",
                data: { name: document.getElementById('Datasetnametxtbox').value, ispublic: IsPub, isActive: IsAct },
                success: function (response) {
                    if (response.Exists == true) {
                        $.msgBox({
                            title: "Add to Custom Dataset", content: "This name already exists. Please enter a different dataset name",
                            afterClose: function (result) {
                                document.getElementById("Datasetnametxtbox").focus();
                            }
                        });
                    }
                    else {
                        $('#Createcustomdatasetdialog').dialog("close");
                    }
                }
            });
        }

        self.txtbtncancel = function () {
            $("#Mailpreviewdialog").dialog("close");
            alert("Gro Group", "Email has not been Sent")
        }

        self.CallEmailList = function () {
            $.ajax({
                url: "IsGridSelectRecordExist",
                type: "POST",
                success: function (response) {
                    if (response.Message != "") {
                        alert("Gro Group", response.Message, false, false);
                        return false;
                    }
                    else {
                        $.msgBox({
                            title: "Gro Group",
                            content: "Include Name?",
                            type: "confirm",
                            buttons: [{ value: "Yes" }, { value: "No" }],
                            success: function (result) {
                                if (result == "Yes") {
                                    EmailList();
                                }
                                else {
                                    self.GenEmail();
                                }
                            }
                        });
                    }
                }
            });
        }

        self.SaveList = function () {

            if (document.getElementById('txtExistingList').value == "" && document.getElementById('txtnewrenamelist').value == "") {
                alert("Gro Group", "Please select existing list/enter the new list name.", false, false);
                return;
            }

            var cmsg = "";
            if (document.getElementById('txtExistingList').value != "" && document.getElementById('txtnewrenamelist').value == "") {
                var e = document.getElementById('txtExistingList');
                var strInfo = e.options[e.selectedIndex].text;
                cmsg = "Update List  [" + strInfo + "]?"
            }

            if (document.getElementById('txtExistingList').value != "" && document.getElementById('txtnewrenamelist').value != "") {
                cmsg = "Rename List as [" + document.getElementById('txtnewrenamelist').value + "] and update List?"
            }

            if (document.getElementById('txtExistingList').value == "" && document.getElementById('txtnewrenamelist').value != "") {
                cmsg = "Create New List as [" + document.getElementById('txtnewrenamelist').value + "]?"
            }

            $.msgBox({
                title: "Gro Group",
                content: cmsg,
                parent: true,
                type: "confirm",
                buttons: [{ value: "Yes" }, { value: "No" }],
                success: function (result) {
                    if (result == "Yes") {
                        $("#CreateAptusMailDialog").dialog("close");
                        $("#loading").fadeIn();
                        $.ajax({
                            url: 'SaveAptusList',
                            type: 'POST',
                            data: { listName: document.getElementById('txtnewrenamelist').value, listid: document.getElementById('txtExistingList').value },
                            success: function (response) {
                                $("#loading").fadeOut();
                            },
                            error: function (request, status, error) {
                                $("#loading").fadeOut();
                                alert("Gro Group", request.responseText, false, false);
                            }
                        });
                    }
                }
            });

        }

        self.DelList = function () {
            if (document.getElementById('txtExistingList').value == "") {
                alert("Gro Group", "Please select existing list.", false, false);
                return;
            }

            var e = document.getElementById('txtExistingList');
            var strInfo = e.options[e.selectedIndex].text;

            $.msgBox({
                title: "Gro Group",
                content: "Delete [" + strInfo + "] ?",
                parent: true,
                type: "confirm",
                buttons: [{ value: "Yes" }, { value: "No" }],
                success: function (result) {
                    if (result == "Yes") {
                        $("#CreateAptusMailDialog").dialog("close");
                        $("#loading").fadeIn();
                        $.ajax({
                            url: 'DeleteAptusList',
                            type: 'POST',
                            data: { listid: document.getElementById('txtExistingList').value },
                            success: function (response) {
                                $("#loading").fadeOut();
                            },
                            error: function (request, status, error) {
                                $("#loading").fadeOut();
                                alert("Gro Group", request.responseText, false, false);
                            }
                        });
                    }
                }
            });

        }

        self.SyncList = function () {

            $.msgBox({
                title: "Gro Group",
                content: "Update Email Status for Members?", //"Sync [" + strInfo + "] ?",
                parent: true,
                type: "confirm",
                buttons: [{ value: "Yes" }, { value: "No" }],
                success: function (result) {
                    if (result == "Yes") {
                        $("#CreateAptusMailDialog").dialog("close");
                        $("#loading").fadeIn();
                        $.ajax({
                            url: 'SyncAptusList',
                            type: 'POST',
                            data: { listid: "" },
                            success: function (response) {
                                $("#loading").fadeOut();
                            },
                            error: function (request, status, error) {
                                $("#loading").fadeOut();
                                alert("Gro Group", request.responseText, false, false);
                            }
                        });
                    }
                }
            });
        }

        self.ExistingList = function () {
            if (document.getElementById('txtExistingList').value != null && document.getElementById('txtExistingList').value != "") {
                var e = document.getElementById('txtExistingList');
                var strInfo = e.options[e.selectedIndex].text;
                document.getElementById('txtnewrenamelist').value = strInfo;

                $.ajax({
                    url: 'SelectSubscribers',
                    type: 'POST',
                    data: { listid: document.getElementById('txtExistingList').value },
                    success: function (response) {
                        document.getElementById('lblaptusmailcnt').innerText = response.Items;
                    }
                });
            }
            else {
                document.getElementById('txtnewrenamelist').value = "";

                $.ajax({
                    url: 'GetEmailListCount',
                    type: 'POST',
                    success: function (response) {
                        document.getElementById('lblaptusmailcnt').innerText = response.Items;
                    }
                });
            }
        }

        self.GenEmail = function () {
            var EmailList = "";
            $.ajax({
                url: 'GenerateEmailList',
                type: 'POST',
                data: { MemHeader: self.Description() },
                success: function (response) {
                    EmailList = response.Items;
                    if (response.Message != "") {
                        alert("Gro Group", response.Message, false, false);
                        return false;
                    }
                    if (EmailList != "") {
                        document.getElementById('hylnproceed').click();
                        setTimeout(function () {
                            DeleteExportedFile();
                        }, 1000);
                    }
                },
            });
        }

        function DeleteExportedFile() {
            $.ajax({
                url: "DeleteExportFile",
                type: "POST",
                success: function (response) {

                }
            });
        }

        FillReportSubMenus("");

        function FillReportSubMenus(IsFavourites) {
            //$.ajax({
            //    url: "ReportOptionsList",
            //    type: "POST",
            //    async:false,
            //    data: { IsAddFavourites: IsFavourites, IsExport: Exportbtn },
            //    success: function (response) {
            //        favouritesoption = IsFavourites;
            //        self.ReportOptlist(response.Items);
            //        if (response.Items1 == "FALSE") {
            //            $("#hideMemuserrights").hide();

            //        }
            //        else {
            //            $("#hideMemuserrights").show();
            //        }
            //    }
            //});
        }

        self.ReportDescriptSave = function () {
            $.ajax({
                url: "ReportDescriptionClick",
                type: "POST",
                data: { RepName: self.test(), EditSecPointsNO: secpointNO },
                success: function (response) {
                    $("#ReportDescriptiondialog").dialog("close");
                }
            });
        }

        $("#infotitle").mouseover(function () {
            self.ReportDescriptOnload();
            $("#infotitle").attr('title', tooltipinfo);
        });


        self.ReportDescriptOnload = function () {
            if (secpointNO == null || secpointNO == "") {
                tooltipinfo = "";
                return false;
            }
            $.ajax({
                url: "ReportDescriptionOnload",
                type: "POST",
                data: { EditSecPointsNO: secpointNO },
                async: false,
                success: function (response) {
                    self.test(response.Items);
                    tooltipinfo = response.Items;
                }
            });
        }

        self.MailFromCheck = function () {
            if (self.txtMailFrom() != null && self.txtMailFrom() != "") {
                if (!ValidateEmail(self.txtMailFrom())) {
                    $.msgBox({
                        title: "Warning", content: "Invalid Email",
                        afterClose: function (result) {
                            document.getElementById('MailFrom').value = "";
                            document.getElementById('MailFrom').focus();
                        }
                    });
                    return false;
                }
            }
        }

        self.FileNameChange = function () {
            if (document.getElementById('CmbSelectDocument').value == null || document.getElementById('CmbSelectDocument').value == "") {
                document.getElementById('MergeBodyDiv').style.display = 'block';
                $("#btnSendEmail").show();
                $("#Clickkbtn").hide();
                self.txtEMailSubject("");
            }
            else {
                document.getElementById('MergeBodyDiv').style.display = 'none';
                $("#btnSendEmail").hide();
            }
        }

        self.getfilfrmletters = function () {
            $.ajax({
                url: "GetFilesFromLetters",
                type: "POST",
                success: function (response) {
                    self.FileNameList(response.Items);
                    Letters = "yes";
                    $("#Clickkbtn").hide();
                    $("#btnSendEmail").show();
                    self.txtEMailSubject("");
                    self.txtAttachment("");
                    self.hdntxtAttachment("");
                }
            });
        }
        self.getmailmergeList = function () {
            $.ajax({
                url: "ReportLookupList",
                type: "POST",
                data: { lookupid: 'MMERGETYPE' },
                async: false,
                success: function (response) {
                    self.cmbmergelist(response.Items);
                    self.txtMergtype("P");
                }
            });
        }

        self.getmailerdetailsList = function () {
            $.ajax({
                url: "mailerdetailsList",
                type: "POST",
                async: false,
                success: function (response) {
                    self.txtFromName(response.Itemsfrm);
                    self.txtMailFrom(response.Itemsadd);
                }
            });
        }

        self.MergeClick = function () {
            $("#Clickkbtn").show();
            $("#btnSendEmail").show();
            var filnam = document.getElementById('CmbSelectDocument').value;
            var mergefile = "";
            mergefile = filnam;
            filnam = filnam.replace(".html", "");
            document.getElementById('EMailSubject').value = filnam;
            self.txtEMailSubject(filnam);

            if (RepList.SamplFillRepGrid().length > 0) {
                var memblist = [];
                memblist = window.document.getElementById('gridpage').contentWindow.memberarrylist;
                if (memblist.length > 0) {
                    selaccts = "";
                    Eselaccts = "";
                    $.ajax({
                        url: "MailMergeClick",
                        type: "POST",
                        data: { file: mergefile, Letters: Letters, mergtyp: self.txtMergtype(), memberlist: memblist },
                        success: function (response) {
                            mailpath = response.Items;
                            $("#Clickkbtn").text(response.mergname);
                        }
                    });

                }
                else {
                    alert("Gro Group", "Please select records to MailMerge", false, false);
                }
            }
        }
        self.ViewFile = function () {
            var resfile = window.location.href.split('/Reports');
            var origin = resfile[0];
            var url = origin + "/temp/" + mailpath;
            window.open(url);
        }

        self.ClearValue = function () {
            self.txtAttachment("");
            self.hdntxtAttachment("");
            $("#imgfile").val("");

        }
        self.mailattachment = function () {
            browse = "browsebuton";
            $("#imgfile").click();
        }

        self.Mergesendmail = function () {
            if (self.txtMailFrom() == null || self.txtMailFrom() == "") {
                $.msgBox({
                    title: "Gro Group", content: "Please Provide Email from to proceed further",
                    afterClose: function (result) {
                        document.getElementById("MailFrom").focus();

                    }
                });
                return false;
            }
            var memblist = [];
            memblist = window.document.getElementById('gridpage').contentWindow.memberarrylist;
            document.getElementById("loadingMerge").style.visibility = 'visible';
            $("#loadingMerge").fadeIn();
            $.ajax({
                url: "MailMergesendmail",
                type: "POST",
                data: {
                    file: self.Filenametype(), mergtyp: self.txtMergtype(), mailfromid: self.txtMailFrom(),
                    mailsubj: self.txtEMailSubject(), mailfrmName: self.txtFromName(),
                    mailattach: self.hdntxtAttachment(),
                    ChkDupemail: document.getElementById('ChkDupemail').checked,
                    chksendcopy: document.getElementById('chksendcopy').checked,
                    memberlist: memblist,
                    MailMergeBody: self.MailMergeBody()
                },
                success: function (response) {
                    self.MailMergeBody("");
                    self.txtEMailSubject("");
                    self.txtAttachment("");
                    self.hdntxtAttachment("");
                    $("#imgfile").val("");
                    $("#Clickkbtn").hide();
                    $("#loadingMerge").fadeOut();
                    document.getElementById("loadingMerge").style.visibility = 'hidden';
                    if (response.Items != "")
                        alert("Gro Group", response.Items, false, false);
                }
            });
        }

        var checkuploadfile = "";

        self.UploadFile = function () {
            browse = "";
            checkuploadfile = "Change Folder";
            $("#imgfile").click();

        }
        self.UploadFileChange = function () {
            if (browse != "") {
                checkuploadfile = browse;
            }

            $("#imgform").ajaxSubmit({
                url: 'UploadFile',
                data: { checkuploadfile: checkuploadfile },
                type: 'post',
                success: function (response) {
                    if (browse == "") {
                        if (response.msg == "") {
                            if (response.Items != "") {
                                var items = [];
                                items.push(response.Items);
                                self.FileNameList(items);
                                Letters = "";
                            }

                        }

                    }
                    else {
                        self.txtAttachment(response.Items);
                        self.hdntxtAttachment(response.path);
                    }
                }
            });
        }


        $.ajax({
            url: "RepSecpointsGroup",
            type: "POST",
            success: function (response) {
                self.Reports(response.Items);

            }
        });

        if (typeof String.prototype.startsWith != 'function') {
            String.prototype.startsWith = function (str) {
                return this.indexOf(str) == 0;
            };
        }

        self.searchselected = function (id, value) {

            var hiddenid = document.getElementById('id').value;
            var searchedtext = document.getElementById('OnSearch').value;
            obj.value = searchedtext;

        };

        self.searchselecteditem = function (item, element, RowObj) {
            var Keys = Object.keys(RowObj);
            $.each(Keys, function (key, val) {
                if (val.toUpperCase() == fieldnamearray[res].toUpperCase()) {
                    document.getElementById(element).innerText = RowObj[val];
                    if (val.toUpperCase() != "DESCRIPT" && val.toUpperCase() != "LOOKUPID" && item[1] != undefined) {
                        document.getElementById(element).value = item[1];
                        document.getElementById("Hdntxtid" + res).value = item[0];
                    }
                    else if (val.toUpperCase() == "DESCRIPT") {
                        document.getElementById(element).value = RowObj[val];
                        document.getElementById("Hdntxtid" + res).value = RowObj[val];
                    }
                    else {
                        document.getElementById(element).value = item[0];
                        document.getElementById("Hdntxtid" + res).value = item[0];
                    }

                    return false;
                }
            });
        }

        var togSrc1 = ["../images/right%20arrow.png",
     "../images/Down1.png"];
        var currentid;
        self.selectThing = function (item) {
            ReportMenuDesc = "";
            $(".tog").attr("src", "../images/right%20arrow.png");
            $("#" + currentid).attr("src", "../images/right%20arrow.png");
            currentid = event.currentTarget.id;
            src = togSrc1.reverse()[0];
            $("#" + event.currentTarget.id).attr("src", src);
            self.Favourlist("");

            document.getElementById('hidden').value = item.SecPointsNo;
            if (hidden == item.SecPointsNo) {

                for (var i = 0; i < 20; i++) {

                    var a = document.getElementById('index' + i).value;
                    if (a == hidden) {
                        document.getElementById('table' + i).style.display = 'none';
                        hidden = "";
                        $("#" + event.currentTarget.id).attr("src", "../images/right%20arrow.png");
                    }

                }
                hidden = "";
                $("#" + currentid).attr("src", "../images/right%20arrow.png");
                $("#tog").attr("src", "../images/right%20arrow.png");
                return;
            }
            else {
                hidden = item.SecPointsNo;

                $.ajax({
                    url: "RepSecpointsList",
                    type: "POST",
                    data: { um: item.UserModule },
                    success: function (response) {
                        self.Reportslist(response.Items);
                        $("#" + currentid).attr("src", "../images/Down1.png");
                        for (var i = 0; i < 20; i++) {
                            if (document.getElementById('index' + i) != null) {
                                var a = document.getElementById('index' + i).value;
                                document.getElementById('table' + i).style.display = 'none';
                                if (a == hidden) {
                                    document.getElementById('table' + i).style.display = 'block';
                                }
                            }
                        }
                    }
                });
            }
            currentid;
        };

        self.FillGridandreport = function () {
            var Tabcheck = $("#tabs").tabs('option', 'active');
            var getreport = "";
            if (Tabcheck == 0) {
                return false;
            }
            if (Tabcheck == 1) {
                getreport = "TRUE";
            }
            if (ChkMAX > 60 || ChkMAX1 > 60) {
                alert("Gro Group", "Please select a maximum of 60 items in the list", false, false);
                $("#FilterDiv").click();
                return false;
            }
            $("#loading").fadeIn();
            $("#reportpage").contents().find("body").html('');
            $("#gridpage").contents().find("body").html('');
            document.getElementById('reportpage').src = '';
            document.getElementById('gridpage').src = '';
            if (document.getElementById('chkintelfilter') != null && document.getElementById('chkintelfilter').checked == false) {
                showfilters = true;
                IntelligenceFilter();
            }
            if (!savefilter()) {
                $("#loading").fadeOut();
                return false;
            }
            var secpointno = "";
            if (Description != "New Member Listing - Summary" && Description != "Resource Occupancy")
                secpointno = JSON.stringify(self.OPsecuritypoints());
            var starttime = new Date();
            var starttimesec = starttime.getSeconds();
            if (checkdt != filter || checkdt == "") {
                ReportviewCol = "";
                checkdt = filter;
            }
            else {
                checkdt = filter;
            }
            $.ajax({
                url: "ReportQry",
                type: "POST",
                data: { Repname: self.FileName(), Filter: filter, UserModule: self.UserModule, Description: Description, controls: JSON.stringify(repcontrols), qry: self.SQLSelect(), viewcolumns: self.viewallcols(), FilterColname: filtercolname, sortby: sortbyparam, SecPointsNo: self.SecPointsNo(), SqlWhere: self.SqlLWhere(), ReportviewCol: ReportviewCol, getreport: getreport,GuId: '@ViewBag.GUID' },
                success: function (response) {
                    filterdescription = filtercolname;
                    if (response.Items != "") {
                        $("#FilterDiv").click();
                        alert("Warning", response.Items, false, false);
                        $("#loading").fadeOut();
                    }
                    else {
                        filter = "";
                        filtercolname = "";
                        self.FillRepGrid(response.Items);

                        if (response.Item != undefined && response.Item.length > 0) {
                            self.SamplFillRepGrid(response.Item);
                        }
                        else {
                            self.SamplFillRepGrid("");
                        }

                        if (Description == "Executive Verification") {
                            document.getElementById('reportpage').src = '';
                            document.getElementById('gridpage').src = "GridView?GuId="+'@ViewBag.GUID';

                            $.ajax({
                                url: "GenerateExecutiveVerificationReport",
                                type: "POST",
                                data:{GuId: '@ViewBag.GUID'},
                                success: function (response) {
                                    document.getElementById('hlnkRpt').href = "GetExecutiveVerificationPages?fname=" + response.fname;
                                    document.getElementById('hlnkRpt').click();
                                },
                                error: function (Request, textStatus, errorThrown) {
                                    alert("Executive Verification", Request.responseText, true, false);
                                }
                            });

                        }
                        else {
                            document.getElementById('reportpage').src = "ReportView?GuId="+'@ViewBag.GUID';
                            document.getElementById('gridpage').src = "GridView?GuId="+'@ViewBag.GUID';
                        }

                        if (response.IsAcctnoColumn == "YES")
                            self.IsExistAcctno(true);
                        else
                            self.IsExistAcctno(false);

                        var endtime = new Date();
                        var endtimesec = endtime.getSeconds();

                        var Timediff = endtimesec - starttimesec;
                        Timediff = Timediff * 1000;

                        $('#loading').delay(Timediff).show().fadeOut('slow');
                        Timediff = 0;

                    }
                }
            });
        }

        $("#descriptionlbl").mouseover(function () {
            $("#descriptionlbl").attr('title', filterdescription);
        });

        function savefilter() {
            MembergpEmail = "";
            xmlcontent = "";
            filter = "";
            filtercolname = "";
            StrDisplayval = "";
            repcontrols = {};
            xmlcontent = xmlcontent + "<Root>";

            for (var i = 0; i < filtercount; i++) {

                var objdatecalcele = document.getElementById('iddatecalc' + i);

                var object = "", objectno = "";
                object = document.getElementById('id' + i);

                var fn = object.getAttribute('fieldname');
                var type = object.getAttribute('sqltype');
                //if (fn.toUpperCase() == "MFGNO" || fn.toUpperCase() == "DISTNO" ||fn.toUpperCase() == "RETAILERNO" || fn.toUpperCase() =="RCORPNO") {
                //    objectno = document.getElementById('txtid' + i);
                //}

                var Nobj = document.getElementById('idN' + i);
                var dobj = document.getElementById('idd' + i);
                var filterobj = document.getElementById('lbldisp' + i);
                var mychk = document.getElementById('chkid' + i);
                if (object != undefined && object != null && object != "") {
                    GselectAllLen = document.getElementById('id' + i).length;
                }

                if (object != null) {
                    var val = "", Desc = "";
                    if (type.toUpperCase() == "L") {
                        if (object.value != "")
                            val = $("#Hdntxtid" + i).val();
                        else
                            val = "";
                    }
                    else
                        val = object.value;

                    Desc = object.value;

                    var Nval = "";
                    if (Nobj != null)
                        Nval = Nobj.value;
                    var multiid = object.id;
                    var mulvals = [];
                    mulvals = $("#" + multiid).val();
                    var mulval = "", MulDesc = "", SDesc;
                    var mulvaletypelist = "";
                    var valss = "";
                    if (mulvals != null && mulvals != "") {
                        for (var r = 0; r < mulvals.length; r++) {
                            mulval += "'";
                            mulval += mulvals[r];
                            mulval += "',";
                            mulvaletypelist += mulvals[r] + ",";
                            if (type.toUpperCase() == "SINGLE")
                                SDesc = $("#" + multiid)[0].selectedOptions[0].innerText;
                        }
                        mulvaletypelist = mulvaletypelist.substring(0, mulvaletypelist.length - 1);
                        mulval = mulval.substring(0, mulval.length - 1);
                        valss = mulvals.toString();
                    }
                    if (dobj != null) {
                        var dval = dobj.value;
                    }
                    else
                        dval = "";

                    if (filterobj != null) {
                        var fval = filterobj.getAttribute('lblfilterval'); //filterobj.value;
                    }
                    else
                        fval = "";

                    var operator = "";
                    var fn = object.getAttribute('fieldname');
                    DisplayName = object.getAttribute('Displayname');


                    var Requreid = object.getAttribute('Requreid');
                    if (Filterselect > 0 && Requreid == "true" && self.OPsecuritypoints().SQLWhere == "1" && type == "D2") {
                        if ((val == null || val == "") && (dval == null || dval == "")) {
                            $.msgBox({
                                title: "Gro Group", content: Displaynamearray[i] + " cannot be empty",
                                afterClose: function (result) {
                                    ReqId = '#' + object.id;
                                    $("#FilterDiv").click();
                                }
                            });
                            return false;
                        }
                        if ((val == null || val != "") && (dval == null || dval == "")) {
                            $.msgBox({
                                title: "Gro Group", content: Displaynamearray[i] + " cannot be empty",
                                afterClose: function (result) {
                                    ReqId = '#' + object.id;
                                    $("#FilterDiv").click();
                                }
                            });
                            return false;
                        }
                    }

                    // to check the Document type
                    if ((val == null || val == "") && (DisplayName.toUpperCase() == "DOCUMENT TYPE" && fn.toUpperCase() == "DOCTYPE") && Requreid == "true") {
                        alert("Gro Group", Displaynamearray[i] + " cannot be empty", false, false);
                        $("#FilterDiv").click();
                        return false;
                    }

                    if (val != null && val != "" && saveparamxml == true) {
                        switch (type.toUpperCase()) {
                            case "L":
                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        if (operatorvalue.trim() == "Like") {

                                            filter += "isnull(" + fn + ", '')" + ' ' + Operator + ' ' + "'" + val + "%'" + ' and ';
                                        }
                                        else {
                                            //if (fn.toUpperCase() == "MFGNO" || fn.toUpperCase() == "DISTNO" || fn.toUpperCase() == "RETAILERNO" || fn.toUpperCase() == "RCORPNO") {
                                            //    filter += "isnull(" + fn + ", '')" + ' ' + Operator + ' ' + "'" + document.getElementById("txtid" + [res]).value + "'" + ' and ';
                                            //}
                                            //else
                                            filter += "isnull(" + fn + ", '')" + ' ' + Operator + ' ' + "'" + val + "'" + ' and ';
                                        }
                                        filtercolname += Displaynamearray[i] + ' ' + Operator + ' ' + "'" + Desc + "'" + ' and ';
                                    }
                                }
                                repcontrols[fn] = val;
                                break;
                            case "LL":
                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        if (operatorvalue.trim() == "Like") {
                                            filter += "isnull(" + fn + ", '')" + ' ' + Operator + ' ' + "'%" + val + "%'" + ' and ';
                                        }
                                        filtercolname += Displaynamearray[i] + ' ' + Operator + ' ' + "'%" + val + "%'" + ' and ';
                                    }
                                }
                                break;
                            case "B":
                            case "MULTILOC":
                                // FNWOA Field Name Without Alias
                                //Added code for if class not empty then category assigned to empty
                                //if itemno not empty then class assigned to empty
                                var FNWOA = retFNWithoutAlias(fn);

                                //full description to show in report view
                                var chkcatreport = "";

                                var chkcatreportid = object.id;
                                var chkcatreportmulvals = [];
                                chkcatreportmulvals = $("#" + chkcatreportid)[0].selectedOptions.length;
                                var chkcatreportmulval = "";
                                var valss = "";
                                if ($("#" + chkcatreportid)[0].selectedOptions.length != null && $("#" + chkcatreportid)[0].selectedOptions.length != "" && $("#" + chkcatreportid)[0].selectedOptions.length > 0) {
                                    for (var r = 0; r < $("#" + chkcatreportid)[0].selectedOptions.length; r++) {
                                        chkcatreportmulval += "'";
                                        chkcatreportmulval += $("#" + chkcatreportid)[0].selectedOptions[r].innerText;
                                        chkcatreportmulval += "',";
                                    }
                                    chkcatreport = chkcatreportmulval.substring(0, chkcatreportmulval.length - 1);
                                }
                                if (operatorvalue == "=" || operatorvalue.trim() == "Between") {
                                    operatorvalue = "In";
                                }
                                filtercolname += Displaynamearray[i] + ' ' + operatorvalue + ' ' + "(" + chkcatreport + ")" + ' and ';

                                if (FNWOA.toUpperCase() == "CATEGORY" || FNWOA.toUpperCase() == "GROUP1" || FNWOA.toUpperCase() == "RESOURCETYPE") {
                                    if (filtercount > (i + 1)) {
                                        var fnobj = document.getElementById('id' + (i + 1));
                                        FNWOA = retFNWithoutAlias(fnobj.getAttribute('fieldname'));

                                        if (FNWOA.toUpperCase() == "CLASS" || FNWOA.toUpperCase() == "ITEM_CLASS" || FNWOA.toUpperCase() == "RESOURCE") {
                                            if (fnobj.value != "") {
                                                repcontrols[fn] = "";
                                                continue;
                                            }
                                        }
                                    }
                                }

                                if (FNWOA.toUpperCase() == "CLASS" || FNWOA.toUpperCase() == "ITEM_CLASS") {
                                    if (filtercount > (i + 1)) {
                                        var fnobj = document.getElementById('id' + (i + 1));
                                        FNWOA = retFNWithoutAlias(fnobj.getAttribute('fieldname'));

                                        if (FNWOA.toUpperCase() == "ITEMNO" || FNWOA.toUpperCase() == "ITEM_DESC") {
                                            if (fnobj.value != "") {
                                                repcontrols[fn] = "";
                                                continue;
                                            }
                                        }
                                    }
                                }

                                if (fval != null && fval != "") {
                                    SetOperator(fval);
                                    Operator = operatorvalue;
                                    //Equal to change in condition
                                    if (operatorvalue == "=") {
                                        operatorvalue = "In";
                                    }
                                    if (val != null && val != "") {

                                        if ((DisplayName.toUpperCase() != "PRIMARY" || DisplayName.toUpperCase() != "SECONDARY") && (GselectAllLen == mulvals.length)) {
                                            continue;
                                        }
                                        if (operatorvalue.trim() == "In" || operatorvalue.trim() == "Not In") {
                                            Operator = operatorvalue;

                                            filter += "isnull(" + fn + ", '')" + ' ' + Operator + ' ' + "(" + mulval + ")" + ' and ';
                                            filtercolname += Displaynamearray[i] + ' ' + Operator + ' ' + "(" + mulval + ")" + ' and ';

                                        }
                                        if (operatorvalue.trim() == "Like") {
                                            Operator = operatorvalue;
                                            if (mulvaletypelist != null && mulvaletypelist != "") {
                                                var mulvalsplit = mulvaletypelist.split(',');
                                                var etypefilter = "(";
                                                for (var k = 0; k < mulvalsplit.length; k++) {
                                                    etypefilter += "isnull(" + fn + ", '')" + ' ' + Operator + ' ' + "'" + mulvalsplit[k] + "%'" + ' or ';
                                                    filtercolname += Displaynamearray[i] + ' ' + Operator + ' ' + mulvalsplit[k] + ' or ';
                                                }
                                                if (etypefilter.trim().endsWith("or")) {
                                                    etypefilter = etypefilter.substring(0, etypefilter.length - 4);
                                                    filtercolname = filtercolname.substring(0, filtercolname.length - 4);
                                                }
                                                filter += etypefilter + ")" + ' and ';
                                            }
                                        }
                                    }
                                }
                                break;
                            case "T":

                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        var inputdate = val;
                                        var inputdate1 = val;

                                        //working
                                        if (operatorvalue.trim() != "Between") {
                                            if (operatorvalue == ">") {
                                                filter += " cast(" + fn + " as time) >" + "'" + val + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + ">" + "'" + inputdate + ' ' + '' + "'" + ' and ';
                                            }
                                            else if (operatorvalue == "<") {
                                                filter += " cast(" + fn + " as time) <" + "'" + val + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + "<" + "'" + inputdate + "'" + ' and ';
                                            }
                                            else {
                                                filter += " cast(" + fn + " as time)" + Operator + "'" + inputdate + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + Operator + "'" + inputdate + "'" + ' and ';
                                            }
                                        }
                                        else {
                                            filter += " cast(" + fn + " as time) >=" + "'" + val + "'" + ' and ';
                                            filtercolname += Displaynamearray[i] + ">=" + "'" + inputdate + "'" + ' and ';
                                            if (dval != null && dval != "") {
                                                inputdate1 = val;
                                                filter += " cast(" + fn + " as time) <=" + "'" + inputdate1 + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + "<=" + "'" + inputdate1 + "'" + ' and ';
                                            }
                                        }
                                    }
                                }
                                break;

                            case "N1":
                                if (val != null && val != "" && Nval != null && Nval != "") {
                                    if (parseInt(val) > parseInt(Nval)) {
                                        alert("Warning", "End " + Displaynamearray[i] + " must be greater than " + "Start " + Displaynamearray[i], false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }
                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        if (operatorvalue.trim() != "Between") {
                                            if (operatorvalue == ">") {
                                                filter += fn + operatorvalue + "'" + val + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + operatorvalue + "'" + val + "'" + ' and ';
                                            }
                                            else if (operatorvalue == "<") {
                                                filter += fn + operatorvalue + "'" + val + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + operatorvalue + "'" + val + "'" + ' and ';
                                            }
                                            else {
                                                Operator = " = ";
                                                filter += fn + operatorvalue + "'" + val + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + operatorvalue + "'" + val + "'" + ' and ';
                                            }
                                        }
                                    }
                                }
                                break;

                            case "N2":
                                if (val != null && val != "" && Nval != null && Nval != "") {
                                    if (parseInt(val) > parseInt(Nval)) {

                                        alert("Warning", "End " + Displaynamearray[i] + " must be greater than " + "Start " + Displaynamearray[i], false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }
                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        if (operatorvalue.trim() == "Between") {
                                            Operator = operatorvalue;
                                            filter += fn + '>=' + "'" + val + "'" + ' and ';
                                            filtercolname += Displaynamearray[i] + '>=' + "'" + val + "'" + ' and ';
                                        }
                                        if ((Nval != null && operatorvalue.trim() == "Between") && (Nval != "" && operatorvalue.trim() == "Between")) {
                                            filter += fn + '<=' + "'" + Nval + "'" + ' and ';
                                            filtercolname += Displaynamearray[i] + '<=' + "'" + Nval + "'" + ' and ';
                                        }
                                    }
                                }
                                break;
                            case "C":
                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        if (Description == "Active Credit Card Listing" && operatorvalue.trim() == "LIKE") {
                                            filter += fn + ' ' + Operator + ' ' + "'%" + val + "'" + ' and ';
                                        }
                                        else if (operatorvalue.trim() == "Like") {
                                            filter += fn + ' ' + Operator + ' ' + "'" + val + "%'" + ' and ';
                                        }
                                        else if (operatorvalue.trim() == "In") { //suse
                                            var inval="";
                                            if ((val != null && val.indexOf(',')) > -1) {
                                                var aval = val.split(',');
                                                for (var a = 0; a < aval.length; a++) {
                                                    inval = inval + "'" + aval[a] + "',";
                                                }
                                                inval = inval.substring(0, inval.length - 1);
                                                filter += fn + ' ' + "in (" + inval + ")";
                                            }
                                            else {
                                                filter += fn + ' ' + " = " + ' ' + "'" + val + "'" + ' and ';
                                            }

                                            //if ((val != null && val.indexOf(',')) > -1) {
                                            //    var aval = val.split(',');
                                            //    for (var a = 0; a < aval.length; a++) {
                                            //        filter += fn + ' ' + "like" + ' ' + "'" + aval[a] + "%'" + ' or ';
                                            //    }
                                            //}
                                            //else {
                                            //    filter += fn + ' ' + " = " + ' ' + "'" + val + "'" + ' and ';
                                            //}
                                        }
                                        else {
                                            filter += fn + ' ' + Operator + ' ' + "'" + val + "'" + ' and ';
                                        }
                                        filtercolname += Displaynamearray[i] + ' ' + Operator + ' ' + "'" + val + "'" + ' and ';
                                    }
                                }
                                break;
                            case "D1":
                                if (val != null && val != "") {
                                    var startdate = new Date(val);
                                    if (startdate > currentdate) {
                                        alert("Warning", "Start " + Displaynamearray[i] + " cannot be less than " + "End " + Displaynamearray[i], false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }
                                if ((Displaynamearray[i].toUpperCase() == "START DATE") && ((i + 1) < filtercount)) {
                                    if (Displaynamearray[i].toUpperCase() == "START DATE" && Displaynamearray[i + 1].toUpperCase() == "END DATE") {
                                        var DisplaySdate = Displaynamearray[i];
                                        var DisplayEdate = Displaynamearray[i + 1];
                                        var SDate = new Date(object.value);
                                        var EDate = new Date(document.getElementById('id' + (i + 1)).value);
                                    }
                                }
                                if (SDate != null && SDate != "" && EDate != null && EDate != "") {
                                    if (SDate > EDate) {
                                        alert("Warning", DisplaySdate + " cannot be less than " + DisplayEdate, false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }

                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        var inputdate = new Date(val);
                                        var InputDateFormat = (("0" + (inputdate.getMonth() + 1)).slice(-2) + "/" + ("0" + inputdate.getDate()).slice(-2) + "/" + inputdate.getFullYear());

                                        var inputdate1 = new Date();
                                        var InputDateFormat1 = "";

                                        if (operatorvalue.trim() != "Between") {
                                            if (operatorvalue == ">") {
                                                filter += fn + ">" + "'" + InputDateFormat + ' ' + '23:59:00' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + ">" + "'" + InputDateFormat + ' ' + '23:59:00' + "'" + ' and ';
                                            }
                                            else if (operatorvalue == "<") {
                                                filter += fn + "<" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + "<" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                            }
                                            else {
                                                filter += 'Convert(varchar, ' + fn + ', 101)' + Operator + "'" + InputDateFormat + ' ' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + Operator + "'" + InputDateFormat + ' ' + "'" + ' and ';
                                            }
                                        }
                                        else {
                                            filter += fn + ">=" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                            filtercolname += Displaynamearray[i] + ">=" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                        }
                                    }
                                }
                                break;
                            case "D2":
                                if ((val != null || val != "") && (dval == null || dval == "") && (fval.trim() == "Between") && Requreid == "true") {
                                    alert("Gro Group", Displaynamearray[i] + " cannot be empty", false, false);
                                    $("#FilterDiv").click();
                                    return false;
                                }
                                if (val != null && val != "" && dval != null && dval != "") {
                                    var startdate = new Date(val);
                                    var currentdate = new Date(dval);
                                    if (startdate > currentdate) {
                                        alert("Warning", "Start " + Displaynamearray[i] + " cannot be less than " + "End " + Displaynamearray[i], false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }
                                if ((Displaynamearray[i].toUpperCase() == "START DATE") && ((i + 1) < filtercount)) {
                                    if (Displaynamearray[i].toUpperCase() == "START DATE" && Displaynamearray[i + 1].toUpperCase() == "END DATE") {
                                        var DisplaySdate = Displaynamearray[i];
                                        var DisplayEdate = Displaynamearray[i + 1];
                                        var SDate = new Date(object.value);
                                        var EDate = new Date(document.getElementById('id' + (i + 1)).value);
                                    }
                                }
                                if (SDate != null && SDate != "" && EDate != null && EDate != "") {
                                    if (SDate > EDate) {
                                        alert("Warning", DisplaySdate + " cannot be less than " + DisplayEdate, false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }

                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        var inputdate = new Date(val);
                                        var InputDateFormat = (("0" + (inputdate.getMonth() + 1)).slice(-2) + "/" + ("0" + inputdate.getDate()).slice(-2) + "/" + inputdate.getFullYear());

                                        var inputdate1 = new Date();
                                        var InputDateFormat1 = "";

                                        if (val != null && val != "" && dval != null && dval != "") {
                                            operatorvalue = "Between";
                                        }

                                        if (operatorvalue.trim() != "Between") {
                                            if (operatorvalue == ">") {
                                                filter += fn + ">" + "'" + InputDateFormat + ' ' + '23:59:00' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + ">" + "'" + InputDateFormat + ' ' + '23:59:00' + "'" + ' and ';
                                            }
                                            else if (operatorvalue == "<") {
                                                filter += fn + "<" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + "<" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                            }
                                            else {
                                                filter += 'Convert(varchar, ' + fn + ', 101)' + Operator + "'" + InputDateFormat + ' ' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + Operator + "'" + InputDateFormat + ' ' + "'" + ' and ';
                                            }
                                        }
                                        else {
                                            filter += fn + ">=" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                            filtercolname += Displaynamearray[i] + ">=" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                            if (dval != null && dval != "") {
                                                inputdate1 = new Date(dval);
                                                InputDateFormat1 = (("0" + (inputdate1.getMonth() + 1)).slice(-2) + "/" + ("0" + inputdate1.getDate()).slice(-2) + "/" + inputdate1.getFullYear());
                                                filter += fn + "<=" + "'" + InputDateFormat1 + ' ' + '23:59:00' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + "<=" + "'" + InputDateFormat1 + ' ' + '23:59:00' + "'" + ' and ';
                                            }
                                        }
                                    }
                                }
                                break;
                            case "BIRTHDAY":
                                if (val != null && val != "" && dval != null && dval != "") {
                                    var startdate = new Date(val);
                                    var currentdate = new Date(dval);
                                    if (startdate > currentdate) {
                                        alert("Warning", "Start " + Displaynamearray[i] + " cannot be less than " + "End " + Displaynamearray[i], false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }
                                if (Displaynamearray[i].toUpperCase() == "START DATE" && Displaynamearray[i + 1].toUpperCase() == "END DATE") {
                                    var DisplaySdate = Displaynamearray[i];
                                    var DisplayEdate = Displaynamearray[i + 1];
                                    var SDate = object.value;
                                    var EDate = document.getElementById('id' + (i + 1)).value;
                                }
                                if (SDate != null && SDate != "" && EDate != null && EDate != "") {
                                    if (SDate > EDate) {
                                        alert("Warning", DisplaySdate + " cannot be less than " + DisplayEdate, false, false);
                                        $("#FilterDiv").click();
                                        return false;
                                    }
                                }
                                if (fval != null && fval != "") {
                                    if (val != null && val != "") {
                                        SetOperator(fval);
                                        Operator = operatorvalue;
                                        var inputdate = new Date(val);
                                        var InputMonthFormat = (("0" + (inputdate.getMonth() + 1)).slice(-2));
                                        var InputDayFormat = (("0" + inputdate.getDate()).slice(-2));
                                        var InputDateFormat = (("0" + (inputdate.getMonth() + 1)).slice(-2) + "/" + ("0" + inputdate.getDate()).slice(-2) + "/");
                                        var inputdate1 = new Date();
                                        var InputDateFormat1 = "";
                                        if (operatorvalue.trim() != "Between") {
                                            if (operatorvalue == ">") {
                                                filter += "(month(" + fn + ") > " + InputMonthFormat + " and day(" + fn + ") > " + InputDayFormat + ")" + ' and ';
                                                filtercolname += Displaynamearray[i] + ">" + "'" + InputDateFormat + ' ' + '23:59:00' + "'" + ' and ';
                                            }
                                            else if (operatorvalue == "<") {
                                                filter = "(month(" + fn + ") < " + InputMonthFormat + " and day(" + fn + ") < " + InputDayFormat + ")";
                                                filtercolname += Displaynamearray[i] + "<" + "'" + InputDateFormat + ' ' + '00:00:00' + "'" + ' and ';
                                            }
                                            else {
                                                filter += 'Convert(varchar, ' + fn + ', 101)' + Operator + "'" + InputDateFormat + ' ' + "'" + ' and ';
                                                filtercolname += Displaynamearray[i] + Operator + "'" + InputDateFormat + ' ' + "'" + ' and ';
                                            }
                                        }
                                        else {
                                            filter += "(month(" + fn + ") >= " + InputMonthFormat + " and day(" + fn + ") >= " + InputDayFormat + ")" + ' and ';
                                            filtercolname += Displaynamearray[i] + ">=" + "'" + InputMonthFormat + "/" + InputDayFormat + "'" + ' and ';
                                            if (dval != null && dval != "") {
                                                inputdate1 = new Date(dval);
                                                InputDateFormat1 = (("0" + (inputdate1.getMonth() + 1)).slice(-2) + "/" + ("0" + inputdate1.getDate()).slice(-2));
                                                InputDayFormat1 = (("0" + inputdate1.getDate()).slice(-2));
                                                InputMonthFormat1 = (("0" + (inputdate1.getMonth() + 1)).slice(-2));
                                                filter += "(month(" + fn + ") <=" + InputMonthFormat1 + " and day(" + fn + ") <= " + InputDayFormat1 + ")" + ' and ';
                                                filtercolname += Displaynamearray[i] + "<=" + "'" + InputMonthFormat1 + "/" + InputDayFormat1 + "'" + ' and ';
                                            }
                                        }
                                    }
                                }
                                break;
                            default:

                                if (type.toUpperCase() == "SINGLE" && Displaynamearray[i].toUpperCase() == "ORDER BY") {
                                    if (filter.trim().endsWith("and")) {
                                        filter = filter.substring(0, filter.length - 4);
                                        filtercolname = filtercolname.substring(0, filtercolname.length - 4);
                                    }
                                    filter += fn + " " + valss + "";
                                    filtercolname += Displaynamearray[i] + " " + SDesc + "";
                                }
                                else {
                                    filter += fn + " " + fval + " " + "'" + valss + "'" + ' and ';
                                    filtercolname += Displaynamearray[i] + fval + "'" + SDesc + "'" + ' and ';
                                }
                                break;
                        }
                    }
                    if (type != "L") {
                        mulvals = $("#" + multiid).val();
                        //if (fn.toUpperCase() == "MFGNO" || fn.toUpperCase() == "DISTNO" ||fn.toUpperCase() == "RETAILERNO" || fn.toUpperCase() =="RCORPNO") {
                        //    mulvals = objectno.value;
                        //}
                        var mulval = "";
                        var valss = "";
                        if (mulvals != null)
                            valss = mulvals.toString();
                        muval = valss;
                        if (valss != null && valss.indexOf(",") > -1) {
                            var muval = [];
                            muval = valss.split(',');
                            for (var r = 0; r < muval.length; r++) {
                                mulval += muval[r];
                                mulval += ",";
                            }
                            mulval = mulval.substring(0, mulval.length - 1);
                        }
                        else
                            mulval = muval;
                        if (mulvals != null) {
                            if (dval != null && dval != "") {
                                if (type.toUpperCase() != "D2") {
                                    repcontrols[fn] = mulval;
                                    repcontrols["E" + fn] = InputDateFormat1;
                                }
                                else {
                                    repcontrols[fn] = mulval + ' 00:00:00';
                                    repcontrols["E" + fn] = InputDateFormat1 + ' 23:59:00';
                                }

                            }
                            else
                                repcontrols[fn] = mulval;
                        }
                        else
                            repcontrols[fn] = val;
                    }
                    if (mychk != null) {
                        var val1 = "", chkval = "", vals = "";
                        var fn = mychk.getAttribute('fieldname');
                        var type = mychk.getAttribute('sqltype');
                        val1 = mychk.id;
                        chkval = document.getElementById(val1).checked;
                        if (chkval == true) {
                            vals = true;
                            var a = fn + '=' + "'" + chkval + "'";
                            var MainAcctval = (retFNWithoutAlias(fn).toUpperCase() == "MAINACCTNO") ? 0 : 1;
                            filter += " isnull(" + fn + ",0)=" + MainAcctval + ' and ';
                        }
                        else {
                            vals = false;
                        }
                        filtercolname += Displaynamearray[i] + '=' + "'" + chkval + "'" + ' and ';
                        repcontrols[fn] = vals;
                    }
                }

                xmlcontent = xmlcontent + "<Critria>";
                if (fval == ">") {
                    fval = "&gt;";
                }
                if (fval == "<") {
                    fval = "&lt;";
                }
                if (type == "B" && valss.indexOf("&")) {
                    valss = valss.replace("&", "&amp;")
                }

                var objdatecalval = "";
                if (objdatecalcele != undefined && objdatecalcele != null && objdatecalcele != "" && objdatecalcele != "null") {
                    objdatecalval = objdatecalcele.getAttribute('title');
                }

                if (fval.toUpperCase() == "BETWEEN") {
                    if (type.toUpperCase() == "N2") {
                        xmlcontent = xmlcontent + "<Type>" + type + "</Type>";
                        xmlcontent = xmlcontent + "<Operator>" + fval + "</Operator>";
                        xmlcontent = xmlcontent + "<DisplayName>" + Displaynamearray[i] + "</DisplayName>";
                        xmlcontent = xmlcontent + "<FieldName>" + fn + "</FieldName>";
                        xmlcontent = xmlcontent + "<Value1>" + valss + "</Value1>";
                        xmlcontent = xmlcontent + "<Value2>" + Nval + "</Value2>";
                        xmlcontent = xmlcontent + "<DateCalc></DateCalc>";
                        xmlcontent = xmlcontent + "<Conjunction/>";
                    }
                    else {
                        if ((type.toUpperCase() == "D1" || type.toUpperCase() == "D2" || type.toUpperCase() == "BIRTHDAY") && valss != "" && (objdatecalval == null || objdatecalval == "")) {
                            xmlcontent = xmlcontent + "<Type>" + type + "</Type>";
                            xmlcontent = xmlcontent + "<Operator>" + fval + "</Operator>";
                            xmlcontent = xmlcontent + "<DisplayName>" + Displaynamearray[i] + "</DisplayName>";
                            xmlcontent = xmlcontent + "<FieldName>" + fn + "</FieldName>";
                            xmlcontent = xmlcontent + "<Value1>" + valss + "</Value1>";
                            xmlcontent = xmlcontent + "<Value2>" + dval + "</Value2>";
                            xmlcontent = xmlcontent + "<DateCalc>" + objdatecalval + "</DateCalc>";
                            xmlcontent = xmlcontent + "<Conjunction/>";

                            StrDisplayval += Displaynamearray[i] + ",";
                        } else {
                            xmlcontent = xmlcontent + "<Type>" + type + "</Type>";
                            xmlcontent = xmlcontent + "<Operator>" + fval + "</Operator>";
                            xmlcontent = xmlcontent + "<DisplayName>" + Displaynamearray[i] + "</DisplayName>";
                            xmlcontent = xmlcontent + "<FieldName>" + fn + "</FieldName>";
                            xmlcontent = xmlcontent + "<Value1>" + valss + "</Value1>";
                            xmlcontent = xmlcontent + "<Value2>" + dval + "</Value2>";
                            xmlcontent = xmlcontent + "<DateCalc>" + objdatecalval + "</DateCalc>";
                            xmlcontent = xmlcontent + "<Conjunction/>";

                        }
                    }
                }
                else {
                    if (type.toUpperCase() == "CHECK") {
                        xmlcontent = xmlcontent + "<Type>" + type + "</Type>";
                        xmlcontent = xmlcontent + "<Operator>" + '=' + "</Operator>";
                        xmlcontent = xmlcontent + "<DisplayName>" + Displaynamearray[i] + "</DisplayName>";
                        xmlcontent = xmlcontent + "<FieldName>" + fn + "</FieldName>";
                        xmlcontent = xmlcontent + "<Value1>" + vals + "</Value1>";
                        xmlcontent = xmlcontent + "<DateCalc></DateCalc>";
                        xmlcontent = xmlcontent + "<Conjunction/>";
                    }
                    else {
                        if ((type.toUpperCase() == "D1" || type.toUpperCase() == "D2" || type.toUpperCase() == "BIRTHDAY") && valss != "" && (objdatecalval == null || objdatecalval == "")) {
                            xmlcontent = xmlcontent + "<Type>" + type + "</Type>";
                            xmlcontent = xmlcontent + "<Operator>" + fval + "</Operator>";
                            xmlcontent = xmlcontent + "<DisplayName>" + Displaynamearray[i] + "</DisplayName>";
                            xmlcontent = xmlcontent + "<FieldName>" + fn + "</FieldName>";
                            xmlcontent = xmlcontent + "<Value1>" + valss + "</Value1>";
                            if (type.toUpperCase() == "D" || type.toUpperCase() == "D1") {
                                xmlcontent = xmlcontent + "<DateCalc>" + objdatecalval + "</DateCalc>";
                            }
                            else {
                                xmlcontent = xmlcontent + "<DateCalc></DateCalc>";
                            }
                            xmlcontent = xmlcontent + "<Conjunction/>";
                            StrDisplayval += Displaynamearray[i] + ",";
                        }
                        else {
                            xmlcontent = xmlcontent + "<Type>" + type + "</Type>";
                            xmlcontent = xmlcontent + "<Operator>" + fval + "</Operator>";
                            xmlcontent = xmlcontent + "<DisplayName>" + Displaynamearray[i] + "</DisplayName>";
                            xmlcontent = xmlcontent + "<FieldName>" + fn + "</FieldName>";
                            xmlcontent = xmlcontent + "<Value1>" + valss + "</Value1>";
                            if (type.toUpperCase() == "D" || type.toUpperCase() == "D1") {
                                xmlcontent = xmlcontent + "<DateCalc>" + objdatecalval + "</DateCalc>";
                            }
                            else {
                                xmlcontent = xmlcontent + "<DateCalc></DateCalc>";
                            }
                            xmlcontent = xmlcontent + "<Conjunction/>";
                        }

                    }
                }
                xmlcontent = xmlcontent + "</Critria>";
            }
            xmlcontent = xmlcontent + "</Root>";
            xmlcontent = xmlcontent.replace(/</g, "zxc").replace(/>/g, "cxz");

            if (filter.trim().endsWith("and")) {
                filter = filter.substring(0, filter.length - 5);
                filtercolname = filtercolname.substring(0, filtercolname.length - 5);
            }
            if (filter.trim().endsWith("or")) { //suse
                filter = filter.substring(0, filter.length - 4);
                filtercolname = filtercolname.substring(0, filtercolname.length - 4);
            }

            if (filter.indexOf("rm_rentals.acctno='true'") > -1) {
                filter = filter.substring(0, filter.length - 25);
                if (filter.trim().endsWith("and"))
                    filter = filter.substring(0, filter.length - 4);
            }
            if (filter.indexOf("rm_rentals.acctno='false'") > -1) {
                filter = filter.substring(0, filter.Length - 25);
                filter += "ISNULL(acctno,'')<>''";
            }

            if (filter.indexOf("rm_rentals.acctno='true'") > -1) {
                filter = filter.substring(0, filter.length - 25);
                if (filter.trim().endsWith("and"))
                    filter = filter.substring(0, filter.length - 4);
            }
            if (filter.indexOf("rm_rentals.acctno='false'") > -1) {
                filter = filter.substring(0, filter.Length - 25);
                filter += "ISNULL(acctno,'')<>''";
            }

            if (self.SQLGroupby() != null && self.SQLGroupby() != "") {
                filter += " group by " + self.SQLGroupby();
            }

            if (self.OPsecuritypoints().ReportOrderBy == "1") {
                i = filtercount + 1;
                var object1 = document.getElementById('id' + i);
                if (object1 != null) {
                    var val1 = object1.value;
                    if (val1 != null && val1 != "") {
                        var Operator1 = "order by";
                        filter += ' ' + Operator1 + ' ' + "" + val1;
                        sortbyparam = ' ' + Operator1 + ' ' + "" + val1;

                    }
                }
            }
            else if (self.SQLOrderby() != null && self.SQLOrderby() != "") {
                var index1 = filter.indexOf("Order By")
                if (index1 == -1) {
                    filter += " order by " + self.SQLOrderby();
                    sortbyparam = " order by " + self.SQLOrderby();
                }
            }
            return true;
        }



        function SetOperator(DefaultOperator) {
            switch (DefaultOperator) {
                case "=":
                    operatorvalue = "=";
                    break;
                case "!=":
                    operatorvalue = "!=";
                    break;
                case "In":
                    operatorvalue = "In ";
                    break;
                case "Not In":
                    operatorvalue = "Not In ";
                    break;
                case ">":
                    operatorvalue = ">";
                    break;
                case "<":
                    operatorvalue = "<";
                    break;
                case "Between":
                    operatorvalue = "Between ";
                    break;
                case "Like":
                    operatorvalue = "Like ";
                    break;
                case "Not Like":
                    operatorvalue = "Not Like ";
                    break;
            }
        }

        String.prototype.endsWith = function (s) {
            return this.length >= s.length && this.substr(this.length - s.length) == s;
        }

        self.SelectReport = function (item) {
            ReportviewCol = "";
            document.getElementById('drpdown').style.visibility = "hidden";
            //if (item.SecPointsNo != null && item.SecPointsNo != "") {
            //    $.ajax({
            //        url: "checkfavourite",
            //        type: "POST",
            //        data: { userModule: item.UserModule, SecurityID: item.SecurityID, Repname: item.FileName },
            //        success: function (response) {
            //            if (response.IsReportViewExist == false) {
            //                $("#report").hide();
            //            }
            //            else {
            //                $("#report").show();
            //            }
            //            if (response.Items.length > 0) {

            //                FillReportSubMenus("false");
            //            }
            //            else {
            //                FillReportSubMenus("true");

            //            }
            //        }
            //    });
            //}

            //if (item.SecPointsNo != null && item.SecPointsNo != "") {
            //    $("#saveParameters").show();
            //}

            self.SecPointsNo(item.SecPointsNo);
            self.SqlLWhere(item.SQLWhere);
            secno = item.SecPointsNo;
            self.UserModule = item.UserModule;
            self.secpointNO = item.SecPointsNo;
            Description = item.Description;
            self.SQLSelect(item.SQLSelect);
            self.SQLGroupby(item.SQLGroupby);
            self.SQLOrderby(item.SQLOrderBy);
            self.FileName(item.FileName);
            secpointNO = item.SecPointsNo;
            self.securityid(item.SecurityID);

            if (Description != "") {
                chkcombo = "parameter";
            }
            ReportSelectedall(item.SecPointsNo);
            self.Description(item.Description);
            self.OPsecuritypoints(item);
            document.getElementById('reportpage').src = "";
            document.getElementById('gridpage').src = "";
        };

        function ReportSelectedall(sec) {
            //if (IsIntelligentFilter == false) {
            //    $.ajax({
            //        url: "GetIntelligentFilter",
            //        type: "POST",
            //        data: { IsIntelligentFilter: IsIntelligentFilter },
            //        success: function (response) {
            //            IsIntelligentFilter = true;
            //            userfilter = response.ShowIntelligentFilter;
            //        }
            //    });
            //}

            $.ajax({
                url: "ReportSelectedall",
                type: "POST",
                data: { userModule: self.UserModule, description: Description },
                success: function (response) {
                    ReportcontrolElements = response.Items;
                    self.ReportSelectedall(response.Items);

                    // var meetcode = response.MeetCode;
                    // var stdate = response.StartDate;

                    $("#tabs").tabs("enable", 1);
                    $("#tabs").tabs("enable", 2);
                    var repobj = document.getElementById('Repli0');
                    //if (favouritesoption =="") {
                    //    repobj.innerHTML = "Show Intelligent Filter";
                    //}
                    $("#Repli0").hide();
                    showfilters = false;
                    singledateinput = false;
                    singletimeinput = false;

                    $('.filter').empty();
                    $('.intelfilter').empty();
                    if (self.OPsecuritypoints().SQLSelect != null || self.OPsecuritypoints().SQLSelect != "")
                        sqlselect = self.OPsecuritypoints().SQLSelect;
                    if (self.OPsecuritypoints().SQLWhere != null || self.OPsecuritypoints().SQLWhere != "")
                        sqlwherefromsecpoints = self.OPsecuritypoints().SQLWhere;
                    else
                        sqlwherefromsecpoints = "";

                    if (self.OPsecuritypoints().SQLWhere != "1" && (self.OPsecuritypoints().SQLSelect.toUpperCase().startsWith("STP") || sqlselect.trim().toUpperCase().startsWith("SELECT"))) {
                        if (userfilter == "True" && favouritesoption == "") {
                            $("#Repli0").show();
                            var repobj = document.getElementById('Repli0');
                            showfilters = true;
                            OpenScreen(repobj);
                        }
                        else {
                            $("#Repli0").show();
                            showfilters = false;
                        }
                    }

                    if (favouritesoption != "") {
                        $("#Repli0").show();
                    }

                    AdditionalSQL.length = 0;
                    Lookupfieldlist.length = 0;
                    fieldnamearray.length = 0;
                    Displaynamearray.length = 0;
                    multiselectval.length = 0;
                    multiselectlocationval.length = 0;
                    multiselectlocationtype.length = 0;
                    showfilt.length = 0;
                    itid = "";
                    clasid = "";
                    itemnofield = "";
                    valus = "";
                    valus2 = "";
                    chkfieldary.length = 0;
                    caseL = false;
                    itemclus = false;
                    for (var i = 0; i < response.Items.length; i++) {
                        var lcOperators = "";
                        if (response.Items[i].Type == "D2") {
                            singledateinput = true;
                        }
                        else {
                            singledateinput = false;
                        }

                        var LookupTable = "'" + response.Items[i].LookupTable + "'";
                        var LookupFieldToSearch = "'" + response.Items[i].LookupFieldToSearch + "'";
                        var LookupFieldToAssign = "'" + response.Items[i].LookupFieldToAssign + "'";
                        // var primarykeyfield = "'" + response.Items[i].primarykeyfield + "'";
                        showfilt.push(response.Items[i].Operator);
                        AdditionalSQL.push(response.Items[i].AdditionalSQLWhere);
                        Lookupfieldlist.push(response.Items[i].LookupFieldList);
                        fieldnamearray.push(response.Items[i].LookupFieldToAssign);
                        Displaynamearray.push(response.Items[i].Display_FName);
                        if (response.Items[i].Display_FName.toUpperCase() == "ITEM CODE")
                            itemcode = response.Items[i];
                        multiselectlocationval.push(response.Items[i].LookupTable);
                        multiselectlocationtype.push(response.Items[i].Type);
                        filtercount = response.Items.length;
                        DataTypeFile = response.Items[i];
                        var searchcase = response.Items[i].Type.toUpperCase();
                        if (searchcase == "D")
                            dat = true;
                        else
                            dat = false;
                        if (searchcase == "BIRTHDAY") {
                            singledateinput = true;
                            searchcase = "D2";
                        }

                        switch (searchcase) {
                            case "L":
                                var fildFName = response.Items[i].Field_Name;
                                var itemcode1 = [];
                                var itemcod = "";
                                itemcod = fildFName;
                                if (fildFName.indexOf(".") > -1) {
                                    itemcode1 = fildFName.split('.');
                                    itemcod = itemcode1[1].toString();
                                }
                                if (itemcod.toUpperCase() == "LOCATIONID" || itemcod.toUpperCase() == "FROM_LOCATION" || itemcod.toUpperCase() == "HOMELOCATION" || itemcod.toUpperCase() == "LOCATION" || itemcod.toUpperCase() == "LOC") {
                                    caseL = true;
                                }
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li><li title="!=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liNotequalto"' + i + ' >Not equal to</li></ul></div>';
                                $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);

                                if (response.Items[i].defaultvalue != null && response.Items[i].defaultvalue != "")
                                    $('.filter').append('<input id="id' + i + '" style="margin-left:5px;" tabindex="-1" type="text" value="' + response.Items[i].defaultvalue + '" data-bind="attr:{for:' + response.Items[i].Field_Name + '}" ondblclick="Lsearchdb(' + LookupTable + ',' + LookupFieldToSearch + ',' + LookupFieldToAssign + ',this,' + sec + ')" onblur="Lsearch(' + LookupTable + ',' + LookupFieldToSearch + ',' + LookupFieldToAssign + ',this,' + sec + ')"/><br>');
                                else {
                                    $('.filter').append('<input id="id' + i + '" style="margin-left:5px;" tabindex="-1" type="text" data-bind="attr:{for:' + response.Items[i].Field_Name + '}" ondblclick="Lsearchdb(' + LookupTable + ',' + LookupFieldToSearch + ',' + LookupFieldToAssign + ',this,' + sec + ')" onblur="Lsearch(' + LookupTable + ',' + LookupFieldToSearch + ',' + LookupFieldToAssign + ',this,' + sec + ')"/><br>');
                                    $('.filter').append('<input id="Hdntxtid' + i + '" style="margin-left:5px;width:30px;display:none" type="text"/>');
                                }



                                lcOperators = "Equal to:=,Not equal to:!=";
                                break;
                            case "C":
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="Like" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liIn"' + i + ' >In</li><li title="Not Like" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liNotIn"' + i + ' >Not In</li></ul></div>';
                                $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);
                                if (response.Items[i].Field_Name.toUpperCase() == "MTYPE")
                                    $('.filter').append('<input id="id' + i + '" style="margin-left:5px;width:120px" type="text" data-bind="attr:{for:' + response.Items[i].Field_Name + '}" /><br>');
                                //else if (response.Items[i].Field_Name.toUpperCase() == "MEETINGCODE")
                                // $('.filter').append('<input id="id' + i + '" style="margin-left:5px;" type="text" value="' + response.Items[i].defaultvalue + '" data-bind="attr:{for:' + response.Items[i].Field_Name + '}" /><br>');
                                // else
                                $('.filter').append('<input id="id' + i + '" style="margin-left:5px;" type="text" value="' + response.Items[i].defaultvalue + '" data-bind="attr:{for:' + response.Items[i].Field_Name + '}" /><br>');
                                lcOperators = "Like:Like,Not Like:Not Like";
                                break;
                            case "MULTILOC":
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="In" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liIn"' + i + ' >In</li><li title="Not In" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liNotIn"' + i + ' >Not In</li></ul></div>';
                                var idval = "id" + i;
                                multiselectval.push(idval);
                                multiselectlocationval[i] = "FN_Split";
                                $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:156px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);
                                $('.filter').append('<select  id="id' + i + '" style="margin-left:5px;" multiple="multiple" data-bind="multiselect: true"></select><br>');
                                lcOperators = "In:In,Not In:Not In";
                                var part = response.Items[i].AdditionalSQLWhere;
                                lookupfill('id', i, response.Items[i].LookupTable, part, response.Items[i].LookupFieldToSearch, response.Items[i].LookupFieldToAssign, response.Items[i]);
                                break;
                            case "D1":
                            case "D2":

                                // Fill the lookup  Datecalc

                                var dtstr;
                                $.ajax({
                                    url: "FillLookupValuesDateCalc",
                                    type: "POST",
                                    async: false,
                                    success: function (response) {
                                        dtstr = '<div onmouseleave=divdtchooseleave(this,' + i + '); id="divdtchoose' + i + '" style="display:none;"><ul class="thisdropdown-menu" id="uldtchoose' + i + '" style="cursor:pointer; display:none;">';
                                        for (var j = 0; j < response.Items.length; j++) {
                                            dtstr += '<li class="dtli" onclick="BinDateCalcVal(this,' + i + ')" id="' + response.Items[j].Descript + '"' + i + ' >' + response.Items[j].Descript + '</li>'
                                        }
                                        dtstr += '</ul></div>';
                                    }
                                });


                                var lblstr = '';
                                if (singledateinput == true) {
                                    lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                    lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li><li title=">" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liGreaterthan"' + i + ' >Greater than</li>';
                                    lblstr += '<li title="<" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liLessthan"' + i + ' >Less than</li><li title="Between" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liBetween"' + i + ' >Between</li></ul></div>';
                                    $('.filter').append('<label onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:130px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                    $('.filter').append(lblstr);
                                    $('.filter').append('<img src="../Images/DateCalc.png" onclick="CallDateCalc(this,' + i + ')" id="iddatecalc' + i + '" style="font-weight:bold;width:20px; display: inline-block; cursor:pointer;" />');
                                    $('.filter').append(dtstr);
                                    $('.filter').append('<input type="text" id="id' + i + '" style="margin-left:5px;width:90px" value="' + response.Items[i].defaultvalue + '"  /> <input type="text" id="idd' + i + '" style="margin-left:10px;width:94px" onchange="Datesearch(this)" /><br>');
                                    lcOperators = "Equal to:=,Greater than:>,Less than:<,Between:Between";
                                }
                                else {
                                    lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                    lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li><li title=">" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liGreaterthan"' + i + ' >Greater than</li>';
                                    lblstr += '<li title="<" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liLessthan"' + i + ' >Less than</li></ul></div>';
                                    $('.filter').append('<label onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:130px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                    $('.filter').append(lblstr);
                                    $('.filter').append('<img src="../Images/DateCalc.png" onclick="CallDateCalc(this,' + i + ')" id="iddatecalc' + i + '" style="font-weight:bold;width:20px; display: inline-block; cursor:pointer;" />');
                                    $('.filter').append(dtstr);

                                    if (response.Items[i].defaultvalue != null && response.Items[i].defaultvalue != "")
                                        $('.filter').append('<input type="text" id="id' + i + '" value="' + DateBind(response.Items[i].defaultvalue) + '" style="margin-left:5px;" /><br>');
                                    else
                                        $('.filter').append('<input type="text" id="id' + i + '" value="' + response.Items[i].defaultvalue + '" style="margin-left:5px;" /><br>');
                                    lcOperators = "Equal to:=,Greater than:>,Less than:<";
                                }
                                if (response.Items[i].Value1 == "TD" && response.Items[i].Value2 == "TD" && response.Items[i].Type == "D2") {
                                    $("#" + 'id' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker("setDate", new Date());
                                    $("#" + 'idd' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker("setDate", new Date());
                                }
                                else if (response.Items[i].Value1 != null && response.Items[i].Value1 != "") {
                                    $("#" + 'id' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker("setDate", new Date());
                                    if (singledateinput == true)
                                        $("#" + 'idd' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker();
                                }
                                else if (response.Items[i].Value2 != null && response.Items[i].Value2 != "") {
                                    $("#" + 'id' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker();
                                    if (singledateinput == true)
                                        $("#" + 'idd' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker("setDate", new Date());
                                }
                                else {
                                    $("#" + 'id' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker();
                                    if (singledateinput == true)
                                        $("#" + 'idd' + i).datepicker({ changeMonth: true, changeYear: true }).datepicker();
                                }

                                break;
                            case "N1":
                                Cdate = new Date();
                                Cm = Cdate.getMonth() + 1;
                                Cy = Cdate.getFullYear();

                                if (Cm == 1) {
                                    Cy = Cy - 1;
                                    CyCM = Cy + "12";
                                }
                                else {
                                    if (Cm <= 9)
                                        CyCM = Cy + '0' + Cm - 1;
                                    else
                                        CyCM = Cy + '' + Cm - 1;
                                }

                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li><li title=">" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liGreaterthan"' + i + ' >Greater than</li>';
                                lblstr += '<li title="<" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liLessthan"' + i + ' >Less than</li></ul></div>';
                                $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);
                                if (response.Items[i].Field_Name.toUpperCase() == "CYM")
                                    $('.filter').append('<input id="id' + i + '" style="margin-left:5px;width:90px" value="' + CyCM + '" type="number"/><br>');
                                else
                                    $('.filter').append('<input id="id' + i + '" style="margin-left:5px;width:90px" value="' + response.Items[i].defaultvalue + '"  type="number"/><br>'); //suse
                                lcOperators = "Equal to:=,Greater than:>,Less than:<";
                                break;
                            case "N2":
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="Between" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liBetween"' + i + ' >Between</li></ul></div>';
                                $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);
                                $('.filter').append('<input id="id' + i + '" style="margin-left:5px;width:90px" type="number"/><input id="idN' + i + '" style="margin-left:13px;width:94px" onblur="Nsearch(this)" type="number"/><br>');
                                lcOperators = "Between:Between";
                                break;
                            case "B":
                                var idval = "id" + i;
                                chkfieldary.push(response.Items[i].Field_Name.toUpperCase());
                                var Display_FName = "'" + response.Items[i].Field_Name + "'";
                                var fildFName = response.Items[i].Field_Name;
                                var itemcode1 = [];
                                var itemcod = "";
                                itemcod = fildFName;
                                if (fildFName.indexOf(".") > -1) {
                                    itemcode1 = fildFName.split('.');
                                    itemcod = itemcode1[1].toString();
                                }
                                if ((itemcod.toUpperCase() == "CLASS" || itemcod.toUpperCase() == "ITEM_CLASS") && response.Items[i].LookupTable.toUpperCase() == "IC_ITEMCLASS" && response.Items[i].Display_FName.toUpperCase() != "PRICING ITEM CLASS") {
                                    clasid = idval;
                                    itemclus = true;
                                }
                                if (itemcod.toUpperCase() == "RESOURCE") {
                                    clasid = idval;
                                    itemclus = true;
                                }
                                if (itemcod.toUpperCase() == "ITEMNO" && (response.Items[i].LookupTable.toUpperCase() == "IC_ITEM" || response.Items[i].LookupTable.toUpperCase() == "IC_ITEM")) {
                                    itid = idval;
                                    itemnofield = itemcod.toUpperCase();
                                }

                                if (itemcod.toUpperCase() == "MEMCODE" || itemcod.toUpperCase() == "MCODE" || itemcod.toUpperCase() == "MEMVALUE" || retFNWithoutAlias(itemcod).toUpperCase() == "ENTRY" || retFNWithoutAlias(itemcod).toUpperCase() == "DESCRIPT") {
                                    itid = idval;
                                }

                                multiselectval.push(idval);
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="In" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liIn"' + i + ' >In</li><li title="Not In" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liNotIn"' + i + ' >Not In</li></ul></div>';
                                if (response.Items[i].LookupTable.toUpperCase() == "OP_LOOKUP") {
                                    $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:156px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                    $('.filter').append(lblstr);
                                    $('.filter').append('<select  id="id' + i + '" multiple="multiple" class="multi" onchange="FillcatCombo(' + Display_FName + ',' + LookupFieldToSearch + ',' + LookupFieldToAssign + ',this,' + sec + ')"  style="margin-left:5px;" ></select><br>');
                                    lcOperators = "In:In,Not In:Not In";
                                    var part = response.Items[i].AdditionalSQLWhere.split("'");
                                    id = part[1];
                                    var idval = "id" + i;
                                    lookupfill('id', i, response.Items[i].LookupTable, '', '', '', response.Items[i]);

                                    break;
                                }
                                else {
                                    $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:156px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                    $('.filter').append(lblstr);
                                    $('.filter').append('<select  id="id' + i + '" multiple="multiple" onchange="FillclassCombo(' + Display_FName + ',' + LookupFieldToSearch + ',' + LookupFieldToAssign + ',this,' + sec + ')"   style="margin-left:5px;" ></select><br>');
                                    lcOperators = "In:In,Not In:Not In";
                                    var part = response.Items[i].AdditionalSQLWhere;
                                    if (i == 0)
                                        lookupfill('id', i, response.Items[i].LookupTable, part, response.Items[i].LookupFieldToSearch, response.Items[i].LookupFieldToAssign, response.Items[i]);
                                    if (i > 0 && response.Items[i - 1].Display_FName.toUpperCase() != "RESOURCE TYPE" && response.Items[i - 1].AdditionalSQLWhere != "lookupid ='RTYPE'")
                                        lookupfill('id', i, response.Items[i].LookupTable, part, response.Items[i].LookupFieldToSearch, response.Items[i].LookupFieldToAssign, response.Items[i]);
                                    break;
                                }
                            case "CHECK":
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li></ul></div>';
                                $('.filter').append('<label id="lbldisp' + i + '" onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);
                                $('.filter').append('<input id="chkid' + i + '"  style="margin-left:100px;  display: inline-block;" type="checkbox" /><label for="chkid' + i + '" && Checkbox[i].checked; style="display: inline-block;">Check</label><br/>');
                                var idval = "chkid" + i;
                                document.getElementById(idval).checked = true;
                                lcOperators = "Equal to:=";
                                break;
                            case "T":
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li><li title=">" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liGreaterthan"' + i + ' >Greater than</li>';
                                lblstr += '<li title="<" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liLessthan"' + i + ' >Less than</li></ul></div>';
                                if (singletimeinput == true) {
                                    $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                    $('.filter').append(lblstr);
                                    $('.filter').append('<input type="text" id="id' + i + '" style="margin-left:5px;" /> <input type="text" id="idd' + i + '" style="margin-left:10px;" /><br>');
                                }
                                else {
                                    $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                    $('.filter').append(lblstr);
                                    $('.filter').append('<input type="text" id="id' + i + '" style="margin-left:5px;" /><br>');
                                }
                                lcOperators = "Equal to:=,Greater than:>,Less than:<";
                                if (response.Items[i].Value1 != null && response.Items[i].Value1 != "") {
                                    $("#" + 'id' + i).timepicker().timepicker("setDate", new Date());
                                    if (singletimeinput == true)
                                        $("#" + 'idd' + i).timepicker().timepicker();
                                }
                                else if (response.Items[i].Value2 != null && response.Items[i].Value2 != "") {
                                    $("#" + 'id' + i).timepicker().timepicker();
                                    if (singletimeinput == true)
                                        $("#" + 'idd' + i).timepicker().timepicker("setDate", new Date());
                                }
                                else {
                                    $("#" + 'id' + i).timepicker().timepicker();
                                    if (singletimeinput == true)
                                        $("#" + 'idd' + i).timepicker().timepicker();
                                }
                                break;
                            case "S":
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li><li title="!=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liNotequalto"' + i + ' >Not equal to</li></ul></div>';
                                $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);
                                $('.filter').append('<input id="id' + i + '" style="margin-left:5px;" type="text" data-bind="attr:{for:' + response.Items[i].Field_Name + '}" /><br>');
                                lcOperators = "Equal to:=,Not equal to:!=";
                                break;
                            case "SINGLE":
                            case "SINGLELOC":
                            case "LL":
                                var lblstr = '<div onmouseleave=divlblchooseleave(this,' + i + '); id="divlblchoose' + i + '" style="display:none;"><ul class="lbldropdown-menu" id="ullblchoose' + i + '" style="cursor:pointer; display:none;">';
                                lblstr += '<li title="=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liEqualto"' + i + ' >Equal to</li><li title="!=" onclick="BindFilterVal(this,' + i + ')" class="dtli" id="liNotequalto"' + i + ' >Not equal to</li></ul></div>';
                                var idval = "id" + i;
                                $('.filter').append('<label id="lbldisp' + i + '" onclick="CallIntelligent(this,' + i + ')" id="lbldisp' + i + '" onmouseleave=lbldispleave(this,' + i + '); onmouseenter=lbldispenter(this,' + i + '); style="margin-left:50px; width:150px; display: inline-block;">' + response.Items[i].Display_FName + '</label>');
                                $('.filter').append(lblstr);
                                $('.filter').append('<select  id="id' + i + '" style="margin-left:5px;padding: 0px 2px;"></select><br>');//suse
                                lcOperators = "Equal to:=,Not equal to:!=";
                                if (response.Items[i].Type == "SINGLE" && (response.Items[i].LookupTable == null || response.Items[i].LookupTable == "") && (response.Items[i].LookupFieldList != null && response.Items[i].LookupFieldList != "")) {
                                    $.ajax({
                                        url: "FillLookupValuesCombo",
                                        type: "POST",
                                        data: { lkupValues: response.Items[i].LookupFieldList },
                                        async: false,
                                        success: function (response) {
                                            var sel = document.getElementById(idval);
                                            for (var j = 0; j < response.Items.length; j++) {
                                                sel.options[sel.options.length] = new Option(response.Items[j]["Descript"], response.Items[j]["entry"]);
                                            }
                                        }
                                    });
                                }
                                else {
                                    //fieldname is active and lookuptable null
                                    if ((response.Items[i].LookupTable == null || response.Items[i].LookupTable == "") && response.Items[i].Field_Name == "active" && response.Items[i].Display_FName == "Status") {
                                        var LookupValuesArr = response.Items[i].LookupFieldList.split(',');
                                        for (var l = 0; l < LookupValuesArr.length; l++) {
                                            var arr = [];
                                            arr = LookupValuesArr[l].split(':');
                                            var sel = document.getElementById(idval);
                                            sel.options[sel.options.length] = new Option(arr[0].toString().trim(), arr[1].toString().trim());
                                        }
                                    }
                                    else if ((response.Items[i].LookupTable == null || response.Items[i].LookupTable == "") && response.Items[i].Field_Name == "days" && response.Items[i].Display_FName == "Days") {
                                        var LookupValuesArr = response.Items[i].LookupFieldList.split(',');
                                        for (var l = 0; l < LookupValuesArr.length; l++) {
                                            var arr = [];
                                            arr = LookupValuesArr[l].split(':');
                                            var sel = document.getElementById(idval);
                                            sel.options[sel.options.length] = new Option(arr[0].toString().trim(), arr[1].toString().trim());
                                        }
                                    }
                                    else {
                                        lookupfill('id', i, response.Items[i].LookupTable, id, response.Items[i].LookupFieldToSearch, response.Items[i].LookupFIeldToDisplay, response.Items[i]);
                                    }
                                }
                                //break;
                                if (response.Items[i].defaultvalue != null && response.Items[i].defaultvalue != "") //suse
                                    $("#id" + i).val(response.Items[i].defaultvalue);
                        }

                        if (searchcase != "CHECK") {
                            var myInput = document.getElementById('id' + i);
                            myInput.setAttribute('fieldname', response.Items[i].Field_Name);
                            myInput.setAttribute('Displayname', response.Items[i].Display_FName);
                            myInput.setAttribute('sqltype', response.Items[i].Type);
                            myInput.setAttribute('Requreid', response.Items[i].Required);
                        }
                        else {
                            var myInput = document.getElementById('chkid' + i);
                            myInput.setAttribute('fieldname', response.Items[i].Field_Name);
                            myInput.setAttribute('Displayname', response.Items[i].Display_FName);
                            myInput.setAttribute('sqltype', response.Items[i].Type);
                            myInput.setAttribute('Requreid', response.Items[i].Required);
                        }

                        if (searchcase != "CHECK") {

                            var lblfilter = document.getElementById('lbldisp' + i);
                            lblfilter.setAttribute('lblfilterval', response.Items[i].Operator);
                            SetFilterObjectText(i, response.Items[i].Operator);

                            if (searchcase == "MULTILOC" || searchcase == "D1" || searchcase == "D2" || searchcase == "B") {
                                showfilt[i] = response.Items[i].Operator;
                            }


                        }
                    }
                    if (self.OPsecuritypoints().ReportOrderBy == "1") {
                        i = response.Items.length + 1;
                        var disPlayName = "SORT BY";
                        $('.filter').append('<label style="margin-left:50px; width:154px; display: inline-block;">' + disPlayName + '</label><select  id="id' + i + '"></select><br>'); //style="margin-left:103px;"
                        lookupfill('id', i, "SORT_BY", '', '', '', '');
                        var myInput = document.getElementById('id' + i);
                        myInput.setAttribute('sqltype', "SRT");
                    }
                    if (multiselectval.length != 0) {
                        for (var q = 0; q < multiselectval.length; q++) {
                            var mval = multiselectval[q];
                            var resid = mval.substring(mval.length - 2);
                            if (resid.indexOf("d") > -1)
                                resid = mval.substring(mval.length - 1);
                            $('#id' + resid).multiselect();
                        }

                        if (multiselectlocationval.length != 0) {
                            for (var y = 0; y < multiselectlocationval.length; y++) {
                                var locval = multiselectlocationval[y];
                                if (locval != null) {
                                    if ((locval.toUpperCase() == "FN_SPLIT") && (multiselectlocationtype[y].toUpperCase() == "B" || multiselectlocationtype[y].toUpperCase() == "MULTILOC")) {
                                        var valArr = [currlocation];
                                        var z = 0, size = valArr.length;
                                        for (z; z < size; z++) {
                                            $("#id" + y).multiselect().find(":checkbox[value='" + valArr[z] + "']").attr("checked", "checked");
                                            $("#id" + y + " option[value='" + valArr[z] + "']").attr("selected", 1);
                                            $("#id" + y).multiselect("refresh");
                                        }
                                    }
                                }
                            }
                        }
                    }
                    IntelligenceFilter();
                    if (document.getElementById('chkviewallcol') != null && document.getElementById('chkviewallcol').checked == true) {
                        viewallcolumns();
                    }
                    if (sec != undefined && sec != null && sec != "") {
                        RetriveReportParams();
                    }
                }
            });
        }

        function FillIntelligentFilters(elementid, i, operators) {
            var select = document.getElementById(elementid + i);
            if (operators != null && operators != "") {
                var splitoperators = operators.split(',');
                for (var i = 0; i < splitoperators.length; i++) {
                    var splitdescription = splitoperators[i].split(':');
                    select.options[select.options.length] = new Option(splitdescription[0], splitdescription[1]);
                }
            }
        }

        function lookupfill(elementid, i, Lookuptable, part, desc, fieldname, Represult) {
            var select = document.getElementById(elementid + i);
            var fields1 = "";
            var fields2 = "";
            var sqwher = "";
            if (Represult != "") {
                fields1 = Represult.LookupFIeldToDisplay;
                fields2 = Represult.LookupFieldToAssign;
                if (Lookuptable != null && (Lookuptable.toUpperCase() == "IC_ITEM" || Lookuptable.toUpperCase() == "IC_ITEMCLASS" || Lookuptable.toUpperCase() == "IC_ITEM" || Lookuptable.toUpperCase() == "VW_RP_MM_MEMVALUE") && Represult.Display_FName.toUpperCase() != "PRICING ITEM CLASS") {
                    if (Represult.AdditionalSQLWhere != null && Represult.AdditionalSQLWhere != "") {
                        sqwher = " where " + Represult.AdditionalSQLWhere;
                        if (!sqwher.indexOf("Order By"))
                            sqwher += " order by " + Represult.LookupFIeldToDisplay;
                    }
                    else
                        sqwher = " where 1=0";
                }
                else {
                    if (Represult.AdditionalSQLWhere != null && Represult.AdditionalSQLWhere != "") {
                        if (Represult.AdditionalSQLWhere == " memcode = 1 order by description") {
                            sqwher = " where " + Represult.AdditionalSQLWhere;
                        }
                        else {
                            sqwher = " where " + Represult.AdditionalSQLWhere + " order by " + Represult.LookupFIeldToDisplay;
                        }
                    }
                    else
                        sqwher = " order by " + Represult.LookupTable + "." + Represult.LookupFIeldToDisplay;
                }
            }

            if (Lookuptable != null && Lookuptable.toUpperCase() == "OP_LOOKUP") {
                if (Represult != "") {
                    $.ajax({
                        url: "ReportLookupList",
                        data: { lookupid: id, field1: fields1, field2: fields2, where: sqwher },
                        type: "POST",
                        async: false,
                        success: function (response) {
                            for (var j = 0; j < response.Items.length; j++) {
                                select.options[select.options.length] = new Option(response.Items[j][Represult.LookupFIeldToDisplay], response.Items[j][Represult.LookupFieldToAssign]);
                            }
                        }
                    });
                }

            }
            else if (Lookuptable != null && Lookuptable.toUpperCase() == "MFG") {
                if (Represult != "") {
                    $.ajax({
                        url: "ReportMfgList",
                        data: { field1: fields1, field2: fields2, where: sqwher },
                        type: "POST",
                        async: false,
                        success: function (response) {
                            for (var j = 0; j < response.Items.length; j++) {
                                select.options[select.options.length] = new Option(response.Items[j][Represult.LookupFIeldToDisplay], response.Items[j][Represult.LookupFieldToAssign]);
                            }
                        }
                    });
                }

            }
            else if (Lookuptable != null && Lookuptable.toUpperCase() == "SORT_BY") {
                $.ajax({
                    url: "FillSortOrder",
                    data: { userModule: self.UserModule, description: Description },
                    type: "POST",
                    async: false,
                    success: function (response) {
                        for (var j = 0; j < response.Items.length; j++) {
                            select.options[select.options.length] = new Option(response.Items[j].display_fname, response.Items[j].field_name);
                        }
                    }
                });
            }
            else if ((Lookuptable != null && Lookuptable.toUpperCase() == "FN_SPLIT") || Represult.Type.toUpperCase() == "SINGLELOC" || Represult.Type.toUpperCase() == "MULTILOC") {
                $.ajax({
                    url: "FillLOCT",
                    data: { Fielddisplay: 'LocationID', Type: Represult.Type },
                    type: "POST",
                    async: false,
                    success: function (response) {
                        for (var j = 0; j < response.Items.length; j++) {
                            select.options[select.options.length] = new Option(response.Items[j]['LocationID'], response.Items[j]['LocationID']);
                        }
                        document.getElementById(elementid + i).value = currlocation;
                    }
                });
            }
            else if (Lookuptable != null && Represult.Type == "SINGLE" && Lookuptable.toUpperCase() != "OP_LOOKUP") {
                if (Represult != "") {
                    $.ajax({
                        url: "ReportLookuptableList",
                        data: { Lookuptable: Lookuptable, field1: fields1, field2: fields2, where: sqwher },
                        type: "POST",
                        async: false,
                        success: function (response) {
                            for (var j = 0; j < response.Items.length; j++) {
                                select.options[select.options.length] = new Option(response.Items[j][Represult.LookupFIeldToDisplay], response.Items[j][Represult.LookupFieldToAssign]);
                            }
                        }
                    });
                }

            }
            //else if (Lookuptable != null && Lookuptable.toUpperCase() == "AR_PAYMENTTYPES") {
            //    $.ajax({
            //        url: "Fillarpayment",
            //        data: { FieldToDisplay: Represult.LookupFIeldToDisplay, FieldToassign: Represult.LookupFieldToAssign },
            //        type: "POST",
            //        async: false,
            //        success: function (response) {
            //            for (var j = 0; j < response.Items.length; j++) {
            //                select.options[select.options.length] = new Option(response.Items[j][Represult.LookupFIeldToDisplay], response.Items[j][Represult.LookupFieldToAssign]);
            //            }
            //        }
            //    });
            //}
            @*else {
                var tmpLookuptable = Lookuptable;
                if (Lookuptable != null && Lookuptable.toUpperCase() == "FN_SPLIT")
                    tmpLookuptable = '';
                $.ajax({
                    url: "@Url.Content("GetListTable")",
                    data: { lookupid: id, Ltable: tmpLookuptable, lwhere: sqwher, searchfield: fields1, assignfield: fields2 },
                    type: "POST",
                    async: false,
                    success: function (response) {
                        for (var j = 0; j < response.Items.length; j++) {
                            select.options[select.options.length] = new Option(response.Items[j][Represult.LookupFIeldToDisplay], response.Items[j][Represult.LookupFieldToAssign]);
                        }

                        if (Represult != "") {

                            for (var r = 0 ; r < select.options.length ; r++) {
                                if (select.options[r].value.toUpperCase() == currlocation.toUpperCase()) {
                                    select.selectedIndex = r;
                                }
                            }
                        }
                    }
                });
            }*@
        }
    }

    function retFNWithoutAlias(fn) {
        var SplitAliceFromFNameArray = fn.split('.');
        var SplitFieldName = "";
        if (SplitAliceFromFNameArray.length > 1) {
            SplitFieldName = SplitAliceFromFNameArray[1];
        }
        else {
            SplitFieldName = SplitAliceFromFNameArray[0];
        }
        return SplitFieldName;
    }

    function AdminPasswordValidate(e) {
        var key = e.keyCode || e.which;
        if (key == 13) {
            RepList.txtAdmin_Leave();
        }
    }


</script>

<div id="tabs" class="tabbedwidget tab-primary">
    <div style="height:100%;">
        <nav>
            <ul>
                <li class="expclass" style="width:30px; border-bottom:none !important;display:none;">
                    @*<div class="option">
                            <img style="width:21px; height:21px;" class="optionbtn" src="~/images/wheel.png" />
                            <ul class="option-content" data-bind="foreach: $root.ReportOptlist">
                                <!-- ko if: Value != 'Export' -->
                                <li style="cursor: pointer;"><a onclick="OpenScreen(this);" data-bind="attr:{id:'Repli'+$index()},text: Value"></a></li>
                                <!--/ko-->
                                <!-- ko if: Value == 'Export' -->
                                <li class="sub-menu" style="cursor: pointer;">
                                    <a data-bind="attr:{id:'Repli'+$index()},text: Value"></a>
                                    <ul data-bind="foreach: $root.ComboRptlist">
                                        <li style="cursor: pointer;" data-bind="click: $root.optionselect"><a data-bind="text: Value"></a></li>
                                    </ul>
                                </li>
                                <!--/ko-->
                            </ul>
                        </div>*@
                </li>

                <li><a href="#tab1" id="FilterDiv">Filter</a></li>
                <li><a href="#tab2" id="grid">Grid View</a></li>
                <li><a href="#tab3" id="report">Report View</a></li>
                <li class="span4" style="visibility:collapse;border-bottom:none !important;"><a href="#tab6" id="drpdown"></a></li>
                <li style="border-bottom:none !important; display:flex; "> <label id="descriptionlbl" data-bind="text : Description" style="font-weight: bold; font-size: medium; margin-left:-200px;"></label><select style="height:30px; border:none; vertical-align:bottom; font-weight: 800; font-size: 13px; margin-left:-200px;" id="cmbSaveParameters" data-bind="options:ReportParamNameList,optionsText:'ReportName',optionsValue:'ReportName',value:ReportParamNameVal"></select></li>
                @*<li style="border-bottom:none !important; "><img style="width:20px; height:20px; vertical-align:-webkit-baseline-middle; "src="@Url.Content("~/images/Save.png")" title="Save Parameters" id="saveParameters" data-bind="event: {click:$root.ViewReportParam}" /></li>*@
                <li style="border-bottom: none !important;">
                    <select id="cmbGridExport" title="Export Format" style="cursor: pointer; width: 125px;">
                        <option value="">--Export Format--</option>
                        <option value="XLS">XLS</option>
                        <option value="XLSX">XLSX</option>
                        <option value="CSV">CSV</option>
                        <option value="TXT">TEXT</option>
                        @*<option value="PDF">PDF</option>*@
                        <option value="HTML">HTML</option>
                        @*<option value="IMAGE">IMAGE</option>
                            <option value="MHT">MHT</option>
                            <option value="RTF">RTF</option>*@
                    </select>


                </li>
                <li style="float:right">
                    <div class="intelfilter" style="margin-top:5px"></div>
                </li>
            </ul>
        </nav>
        <div id="tab1">
            <table align="center" style="width:100%; height:100%;">
                <tr>
                    <td align="left" style="width: 20%;">@*<h3>Select Report</h3>*@</td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        <div id="divSlide" class="slide-out-div close">
                            <div class="handle" style="width: 15px; height: 252px; display: block; outline: none; position: absolute; top: 0px; right: -18px; background-repeat: no-repeat; ">
                                <div style="height:35%">
                                </div>
                                <div style="height:25%;width:25px">
                                    <img src="../images/arrow.png" style="height: 25px;width: 25px;">
                                </div>
                            </div>
                            <div id="Calpanal" style="float: left; width: 260px; background: white; height:250px;  border-color: black; border: 1px solid black;display:block; overflow-x:hidden; overflow-y:auto; " ishide="true">
                                @*<div class="">
                                        <ul>
                                            <li>
                                                <img class="tog" src="../images/right%20arrow.png" data-bind="click: $root.favouritelist" style="width: 25px; margin-bottom:-8px;" />
                                                <label for="tog" data-bind="click: $root.favouritelist" style="width: 75px; color: #0052F5">Favorites</label>
                                                <table class="nostyletable">
                                                    <tr>
                                                        <td data-bind="foreach : $root.Favourlist">
                                                            <ul style="margin-left:35px;">
                                                                <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;"></a></li>
                                                            </ul>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </li>
                                        </ul>
                                    </div>*@

                                <div data-bind="foreach : Reports" style="overflow: auto; height: auto; width: 350px; ">
                                    <ul>
                                        <li>
                                            <img src="../images/right%20arrow.png" data-bind="click: $root.selectThing,attr:{id:'tog'+$index()}" style="width: 25px; margin-bottom: -8px;" />
                                            <label data-bind="click: $root.selectThing,attr:{id:'tog'+$index()},text : Description" style="color: #0052F5"></label>
                                            <input type="text" style="visibility:hidden;width:1px;" data-bind="attr:{id: 'index'+$index(), value: SecPointsNo}" />
                                            <table data-bind="attr:{id: 'table'+$index()}" class="nostyletable">
                                                <tr>
                                                    <td data-bind="foreach : $parent.Reportslist">
                                                        <ul style="margin-left:35px;width:100%!important">
                                                            <!-- ko if: Submodule !== "RP_BPY" && Submodule !== "RP_BM" && Submodule !== "RP_BFY" && Submodule !== "RP_BB" && Submodule !== "RP_OTH" && Submodule !== "RP_PR" && Submodule !== "RP_DA" && Submodule !== "RP_MA" && Submodule !== "RP_PM" && Submodule !== "RP_RA"&& Submodule !== "RP_OT" && Submodule !== "RP_Cat" && Submodule !== "RP_Corp" && Submodule !== "RP_DM" && Submodule !== "RP_DR" && Submodule !== "RP_PN" && Submodule !== "RP_Ref"&& Submodule !== "RP_OTHER"-->
                                                            <!-- ko if: Description == "-" -->
                                                            <li style="list-style:none;">-----------------------------------------------------</li>
                                                            <!-- /ko -->
                                                            <!-- ko if: Description !== "-" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%;"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                        </ul>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td data-bind="foreach : $parent.Reportslist">
                                                        <ul style="margin-left:35px;width:100%!important">
                                                            <!-- ko if: Submodule == "RP_BPY" -->
                                                            <!-- ko if: Submodule == "RP_BPY" && Description == "Benefits - Program Year" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_BPY" && Description == "Benefits - Program Year" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_BM" -->
                                                            <!-- ko if: Submodule == "RP_BM" && Description == "Benefit Management" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_BM" && Description == "Benefit Management" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_BFY" -->
                                                            <!-- ko if: Submodule == "RP_BFY" && Description == "Benefits - Fiscal Year" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_BFY" && Description == "Benefits - Fiscal Year" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_BB" -->
                                                            <!-- ko if: Submodule == "RP_BB" && Description == "Benefit Batch" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_BB" && Description == "Benefit Batch" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_OTH" -->
                                                            <!-- ko if: Submodule == "RP_OTH" && Description == "Other" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_OTH" && Description == "Other" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_PR" -->
                                                            <!-- ko if: Submodule == "RP_PR" && Description == "Programs" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_PR" && Description == "Programs" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_DA" -->
                                                            <!-- ko if: Submodule == "RP_DA" && Description == "Distributor Admin" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_DA" && Description == "Distributor Admin" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_MA" -->
                                                            <!-- ko if: Submodule == "RP_MA" && Description == "Manufacturer Admin" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_MA" && Description == "Manufacturer Admin" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_PM" -->
                                                            <!-- ko if: Submodule == "RP_PM" && Description == "Program Management" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_PM" && Description == "Program Management" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_RA" -->
                                                            <!-- ko if: Submodule == "RP_RA" && Description == "Retailer Admin" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_RA" && Description == "Retailer Admin" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_OT" -->
                                                            <!-- ko if: Submodule == "RP_OT" && Description == "Other" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_OT" && Description == "Other" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_Cat" -->
                                                            <!-- ko if: Submodule == "RP_Cat" && Description == "Categories" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_Cat" && Description == "Categories" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_Corp" -->
                                                            <!-- ko if: Submodule == "RP_Corp" && Description == "Corporate" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_Corp" && Description == "Corporate" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_DM" -->
                                                            <!-- ko if: Submodule == "RP_DM" && Description == "Director Management" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_DM" && Description == "Director Management" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_DR" -->
                                                            <!-- ko if: Submodule == "RP_DR" && Description == "Distributor Review" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_DR" && Description == "Distributor Review" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_PN" -->
                                                            <!-- ko if: Submodule == "RP_PN" && Description == "Prospects / New" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_PN" && Description == "Prospects / New" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_Ref" -->
                                                            <!-- ko if: Submodule == "RP_Ref" && Description == "Reference 3 Year Reports" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_Ref" && Description == "Reference 3 Year Reports" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                            <!-- ko if: Submodule == "RP_OTHER" -->
                                                            <!-- ko if: Submodule == "RP_OTHER" && Description == "Other" -->
                                                            <li style="color:black; font-size:12px;font-weight:bold;list-style:none;width:100%!important" data-bind="text: Description"></li>
                                                            <!-- /ko -->
                                                            <!-- ko ifnot: Submodule == "RP_OTHER" && Description == "Other" -->
                                                            <li><a data-bind="click : $root.SelectReport,text: Description" style="cursor:pointer;width:100%!important"></a></li>
                                                            <!-- /ko -->
                                                            <!-- /ko -->
                                                        </ul>
                                                    </td>
                                                </tr>
                                            </table>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </td>
                    <td valign="middle" style="align-content:center">
                        <table style="width:100%; margin-top:40px;">
                            <tr>
                                <td style="width:15%"></td>
                                <td style="width:70%">
                                    <div style="width: 100%;">
                                        <div id='contextMenuContainer' class="context" style="background-color: white; width: 220px; display: none; z-index: 999; border-radius: 5px; border: 1px solid black; position: absolute;"></div>
                                        <div id='selectcontextMenuContainer' class="context" style="background-color: white; width: 30px; display: none; z-index: 999; border-radius: 5px; border: 1px solid black; position: absolute;"></div>
                                        <div id="Calrightpanal" style="margin-left:2px;">
                                            <div id="Calrightpanel" class="filter">

                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td style="width:15%"></td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        </div>
        <div id="tab2" style="width:100%; height:90%;-webkit-overflow-scrolling: touch;">
            <iframe id="gridpage" style="width: 98%;height:800px;" scrolling="yes" frameborder="0"> </iframe>
        </div>
        <div id="tab3" style="width: 100%;-webkit-overflow-scrolling: touch; ">
            <iframe id="reportpage" style="width: 98%;" scrolling="yes" frameborder="0"> </iframe>
        </div>
        <div id="tab6">
            <div style="height: 800px;-webkit-overflow-scrolling: touch;">
                <iframe id="frmdrpdown" width="98%" height="100%" scrolling="yes" frameborder="0"></iframe>
            </div>
        </div>

        <input type="text" style="visibility:hidden" id="hidden" />
        <input type="hidden" id="id" />
        <input type="hidden" id="OnSearch" />
        <input type="hidden" id="table" />
        <img id='SearchSelected' title="Search" value="Search" hidden="hidden" />
    </div>
</div>

<div id="Mailmergedialog" title="Mail Merge" style="overflow:hidden; font-size: 16px;font-family:Calibri;font-weight:bold;">
    <div class="row-fluid">
        <div class="row-fluid">
            <p>
                <label class="span3">Merge Type</label>
                <select id="CmbMergtype" data-bind="options:cmbmergelist,optionsText:'descript',optionsValue:'entry',value:txtMergtype"></select>
                <button type="button" class="btn btn-primary btn-rounded" style="width:130px;height:25px;font-size:14px" id="btnchangfolder">Change Folder</button>
            </p>
        </div>
        <div class="row-fluid">
            <p>
                <label class="span3">Select Document</label>
                <select id="CmbSelectDocument" data-bind="options:FileNameList,optionsText:$data,optionsValue:$data,value:Filenametype"></select>
                <button type="button" class="btn btn-primary btn-rounded" style="width:130px;height:25px;font-size:14px;" id="btnMerge" data-bind="click: MergeClick">Merge</button>
            </p>
        </div>
        <a href="#" id="Clickkbtn" data-bind="event:{click:$root.ViewFile}"></a>
        <div class="row-fluid" id="MergeBodyDiv">
            <p>
                <label class="span3">Other</label>
                <textarea class="input-xxlarge" style="width:320px;height:70px" id="body" data-bind="value: MailMergeBody"></textarea>
            </p>
        </div>
        <div style="border: solid 2px #969EA7; padding-left: 5px; margin-left:-1px;" class="row-fluid">
            <div class="row-fluid" style="padding-left: 5px; margin-top: 10px">
                <p>
                    <label class="span3">
                        From Name
                    </label>
                    <input class="input-large" type="text" maxlength="15" id="FromName" data-bind="value: txtFromName" />
                </p>
            </div>
            <div class="row-fluid" style="padding-left: 5px;">
                <p>
                    <label class=" span3">
                        Mail From
                    </label>
                    <input id="MailFrom" type="text" class="input-large" data-bind="value: txtMailFrom, event: { blur: $root.MailFromCheck }" />
                </p>
            </div>
            <div class="row-fluid" style="padding-left: 5px;">
                <p>
                    <label class="span3">
                        E-Mail Subject
                    </label>
                    <input class="input-large" type="text" maxlength="32767" id="EMailSubject" data-bind="value: txtEMailSubject" />
                </p>
            </div>
            <div class="row-fluid" style="padding-left: 5px;">
                <p>
                    <label class="span3">
                        Attachment
                    </label>
                    <input class="input-large" type="text" style="display:none" disabled maxlength="32767" id="hdnAttachment" data-bind="value: hdntxtAttachment" />
                    <input class="input-large" type="text" disabled maxlength="32767" id="Attachment" data-bind="value: txtAttachment" />
                </p>
            </div>
            <div class="row-fluid" style="padding-left: 5px;">
                <div class="span7" align="left">
                    <input id="chksendcopy" type="checkbox" style="vertical-align: sub;" class="input-medium" />
                    <label for="chksendcopy">Send copy to sender?</label>
                </div>
                <div class="span5" align="right" style="padding-right:10px;">
                    <a href="#" id="Clearbtn" data-bind="event:{click:$root.ClearValue}">Clear</a>
                    <button type="button" class="btn btn-primary btn-rounded" style="width:100px;height:25px;font-size:14px" id="btnBrowse" data-bind="click: mailattachment">Browse</button>
                </div>
            </div>
            <div class="row-fluid" style="padding-left: 5px;">
                <div align="left">
                    <input id="ChkDupemail" type="checkbox" style="vertical-align: sub;" class="input-medium" />
                    <label for="ChkDupemail">Suppress duplicate emails?</label>
                </div>
            </div>
        </div>
        <div class="row-fluid" align="right">
            <button type="button" class="btn btn-primary btn-rounded" style="width: 120px; height: 25px;font-size:14px; margin-top:5px;" id="btnSendEmail" data-bind="click: Mergesendmail">Send Email</button>
        </div>
    </div>
    <div id="loadingMerge" class="loading" style="visibility:hidden">
        <img id="loading-image" class="loading-image" src="~/images/loaders/loader5.gif" alt="Loading..." />
    </div>
</div>

<form id="imgform" method="post" action="UploadFile" enctype="multipart/form-data">
    <input type="file" id="imgfile" style="visibility:hidden;" name="file" />
</form>


<div id="ReportDescriptiondialog" title="Report Description" style="overflow-x: hidden; height:416px;">
    <div class="row-fluid" style="">
        <div class="row-fluid">
            <p>
                <label class="span12" id="reportname" style="font-weight:bold;font-size:large; margin-left:25%"></label>
            </p>
        </div>
        <div class="span12">
            <textarea id="ReportsDescription" data-bind="value: test" tabindex="32" style="width: 500px; height: 300px;"></textarea>
        </div>
    </div>
    <div class="row-fluid" align="center">
        <button type="button" class="btn btn-primary btn-rounded" style="width: 100px; height: 30px; margin-top: 10px;" id="btnSavereport">Save</button>
    </div>
</div>

<div id="AdminPwdDialog" title="Admin Password">
    <div class="row-fluid">
        <div style="overflow: hidden;">
            <div class="row-fluid" style="margin-top:10px; margin-left:10px;">
                <div class="span10">
                    <label>
                        Please enter Admin Password
                    </label>
                    <input class="login-input" style="background-color: #C7F3AD;" tabindex="-1" type="password" name="Admin_Pass" id="Admin_Pass" maxlength="30" onkeypress="AdminPasswordValidate(event)" />
                    <label id="AdminMessage" style="font-family:Verdana; font-size:15px; font-style:normal; color:red"></label>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="Mailpreviewdialog" title="Mail preview">
    <div class="row-fluid" style="padding-top: 10px">
        <div class="row-fluid">
            <p>
                <label class="span3">From Name</label>
                <input class="input-xlarge" type="text" id="fromname" data-bind="value: txtfromname" />
            </p>
        </div>
        <div class="row-fluid">
            <p>
                <label class="span3">From Mail</label>
                <input class="input-xlarge" type="text" id="frommail" data-bind="value: txtfrommail" />
            </p>
        </div>
        <div class="row-fluid">
            <p>
                <label class="span3">Subject</label>
                <input class="input-xlarge" type="text" id="Subject" data-bind="value: txtsubject" />
            </p>
        </div>
        <div class="row-fluid">
            <p>
                <input type="checkbox" id="EmailsendMainmem" data-bind="checked: txtEmailsendMainmem" style="width: 15px;height:20px;vertical-align:sub;" />
                <label>Send Email for only for Main Members</label>
            </p>
        </div>
        <div class="row-fluid">
            <p>
                <input type="checkbox" id="EmailAllMem" data-bind="value: txtEmailAllMem" style="width: 15px;height:20px;vertical-align:sub;" />
                <label>Send Email for All Members</label>
            </p>
        </div>
        <div class="row-fluid">
            <p>
                <label>Body</label>
                <textarea class="input-xxlarge" style="width:320px;height:70px" id="body" data-bind="value: txtbody"></textarea>
            </p>
        </div>
        <div align="center" style="padding-top: 10px">
            <button type="button" id="" class="btn btn-primary btn-rounded" style="width: 100px; height: 30px;" data-bind="click:$root.txtbtnsend">Send</button>
            <button type="button" id="" class="btn btn-primary btn-rounded" style="width: 100px; height: 30px;" data-bind="click:$root.txtbtncancel">Cancel</button>
        </div>
    </div>
</div>

<div id="ReportParamDialog" class="grid-menu">
    <label style="margin-top:-18px;">Report Name</label><span class="close" style="margin-top:-18px; margin-right:-18px;" data-bind="click: $root.HideReportParam">×</span>
    <div class="row-fluid">

        <input id="txtReportParamName" type="text" maxlength="100" style="width:260px;" placeholder="Report Name" title="Report Name" />
        <img style="width:15px; height:15px;  padding-top:5px" src="@Url.Content("~/images/Save.png")" title="Save Parameters" id="btnSaveReportParam" class="tooltipsample" />
        <img style="width:15px; height:15px;  padding-top:5px" src="@Url.Content("~/images/error.png")" title="Clear Saved Parameters" id="imgclearparams" class="tooltipsample" />
        <fieldset class="scheduler-border" id="hideMemuserrights">
            <legend class="scheduler-border">Auto Report</legend>
            <div class="control-group">
                <div class="controls" style="margin-top:-12px;">
                    <input id="chkNone" type="radio" name="chkfreq" title="None" style="margin-top:0px;" checked="checked" /><label for="chkNone" style="margin-right:4px;">None</label>
                    <input id="chkDaily" type="radio" name="chkfreq" title="Daily" style="margin-top:0px;" /><label for="chkDaily" style="margin-right:4px;">Daily</label>
                    <input id="chkWeekly" type="radio" name="chkfreq" title="Weekly" style="margin-top:0px;" /><label for="chkWeekly" style="margin-right:4px;">Weekly</label>
                    <input id="chkMonthly" type="radio" name="chkfreq" title="Monthly" style="margin-top:0px;" /><label for="chkMonthly" name="chkfreq" style="margin-right:4px;">Monthly</label>
                    <input id="chkYearly" type="radio" name="chkfreq" title="Yearly" style="margin-top:0px;" /><label for="chkYearly">Yearly</label>
                </div>
                <div class="controls">
                    <textarea id="txtReportEmailTo" type="text" maxlength="1000" style="width:280px;margin-top:10px;" placeholder="Report EmailTo" title="Report EmailTo"></textarea>
                </div>
                <div class="controls" style="text-align:center;">
                    <label>(OR)</label>
                </div>
                <div class="controls">
                    <select id="cmbExportFormat" title="Export Format">
                        <option value="">--Export Format--</option>
                        <option value="XLS">XLS</option>
                        <option value="XLSX">XLSX</option>
                        <option value="CSV">CSV</option>
                        <option value="TEXT">TEXT</option>
                        <option value="PDF">PDF</option>
                        <option value="HTML">HTML</option>
                        <option value="IMAGE">IMAGE</option>
                        <option value="MHT">MHT</option>
                        <option value="RTF">RTF</option>
                    </select>
                </div>
                <div class="controls">
                    <select id="cmbExportType" title="Export Type">
                        <option value="">--Export Type--</option>
                        <option value="Folder">Folder</option>
                        <option value="FTP">FTP</option>
                        <option value="SFTP">SFTP</option>

                    </select>
                </div>
                <div class="controls">
                    <textarea id="txtExportDestination" type="text" maxlength="500" style="width:280px; margin-top:4px;" rows="3" placeholder="Export Destination" title="Export Destination"></textarea>
                </div>
                <div class="controls">
                    <input id="txtUserFileName" type="text" maxlength="200" style="width:280px; margin-top:4px;" placeholder="User File Name" title="User File Name" />
                </div>
            </div>
        </fieldset>

    </div>
</div>

<div id="sendtextdialog">
    <div class="row-fluid">
        <div class="span12" style="padding-left: 8px; margin-top: 0px">
            <label id="lblwithcarrer" style="font-weight:bold">

            </label>
        </div>
        <div class="span12">
            <label id="lblwithoutcarrer" style="font-weight:bold">

            </label>
        </div>
        <div class="span12">
            <label class="span4">
                Text Subject:
            </label>
            <input id="txtsmssubj" class="span7" type="text" style="width:65%" maxlength="30" />
        </div>
        <div class="span12">
            <label>
                Text Message:
            </label>
        </div>
        <div class="span10">
            <textarea id="textmessage" class="multiline" maxlength="160" style="width:115%; height:100px;resize:none;font-weight: bold;color: black;font-size:13px; background-color:white;"></textarea>
        </div>
        <div class="row-fluid span12" style="padding-left: 0px; margin-top: 15px">

            <div class="span4" style="display:none">
                <input id="txtcellphone" class="span12" type="text" maxlength="15" />
            </div>
            <div class="span4" style="display:none">
                <button id="btnSMSTest" class="span7 btn btn-primary btn-rounded" data-bind="click:$root.SendSMSText">Test</button>
            </div>

            <p>
                <button id="btnSendAllText" class="span4 btn btn-primary btn-rounded" data-bind="click:$root.SendSMSAllText" style="float:right;">Send Text</button>
            </p>
        </div>

    </div>
</div>

<div id="Createdatasetdialog" title="Custom DataSet">
    <div class="row-fluid" style="margin-top: 10px">

        <div class="row-fluid">

            <label class="span3">Confirmation:</label>

        </div>
        <div class="row-fluid">

            <label class="span3" style="width:300px;">Create Custom Dataset for:</label>

        </div>

        <div class="row-fluid">

            <input type="radio" id="radioMemb" name="radio" class="btn btn-primary btn-rounded" style="width: 60px;" value="Member" checked>Member (or)</>
            <input type="radio" id="radioItem" name="radio" class="btn btn-primary btn-rounded" style="width: 60px;" value="Item">Item</>
            <input type="button" id="OKbutton" value="OK" class="btn btn-primary btn-rounded" style="width: 60px;" />

        </div>

    </div>
</div>

<div id="Createcustomdatasetdialog" title="Create Custom Dataset">
    <div class="row-fluid" style="margin-top: 10px">

        <div class="row-fluid">
            <label class="span3" style="width:100px;">Dataset Name</label>
            <input type="text" style="width:200px;" id="Datasetnametxtbox" maxlength="50" />
        </div>

        <div class="row-fluid" align="center">
            <input type="checkbox" style="width: 30px;" checked id="chkPublic"><label for="chkPublic" style="vertical-align:sub;">Public</label>
            <input type="checkbox" id="chkActive" style="width: 30px;"><label for="chkActive" style="vertical-align:sub;">Make Active</label>
        </div>

        <div class="row-fluid" align="center" style="margin-top:12px;">
            <input type="button" id="btnCreate" class="btn btn-primary btn-rounded" style="width: 60px;" value="Create" />
        </div>



    </div>
</div>

<div id="CreateAptusMailDialog" title="AptusMail">
    <div class="row-fluid" style="margin-top: 10px">



        <div class="row-fluid">
            <label class="span3" style="width:150px;">Email List Count: </label>
            <label id="lblaptusmailcnt" style="width:100px;"></label>
        </div>

        <div class="row-fluid">
            <label class="span3" style="width:150px;">Existing Lists</label>
            <select type="text" style="width:210px;" id="txtExistingList" data-bind="options:AptusMailList,optionsText:'name',optionsValue:'id'"></select>
        </div>

        <div class="row-fluid">
            <label class="span3" style="width:150px;">New/Rename</label>
            <input type="text" style="width:200px;" id="txtnewrenamelist" maxlength="50" />
        </div>

        <div class="row-fluid">
            <label class="span3" style="width:150px;"></label>
            <input type="button" id="btnSaveList" class="btn btn-primary btn-rounded" style="width: 60px;" value="Save" />
            <input type="button" id="btnDelList" class="btn btn-primary btn-rounded" style="width: 60px;" value="Delete" />
            <input type="button" id="btnSyncList" class="btn btn-primary btn-rounded" style="width: 60px; display: none;" value="Sync" />
        </div>

    </div>
</div>


<a id="hylnproceed" href="../Reports/GetFileFromDisk" style="width:100px; display:none; height:25px; font-family:Verdana; font-size:12px; font-style:normal; font-weight:bold; color:Blue; background-color:InfoBackground;">Open or Save</a>
<a style="display:none" id="hlnkRpt" target="_blank"></a>

<div id="ViewAutoReportDialog" title="">
    <iframe id="ViewAutoReportfrm" src="" style="width: 100%; height: 100%;" scrolling="no" frameborder="0"></iframe>
</div>


<a href="#popup" id="PopupWindowletter" data-toggle="modal"></a>
<div aria-hidden="false" aria-labelledby="popupModalLabel" role="dialog" tabindex="-1"
     class="modal hide fade in" id="popup" style="overflow:hidden">
    <div class="modal-header">
        <button aria-hidden="true" id="popupclose" data-dismiss="modal" class="close" type="button">
            &times;
        </button>
        <h3 id="popupModalLabel"></h3>
    </div>
    <div class="modal-body">
        <iframe id="popupscreenletter" width="98%" height="95%" scrolling="no" frameborder="0"></iframe>
    </div>
</div>